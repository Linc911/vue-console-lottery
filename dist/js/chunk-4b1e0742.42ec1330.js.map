{"version":3,"sources":["webpack:///./node_modules/_chart.js@2.7.3@chart.js/src/core/core.interaction.js","webpack:///./node_modules/_color-convert@0.5.3@color-convert/index.js","webpack:///./node_modules/_chart.js@2.7.3@chart.js/src/controllers/controller.bar.js","webpack:///./node_modules/_chart.js@2.7.3@chart.js/src/scales/scale.time.js","webpack:///./node_modules/_vue-chartjs@3.4.0@vue-chartjs/es/mixins/index.js","webpack:///./node_modules/_vue-chartjs@3.4.0@vue-chartjs/es/BaseCharts.js","webpack:///./node_modules/_vue-chartjs@3.4.0@vue-chartjs/es/index.js","webpack:///./node_modules/_chart.js@2.7.3@chart.js/src/core/core.plugins.js","webpack:///./node_modules/_chart.js@2.7.3@chart.js/src/charts/Chart.Radar.js","webpack:///./node_modules/_chart.js@2.7.3@chart.js/src/core/core.js","webpack:///./node_modules/_chart.js@2.7.3@chart.js/src/platforms/platform.basic.js","webpack:///./node_modules/_chart.js@2.7.3@chart.js/src/controllers/controller.polarArea.js","webpack:///./node_modules/_chart.js@2.7.3@chart.js/src/elements/element.arc.js","webpack:///./node_modules/_chart.js@2.7.3@chart.js/src/core/core.element.js","webpack:///./node_modules/_chart.js@2.7.3@chart.js/src/elements/index.js","webpack:///./node_modules/_color-name@1.1.4@color-name/index.js","webpack:///./node_modules/_chart.js@2.7.3@chart.js/src/charts/Chart.PolarArea.js","webpack:///./node_modules/_chart.js@2.7.3@chart.js/src/charts/Chart.Scatter.js","webpack:///./node_modules/_chart.js@2.7.3@chart.js/src/plugins/plugin.legend.js","webpack:///./node_modules/_chart.js@2.7.3@chart.js/src/charts/Chart.Bubble.js","webpack:///./node_modules/_chart.js@2.7.3@chart.js/src/core/core.animation.js","webpack:///./node_modules/_chart.js@2.7.3@chart.js/src/core/core.datasetController.js","webpack:///./node_modules/_chart.js@2.7.3@chart.js/src/core/core.defaults.js","webpack:///./node_modules/_chart.js@2.7.3@chart.js/src/elements/element.rectangle.js","webpack:///./node_modules/_chart.js@2.7.3@chart.js/src/helpers/helpers.easing.js","webpack:///./node_modules/_chart.js@2.7.3@chart.js/src/scales/scale.logarithmic.js","webpack:///./node_modules/_chart.js@2.7.3@chart.js/src/scales/scale.radialLinear.js","webpack:///./node_modules/_chart.js@2.7.3@chart.js/src/core/core.ticks.js","webpack:///./node_modules/_chart.js@2.7.3@chart.js/src/charts/Chart.Doughnut.js","webpack:///./node_modules/_chart.js@2.7.3@chart.js/src/core/core.tooltip.js","webpack:///./node_modules/_chart.js@2.7.3@chart.js/src/elements/element.point.js","webpack:///./node_modules/_chart.js@2.7.3@chart.js/src/controllers/controller.doughnut.js","webpack:///./node_modules/_chart.js@2.7.3@chart.js/src/helpers/index.js","webpack:///./node_modules/_color-convert@0.5.3@color-convert/conversions.js","webpack:///./node_modules/_chart.js@2.7.3@chart.js/src/platforms/platform.js","webpack:///./node_modules/_chart.js@2.7.3@chart.js/src/plugins/index.js","webpack:///./node_modules/_chart.js@2.7.3@chart.js/src/helpers/helpers.options.js","webpack:///./node_modules/_chart.js@2.7.3@chart.js/src/scales/scale.category.js","webpack:///./node_modules/_chart.js@2.7.3@chart.js/src/plugins/plugin.filler.js","webpack:///./node_modules/_chart.js@2.7.3@chart.js/src/core/core.scale.js","webpack:///./node_modules/_chartjs-color-string@0.5.0@chartjs-color-string/color-string.js","webpack:///./node_modules/_chart.js@2.7.3@chart.js/src/chart.js","webpack:///./node_modules/_chart.js@2.7.3@chart.js/src/core/core.helpers.js","webpack:///./node_modules/_chart.js@2.7.3@chart.js/src/core/core.scaleService.js","webpack:///./node_modules/_chart.js@2.7.3@chart.js/src/controllers/controller.radar.js","webpack:///./node_modules/_chart.js@2.7.3@chart.js/src/helpers/helpers.core.js","webpack:///./node_modules/_chart.js@2.7.3@chart.js/src/charts/Chart.Bar.js","webpack:///./node_modules/_chart.js@2.7.3@chart.js/src/helpers/helpers.canvas.js","webpack:///./node_modules/_chart.js@2.7.3@chart.js/src/controllers/controller.scatter.js","webpack:///./node_modules/_chart.js@2.7.3@chart.js/src/elements/element.line.js","webpack:///./node_modules/_chart.js@2.7.3@chart.js/src/core/core.controller.js","webpack:///./node_modules/_chartjs-color@2.2.0@chartjs-color/index.js","webpack:///./node_modules/_chart.js@2.7.3@chart.js/src/plugins/plugin.title.js","webpack:///./node_modules/_chart.js@2.7.3@chart.js/src/scales/scale.linearbase.js","webpack:///./node_modules/_chart.js@2.7.3@chart.js/src/scales/scale.linear.js","webpack:///./node_modules/_chart.js@2.7.3@chart.js/src/charts/Chart.Line.js","webpack:///./node_modules/_chart.js@2.7.3@chart.js/src/controllers/controller.line.js","webpack:///./node_modules/_chart.js@2.7.3@chart.js/src/core/core.layouts.js","webpack:///./node_modules/_chart.js@2.7.3@chart.js/src/platforms/platform.dom.js","webpack:///./node_modules/_chart.js@2.7.3@chart.js/src/core/core.animations.js","webpack:///./node_modules/_chart.js@2.7.3@chart.js/src/controllers/controller.bubble.js"],"names":["helpers","__webpack_require__","getRelativePosition","e","chart","native","x","y","parseVisibleItems","handler","meta","i","j","ilen","jlen","datasets","data","length","isDatasetVisible","getDatasetMeta","element","_view","skip","getIntersectItems","position","elements","inRange","push","getNearestItems","intersect","distanceMetric","minDistance","Number","POSITIVE_INFINITY","nearestItems","center","getCenterPoint","distance","getDistanceMetricForAxis","axis","useX","indexOf","useY","pt1","pt2","deltaX","Math","abs","deltaY","sqrt","pow","indexMode","options","items","forEach","dataset","datasetIndex","_index","module","exports","modes","single","slice","label","index","_datasetIndex","x-axis","point","nearest","sort","a","b","sizeA","getArea","sizeB","ret","intersectsItem","inXRange","inYRange","conversions","convert","Converter","func","arg","Array","prototype","call","arguments","pair","exec","from","to","val","undefined","round","this","convs","routeSpace","space","args","values","getValues","setValues","vals","fspace","defaults","computeMinSampleSize","scale","pixels","prev","curr","min","isHorizontal","width","height","ticks","getTicks","getPixelForTick","computeFitCategoryTraits","ruler","size","ratio","thickness","barThickness","count","stackCount","isNullOrUndef","categoryPercentage","barPercentage","chunk","start","computeFlexCategoryTraits","next","percent","end","_set","hover","mode","scales","xAxes","type","offset","gridLines","offsetGridLines","yAxes","rectangle","borderSkipped","tooltips","callbacks","title","item","yLabel","labels","datasetLabel","xLabel","Chart","controllers","bar","DatasetController","extend","dataElementType","Rectangle","initialize","me","apply","getMeta","stack","getDataset","update","reset","rects","_ruler","getRuler","updateElement","custom","rectangleOptions","_xScale","getScaleForId","xAxisID","_yScale","yAxisID","_model","backgroundColor","valueAtIndexOrDefault","borderColor","borderWidth","updateElementGeometry","pivot","model","vscale","getValueScale","base","getBasePixel","horizontal","vpixels","calculateBarValuePixels","ipixels","calculateBarIndexPixels","head","getValueScaleId","getIndexScaleId","getIndexScale","_getStacks","last","stacked","stacks","getStackCount","getStackIndex","name","left","top","getPixelForValue","imeta","ivalue","value","getRightValue","controller","id","range","stackIndex","valueOrDefault","maxBarThickness","Infinity","draw","canvas","clipArea","ctx","chartArea","isNaN","unclipArea","horizontalBar","moment","window","Scale","scaleService","MIN_INTEGER","MIN_SAFE_INTEGER","MAX_INTEGER","MAX_SAFE_INTEGER","INTERVALS","millisecond","common","steps","second","minute","hour","day","week","month","quarter","year","UNITS","Object","keys","sorter","arrayUnique","hash","out","buildLookupTable","timestamps","max","distribution","time","pos","table","lookup","key","mid","i0","i1","lo","hi","interpolate","skey","sval","tkey","span","momentify","parser","format","isValid","parse","input","startOf","valueOf","determineStepSize","unit","capacity","factor","interval","milliseconds","ceil","determineUnitForAutoTicks","minUnit","determineUnitForFormatting","duration","diff","as","determineMajorUnit","generate","timeOpts","minor","major","stepSize","unitStepSize","weekday","isoWeekday","majorTicksEnabled","enabled","first","add","computeOffsets","upper","lower","right","ticksFromTimestamps","majorUnit","determineLabelFormat","momentDate","hasTime","defaultConfig","bounds","displayFormat","displayFormats","autoSkip","source","TimeScale","Error","mergeTicksOptions","console","warn","rawValue","t","determineDataLimits","timestamp","isObject","endOf","_horizontal","_table","_timestamps","buildTicks","getLabelCapacity","_unit","_majorUnit","_offsets","_labelFormat","getLabelForIndex","tooltipFormat","tickFormatFunction","tick","formatOverride","formats","minorFormat","majorFormat","majorTime","clone","majorTickOpts","tickOpts","formatter","callback","userCallback","convertTicksToLabels","getPixelForOffset","getValueForPixel","pixel","getLabelWidth","ticksOpts","tickLabelWidth","measureText","angle","toRadians","maxRotation","cosRotation","cos","sinRotation","sin","tickFontSize","fontSize","global","defaultFontSize","exampleTime","exampleLabel","innerWidth","floor","registerScaleType","dataHandler","newData","oldData","$data","_chart","newDatasetLabels","map","oldDatasetLabels","oldLabels","JSON","stringify","newLabels","oldDatasetKeys","newDatasetKeys","deletionKeys","filter","attribute","deletionKey","hasOwnProperty","$emit","xLabels","yLabels","destroy","renderChart","chartData","reactiveData","watch","reactiveProp","props","required","mixins","generateChart","chartId","chartType","render","createElement","style","styles","class","cssClasses","attrs","ref","default","String","plugins","_plugins","methods","addPlugin","plugin","generateLegend","chart_default","$refs","getContext","beforeDestroy","Bar","Doughnut","d","__webpack_exports__","_cacheId","register","p","concat","unregister","idx","splice","clear","getAll","notify","hook","descriptor","params","method","descriptors","cache","$plugins","config","opts","_invalidate","Radar","context","responsive","responsiveAnimationDuration","maintainAspectRatio","events","onHover","animationDuration","onClick","defaultColor","defaultFontColor","defaultFontFamily","defaultFontStyle","showLines","layout","padding","bottom","construct","acquireContext","angleLines","display","circular","pointLabels","beginAtZero","animation","animateRotate","animateScale","startAngle","PI","legendCallback","text","join","legend","generateLabels","ds","arc","arcOpts","fill","stroke","bw","fillStyle","strokeStyle","lineWidth","hidden","legendItem","polarArea","Arc","linkScales","noop","starts","_starts","angles","_angles","_updateRadius","countVisibleElements","_computeAngle","each","minSize","outerRadius","innerRadius","cutoutPercentage","radiusLength","getVisibleDatasetCount","animationOpts","centerX","xCenter","centerY","yCenter","datasetStartAngle","getDistanceFromCenterForValue","endAngle","resetRadius","_scale","elementOpts","dataIndex","resolve","Element","inLabelRange","mouseX","vm","radius","hoverRadius","chartX","chartY","pointRelativePosition","getAngleFromPoint","betweenAngles","withinRadius","halfAngle","halfRadius","tooltipPosition","centreAngle","rangeFromCentre","sA","eA","beginPath","closePath","lineJoin","color","view","ease","actual","origin","target","c0","c1","valid","mix","rgbString","isFinite","configuration","_start","transition","hasValue","isNumber","inherits","Line","Point","aliceblue","antiquewhite","aqua","aquamarine","azure","beige","bisque","black","blanchedalmond","blue","blueviolet","brown","burlywood","cadetblue","chartreuse","chocolate","coral","cornflowerblue","cornsilk","crimson","cyan","darkblue","darkcyan","darkgoldenrod","darkgray","darkgreen","darkgrey","darkkhaki","darkmagenta","darkolivegreen","darkorange","darkorchid","darkred","darksalmon","darkseagreen","darkslateblue","darkslategray","darkslategrey","darkturquoise","darkviolet","deeppink","deepskyblue","dimgray","dimgrey","dodgerblue","firebrick","floralwhite","forestgreen","fuchsia","gainsboro","ghostwhite","gold","goldenrod","gray","green","greenyellow","grey","honeydew","hotpink","indianred","indigo","ivory","khaki","lavender","lavenderblush","lawngreen","lemonchiffon","lightblue","lightcoral","lightcyan","lightgoldenrodyellow","lightgray","lightgreen","lightgrey","lightpink","lightsalmon","lightseagreen","lightskyblue","lightslategray","lightslategrey","lightsteelblue","lightyellow","lime","limegreen","linen","magenta","maroon","mediumaquamarine","mediumblue","mediumorchid","mediumpurple","mediumseagreen","mediumslateblue","mediumspringgreen","mediumturquoise","mediumvioletred","midnightblue","mintcream","mistyrose","moccasin","navajowhite","navy","oldlace","olive","olivedrab","orange","orangered","orchid","palegoldenrod","palegreen","paleturquoise","palevioletred","papayawhip","peachpuff","peru","pink","plum","powderblue","purple","rebeccapurple","red","rosybrown","royalblue","saddlebrown","salmon","sandybrown","seagreen","seashell","sienna","silver","skyblue","slateblue","slategray","slategrey","snow","springgreen","steelblue","tan","teal","thistle","tomato","turquoise","violet","wheat","white","whitesmoke","yellow","yellowgreen","PolarArea","Scatter","layouts","getBoxWidth","labelOpts","usePointStyle","SQRT2","boxWidth","fullWidth","reverse","weight","ci","isArray","lineCap","borderCapStyle","lineDash","borderDash","lineDashOffset","borderDashOffset","borderJoinStyle","pointStyle","Legend","legendHitBoxes","doughnutMode","beforeUpdate","maxWidth","maxHeight","margins","beforeSetDimensions","setDimensions","afterSetDimensions","beforeBuildLabels","buildLabels","afterBuildLabels","beforeFit","fit","afterFit","afterUpdate","paddingLeft","paddingTop","paddingRight","paddingBottom","legendItems","globalDefault","fontStyle","fontFamily","labelFont","fontString","hitboxes","font","lineWidths","totalHeight","textAlign","textBaseline","vPadding","columnWidths","totalWidth","currentColWidth","currentColHeight","itemHeight","itemWidth","lineDefault","line","legendWidth","cursor","fontColor","drawLegendBox","save","isLineWidthZero","setLineDash","offSet","drawPoint","strokeRect","fillRect","restore","fillText","textWidth","halfFontSize","xLeft","yMiddle","moveTo","lineTo","handleEvent","changed","lh","hitBox","createNewLegendAndAttach","legendOpts","configure","addBox","_element","beforeInit","mergeIf","removeBox","afterEvent","Bubble","currentStep","numSteps","easing","onAnimationProgress","onAnimationComplete","defineProperty","get","set","arrayEvents","listenArrayEvents","array","listener","_chartjs","listeners","configurable","enumerable","charAt","toUpperCase","res","object","unlistenArrayEvents","stub","datasetElementType","addElements","updateIndex","scaleID","_data","createMetaDataset","createMetaData","metaData","addElementAndReset","buildOrUpdateElements","resyncElements","easingValue","removeHoverStyle","merge","$previousStyle","setHoverStyle","getHoverColor","hoverBackgroundColor","hoverBorderColor","hoverBorderWidth","numMeta","numData","insertElements","onDataPush","onDataPop","pop","onDataShift","shift","onDataSplice","onDataUnshift","scope","isVertical","getBarBounds","x1","x2","y1","y2","halfWidth","halfHeight","signX","signY","barSize","halfStroke","borderLeft","borderRight","borderTop","borderBottom","corners","borders","startCorner","cornerAt","corner","mouseY","effects","linear","easeInQuad","easeOutQuad","easeInOutQuad","easeInCubic","easeOutCubic","easeInOutCubic","easeInQuart","easeOutQuart","easeInOutQuart","easeInQuint","easeOutQuint","easeInOutQuint","easeInSine","easeOutSine","easeInOutSine","easeInExpo","easeOutExpo","easeInOutExpo","easeInCirc","easeOutCirc","easeInOutCirc","easeInElastic","s","asin","easeOutElastic","easeInOutElastic","easeInBack","easeOutBack","easeInOutBack","easeInBounce","easeOutBounce","easeInOutBounce","easingEffects","Ticks","generateTicks","generationOptions","dataRange","exp","significand","tickVal","log10","endExp","endSignificand","minNotZero","precision","lastTick","formatters","logarithmic","LogarithmicScale","IDMatches","hasStacks","valuesPerStack","valuesForType","minVal","maxVal","handleTickRangeOptions","DEFAULT_MIN","DEFAULT_MAX","tickValues","_getFirstTickValue","innerDimension","sign","firstTickValue","getValueOrDefault","globalDefaults","animate","showLabelBackdrop","backdropColor","backdropPaddingY","backdropPaddingX","getValueCount","getPointLabelFontOptions","pointLabelOptions","family","measureLabelSize","w","longestText","h","determineLimits","fitWithPointLabels","textSize","pointPosition","plFont","largestPossibleRadius","furthestLimits","r","l","furthestAngles","_pointLabelSizes","valueCount","getPointPosition","angleRadians","getIndexAngle","toDegrees","hLimits","vLimits","setReductions","drawingArea","setCenterPoint","getTextAlignForAngle","spacing","adjustPointPositionForLabelHeight","drawPointLabels","angleLineOpts","pointLabelOpts","outerDistance","outerPosition","pointLabelPosition","pointLabelFontColor","drawRadiusLine","gridLineOpts","numberOrZero","param","LinearRadialScale","LinearScaleBase","NEGATIVE_INFINITY","getTickLimit","maxTicksLimit","radiusReductionLeft","radiusReductionRight","radiusReductionTop","radiusReductionBottom","leftMovement","rightMovement","topMovement","bottomMovement","maxRight","maxLeft","maxTop","maxBottom","angleMultiplier","startAngleRadians","scalingFactor","distanceFromCenter","thisAngle","getPointPositionForValue","getBasePosition","tickFontStyle","tickFontFamily","tickLabelFont","yCenterOffset","ticksAsNumbers","tickFontColor","translate","rotate","labelWidth","tickValue","delta","logDelta","tickString","maxTick","logTick","toExponential","numDecimal","toFixed","remain","titleFontStyle","titleSpacing","titleMarginBottom","titleFontColor","titleAlign","bodySpacing","bodyFontColor","bodyAlign","footerFontStyle","footerSpacing","footerMarginTop","footerFontColor","footerAlign","yPadding","xPadding","caretPadding","caretSize","cornerRadius","multiKeyBackground","displayColors","beforeTitle","tooltipItems","labelCount","afterTitle","beforeBody","beforeLabel","tooltipItem","labelColor","activeElement","labelTextColor","_options","afterLabel","afterBody","beforeFooter","footer","afterFooter","positioners","average","len","el","eventPosition","nearestElement","distanceBetweenPoints","tp","mergeOpacity","colorString","opacity","alpha","rgbaString","pushOrConcat","toPush","splitNewlines","str","split","createTooltipItem","xScale","yScale","getBaseModel","tooltipOpts","xAlign","yAlign","_bodyFontFamily","bodyFontFamily","_bodyFontStyle","bodyFontStyle","_bodyAlign","bodyFontSize","_titleFontFamily","titleFontFamily","_titleFontStyle","titleFontSize","_titleAlign","_footerFontFamily","footerFontFamily","_footerFontStyle","footerFontSize","_footerAlign","legendColorBackground","getTooltipSize","tooltip","body","combinedBodyLength","reduce","bodyItem","before","lines","after","titleLineCount","footerLineCount","widthPadding","maxLineWidth","determineAlignment","lf","rf","olf","orf","yf","midX","midY","getBackgroundPoint","alignment","paddingAndSize","radiusAndPadding","getBeforeAfterBodyLines","_lastActive","getTitle","getBeforeBody","getBody","bodyItems","getAfterBody","getFooter","existingModel","active","_active","backgroundPoint","tooltipSize","caretX","caretY","labelColors","labelTextColors","_eventPosition","itemSort","dataPoints","drawCaret","tooltipPoint","caretPosition","getCaretPosition","x3","y3","ptX","ptY","tmp","drawTitle","pt","drawBody","xLinePadding","fillLineOfText","drawColorBoxes","textColor","drawFooter","drawBackground","quadraticCurveTo","hasTooltipContent","getElementsAtEventForMode","arrayEquals","xRange","hitRadius","yRange","rotation","errMargin","circumference","dataLabel","doughnut","pie","getRingIndex","ringIndex","availableWidth","availableHeight","contains0","contains90","contains180","contains270","cutout","getMaxBorderWidth","offsetX","offsetY","total","calculateTotal","calculateCircumference","arcs","hoverWidth","rgb2hsl","rgb","g","rgb2hsv","v","rgb2hwb","rgb2cmyk","c","m","k","rgb2keyword","reverseKeywords","rgb2xyz","z","rgb2lab","xyz","rgb2lch","lab2lch","hsl2rgb","hsl","t1","t2","t3","hsl2hsv","sv","hsl2hwb","hsl2cmyk","hsl2keyword","hsv2rgb","hsv","f","q","hsv2hsl","sl","hsv2hwb","hsv2cmyk","hsv2keyword","hwb2rgb","hwb","n","wh","bl","hwb2hsl","hwb2hsv","hwb2cmyk","hwb2keyword","cmyk2rgb","cmyk","cmyk2hsl","cmyk2hsv","cmyk2hwb","cmyk2keyword","xyz2rgb","xyz2lab","xyz2lch","lab2xyz","lab","hr","atan2","lab2rgb","lch2lab","lch","lch2xyz","lch2rgb","keyword2rgb","keyword","cssKeywords","keyword2hsl","keyword2hsv","keyword2hwb","keyword2cmyk","keyword2lab","keyword2xyz","basic","dom","implementation","_enabled","releaseContext","addEventListener","removeEventListener","filler","toLineHeight","matches","match","toPadding","inputs","DatasetScale","getLabels","findIndex","minIndex","maxIndex","valueCategory","offsetAmt","valueWidth","widthOffset","valueHeight","heightOffset","_ticks","horz","valueDimension","propagate","mappers","visible","points","_children","boundary","decodeFill","parseFloat","computeBoundary","scaleBottom","scaleTop","scaleZero","resolveTarget","sources","visited","createMapper","isDrawable","drawArea","curve0","curve1","len0","len1","doFill","mapper","loop","p0","p1","d0","d1","spanGaps","afterDatasetsUpdate","$filler","beforeDatasetDraw","_loop","labelsFromTicks","getLineValue","lineValue","computeTextSize","parseFontOptions","parseLineHeight","lineHeight","drawBorder","drawOnChartArea","drawTicks","tickMarkLength","zeroLineWidth","zeroLineColor","zeroLineBorderDash","zeroLineBorderDashOffset","scaleLabel","labelString","minRotation","mirror","autoSkipPadding","labelOffset","getPadding","longestTextCache","beforeDataLimits","afterDataLimits","beforeBuildTicks","afterBuildTicks","beforeTickToLabelConversion","afterTickToLabelConversion","beforeCalculateTickRotation","calculateTickRotation","afterCalculateTickRotation","tickFont","labelRotation","originalLabelWidth","tickWidth","scaleLabelOpts","isFullWidth","scaleLabelLineHeight","scaleLabelPadding","deltaHeight","largestTextWidth","tallestLabelHeightInLines","numberOfLabelLines","lineSpace","tickPadding","longestLabelWidth","labelHeight","firstLabelWidth","lastLabelWidth","handleMargins","NaN","finalVal","innerHeight","getPixelForDecimal","decimal","valueOffset","getBaseValue","_autoSkip","skipRatio","shouldSkip","maxTicks","optionTicks","tickCount","labelRotationRadians","longestRotatedLabel","result","optionMajorTicks","isRotated","majorTickFontColor","majorTickFont","tl","scaleLabelFontColor","scaleLabelFont","itemsToDraw","axisWidth","xTickStart","xTickEnd","yTickStart","yTickEnd","lineColor","tx1","ty1","tx2","ty2","labelX","labelY","zeroLineIndex","labelYOffset","xLineValue","aliasPixel","labelXOffset","isLeft","yLineValue","glWidth","glColor","glBorderDash","glBorderDashOffset","itemToDraw","lineCount","scaleLabelX","scaleLabelY","halfLineHeight","colorNames","getRgba","string","abbr","hex","rgba","per","parseInt","getHsla","getHwb","getRgb","getHsl","hsla","getAlpha","hexString","hexDouble","percentString","percentaString","hslString","hslaString","hwbString","reverseNames","num","toString","Animation","animationService","Interaction","platform","Tooltip","Title","pluginService","PluginBase","canvasHelpers","layoutService","parseMaxStyle","styleValue","node","parentProperty","valueInPixels","parentNode","isConstrainedValue","getConstraintDimension","domNode","maxStyle","percentageProperty","document","defaultView","_getParentNode","constrainedNode","getComputedStyle","constrainedContainer","hasCNode","hasCContainer","infinity","configMerge","merger","tval","scaleMerge","getScaleDefaults","_merger","slen","where","collection","filterCallback","filtered","findNextWhere","arrayToSearch","startIndex","currentItem","findPreviousWhere","almostEquals","epsilon","almostWhole","rounded","exponent","log","LOG10E","powerOf10","isPowerOf10","degrees","radians","centrePoint","anglePoint","distanceFromXCenter","distanceFromYCenter","radialDistanceFromCenter","pixelWidth","splineCurve","firstPoint","middlePoint","afterPoint","previous","current","d01","d12","s01","s12","fa","fb","EPSILON","splineCurveMonotone","pointBefore","pointCurrent","pointAfter","alphaK","betaK","tauK","squaredMagnitude","pointsWithTangents","deltaK","mK","pointsLen","slopeDeltaX","controlPointPreviousX","controlPointPreviousY","controlPointNextX","controlPointNextY","nextItem","previousItem","niceNum","niceFraction","fraction","requestAnimFrame","requestAnimationFrame","webkitRequestAnimationFrame","mozRequestAnimationFrame","oRequestAnimationFrame","msRequestAnimationFrame","setTimeout","evt","originalEvent","srcElement","boundingRect","getBoundingClientRect","touches","clientX","clientY","getStyle","currentDevicePixelRatio","getConstraintWidth","getConstraintHeight","_calculatePadding","container","parentDimension","parent","host","getMaximumWidth","clientWidth","cw","getMaximumHeight","clientHeight","ch","property","currentStyle","getPropertyValue","retinaScale","forceRatio","pixelRatio","devicePixelRatio","pixelSize","arrayOfThings","gc","garbageCollect","longest","thing","nestedThing","gcLen","numberOfLines","CanvasGradient","error","colorValue","CanvasPattern","saturate","darken","constructors","scaleConstructor","scaleDefaults","getScaleConstructor","updateScaleDefaults","additions","addScalesToLayout","tension","radar","lineElementOptions","lineTension","updateBezierControlPoints","pointElementOptions","pointRadius","pointHitRadius","pointBackgroundColor","pointBorderColor","pointBorderWidth","pointRotation","controlPoints","pointHoverRadius","pointHoverBackgroundColor","pointHoverBorderColor","pointHoverBorderWidth","uid","defaultValue","fn","thisArg","loopable","a0","a1","v0","v1","klen","_mergerIf","setFn","extensions","ChartElement","constructor","Surrogate","__super__","callCallback","fromIndex","getValueAtIndexOrDefault","clearRect","roundedRect","arcTo","rect","edgeLength","xOffset","yOffset","drawImage","leftX","topY","sideSize","area","clip","flip","steppedLine","bezierCurveTo","drawRoundedRectangle","scatter","capBezierPoints","currentVM","globalOptionLineElements","lastDrawnIndex","animations","initConfig","updateConfig","newOptions","ensureScalesHaveIDs","buildOrUpdateScales","positionIsHorizontal","types","instances","aspectRatio","_bufferedRender","bindEvents","resize","initToolTip","stop","cancelAnimation","silent","newWidth","newHeight","newSize","onResize","scalesOptions","scaleOptions","xAxisOptions","yAxisOptions","updated","obj","dtype","dposition","isDefault","scaleType","scaleClass","hasUpdated","buildOrUpdateControllers","newControllers","destroyDatasetMeta","ControllerClass","resetElements","lazy","updateLayout","updateDatasets","lastActive","_bufferedRequest","updateDataset","animationOptions","onComplete","animationObject","easingFunction","stepDecimal","onProgress","addAnimation","boxes","box","drawDatasets","_drawTooltip","drawDataset","getElementAtEvent","getElementsAtEvent","getElementsAtXAxis","getDatasetAtEvent","_meta","unbindEvents","toBase64Image","toDataURL","_chartInstance","_listeners","eventHandler","updateHoverStyle","bufferedRequest","animating","hoverOptions","Controller","Color","lightness","whiteness","setSpace","rgbArray","hslArray","hsvArray","hwbArray","cmykArray","rgbaArray","hslaArray","setChannel","hue","saturation","saturationv","blackness","rgbNumber","luminosity","lum","chan","contrast","color2","lum1","lum2","level","contrastRatio","dark","yiq","light","negate","lighten","desaturate","whiten","blacken","greyscale","clearer","opaquer","mixinColor","color1","w1","w2","toJSON","prop","spaces","maxes","capped","chans","sname","svalues","titleX","titleY","titleFont","createNewTitleBlockAndAttach","titleOpts","titleBlock","niceRange","niceMin","niceMax","numSpaces","minSign","maxSign","setMin","suggestedMin","setMax","suggestedMax","handleDirectionalChanges","numericGeneratorOptions","fixedStepSize","LinearScale","positiveValues","negativeValues","relativePoints","rightValue","lineEnabled","showLine","stepped","cubicInterpolationMode","getPointBackgroundColor","getPointBorderColor","getPointBorderWidth","getPointRotation","pointOptions","calculatePointY","dsMeta","sumPos","sumNeg","stackedRightValue","capControlPoint","halfBorderWidth","filterByPosition","sortByWeight","_tmpIndex_","layoutItem","layoutOptions","leftPadding","rightPadding","topPadding","bottomPadding","leftBoxes","rightBoxes","topBoxes","bottomBoxes","chartAreaBoxes","chartWidth","chartHeight","chartAreaWidth","chartAreaHeight","verticalBoxWidth","horizontalBoxHeight","maxChartAreaWidth","maxChartAreaHeight","minBoxSizes","getMinimumBoxSize","maxHorizontalLeftPadding","maxHorizontalRightPadding","maxVerticalTopPadding","maxVerticalBottomPadding","horizontalBox","boxPadding","verticalBox","totalLeftBoxesWidth","totalRightBoxesWidth","totalTopBoxesHeight","totalBottomBoxesHeight","fitBox","finalFitVerticalBox","leftPaddingAddition","topPaddingAddition","newMaxChartAreaHeight","newMaxChartAreaWidth","placeBox","minBoxSize","minBox","scaleMargin","EXPANDO_KEY","CSS_PREFIX","CSS_RENDER_MONITOR","CSS_RENDER_ANIMATION","ANIMATION_START_EVENTS","EVENT_TYPES","touchstart","touchmove","touchend","pointerenter","pointerdown","pointermove","pointerup","pointerleave","pointerout","readUsedSize","initCanvas","renderHeight","getAttribute","renderWidth","initial","displayWidth","displayHeight","supportsEventListenerOptions","supports","eventListenerOptions","passive","createEvent","nativeEvent","fromNativeEvent","event","throttled","ticking","createResizer","resizer","cls","maxSize","cssText","className","innerHTML","expand","childNodes","shrink","_reset","scrollLeft","scrollTop","onScroll","bind","watchForRender","expando","proxy","renderProxy","animationName","reflow","offsetParent","classList","unwatchForRender","remove","addResizeListener","insertBefore","firstChild","removeResizeListener","removeChild","injectCSS","css","_style","setAttribute","getElementsByTagName","appendChild","createTextNode","keyframes","getElementById","removeAttribute","proxies","addEvent","removeEvent","frameDuration","dropFrames","request","startDigest","startTime","Date","now","framesToDrop","advance","endTime","dataPoint","bubble","_resolveElementOptions","dsIndex"],"mappings":"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","file":"js/chunk-4b1e0742.42ec1330.js","sourcesContent":["'use strict';\n\nvar helpers = require('../helpers/index');\n\n/**\n * Helper function to get relative position for an event\n * @param {Event|IEvent} event - The event to get the position for\n * @param {Chart} chart - The chart\n * @returns {Point} the event position\n */\nfunction getRelativePosition(e, chart) {\n\tif (e.native) {\n\t\treturn {\n\t\t\tx: e.x,\n\t\t\ty: e.y\n\t\t};\n\t}\n\n\treturn helpers.getRelativePosition(e, chart);\n}\n\n/**\n * Helper function to traverse all of the visible elements in the chart\n * @param chart {chart} the chart\n * @param handler {Function} the callback to execute for each visible item\n */\nfunction parseVisibleItems(chart, handler) {\n\tvar datasets = chart.data.datasets;\n\tvar meta, i, j, ilen, jlen;\n\n\tfor (i = 0, ilen = datasets.length; i < ilen; ++i) {\n\t\tif (!chart.isDatasetVisible(i)) {\n\t\t\tcontinue;\n\t\t}\n\n\t\tmeta = chart.getDatasetMeta(i);\n\t\tfor (j = 0, jlen = meta.data.length; j < jlen; ++j) {\n\t\t\tvar element = meta.data[j];\n\t\t\tif (!element._view.skip) {\n\t\t\t\thandler(element);\n\t\t\t}\n\t\t}\n\t}\n}\n\n/**\n * Helper function to get the items that intersect the event position\n * @param items {ChartElement[]} elements to filter\n * @param position {Point} the point to be nearest to\n * @return {ChartElement[]} the nearest items\n */\nfunction getIntersectItems(chart, position) {\n\tvar elements = [];\n\n\tparseVisibleItems(chart, function(element) {\n\t\tif (element.inRange(position.x, position.y)) {\n\t\t\telements.push(element);\n\t\t}\n\t});\n\n\treturn elements;\n}\n\n/**\n * Helper function to get the items nearest to the event position considering all visible items in teh chart\n * @param chart {Chart} the chart to look at elements from\n * @param position {Point} the point to be nearest to\n * @param intersect {Boolean} if true, only consider items that intersect the position\n * @param distanceMetric {Function} function to provide the distance between points\n * @return {ChartElement[]} the nearest items\n */\nfunction getNearestItems(chart, position, intersect, distanceMetric) {\n\tvar minDistance = Number.POSITIVE_INFINITY;\n\tvar nearestItems = [];\n\n\tparseVisibleItems(chart, function(element) {\n\t\tif (intersect && !element.inRange(position.x, position.y)) {\n\t\t\treturn;\n\t\t}\n\n\t\tvar center = element.getCenterPoint();\n\t\tvar distance = distanceMetric(position, center);\n\n\t\tif (distance < minDistance) {\n\t\t\tnearestItems = [element];\n\t\t\tminDistance = distance;\n\t\t} else if (distance === minDistance) {\n\t\t\t// Can have multiple items at the same distance in which case we sort by size\n\t\t\tnearestItems.push(element);\n\t\t}\n\t});\n\n\treturn nearestItems;\n}\n\n/**\n * Get a distance metric function for two points based on the\n * axis mode setting\n * @param {String} axis the axis mode. x|y|xy\n */\nfunction getDistanceMetricForAxis(axis) {\n\tvar useX = axis.indexOf('x') !== -1;\n\tvar useY = axis.indexOf('y') !== -1;\n\n\treturn function(pt1, pt2) {\n\t\tvar deltaX = useX ? Math.abs(pt1.x - pt2.x) : 0;\n\t\tvar deltaY = useY ? Math.abs(pt1.y - pt2.y) : 0;\n\t\treturn Math.sqrt(Math.pow(deltaX, 2) + Math.pow(deltaY, 2));\n\t};\n}\n\nfunction indexMode(chart, e, options) {\n\tvar position = getRelativePosition(e, chart);\n\t// Default axis for index mode is 'x' to match old behaviour\n\toptions.axis = options.axis || 'x';\n\tvar distanceMetric = getDistanceMetricForAxis(options.axis);\n\tvar items = options.intersect ? getIntersectItems(chart, position) : getNearestItems(chart, position, false, distanceMetric);\n\tvar elements = [];\n\n\tif (!items.length) {\n\t\treturn [];\n\t}\n\n\tchart.data.datasets.forEach(function(dataset, datasetIndex) {\n\t\tif (chart.isDatasetVisible(datasetIndex)) {\n\t\t\tvar meta = chart.getDatasetMeta(datasetIndex);\n\t\t\tvar element = meta.data[items[0]._index];\n\n\t\t\t// don't count items that are skipped (null data)\n\t\t\tif (element && !element._view.skip) {\n\t\t\t\telements.push(element);\n\t\t\t}\n\t\t}\n\t});\n\n\treturn elements;\n}\n\n/**\n * @interface IInteractionOptions\n */\n/**\n * If true, only consider items that intersect the point\n * @name IInterfaceOptions#boolean\n * @type Boolean\n */\n\n/**\n * Contains interaction related functions\n * @namespace Chart.Interaction\n */\nmodule.exports = {\n\t// Helper function for different modes\n\tmodes: {\n\t\tsingle: function(chart, e) {\n\t\t\tvar position = getRelativePosition(e, chart);\n\t\t\tvar elements = [];\n\n\t\t\tparseVisibleItems(chart, function(element) {\n\t\t\t\tif (element.inRange(position.x, position.y)) {\n\t\t\t\t\telements.push(element);\n\t\t\t\t\treturn elements;\n\t\t\t\t}\n\t\t\t});\n\n\t\t\treturn elements.slice(0, 1);\n\t\t},\n\n\t\t/**\n\t\t * @function Chart.Interaction.modes.label\n\t\t * @deprecated since version 2.4.0\n\t\t * @todo remove at version 3\n\t\t * @private\n\t\t */\n\t\tlabel: indexMode,\n\n\t\t/**\n\t\t * Returns items at the same index. If the options.intersect parameter is true, we only return items if we intersect something\n\t\t * If the options.intersect mode is false, we find the nearest item and return the items at the same index as that item\n\t\t * @function Chart.Interaction.modes.index\n\t\t * @since v2.4.0\n\t\t * @param chart {chart} the chart we are returning items from\n\t\t * @param e {Event} the event we are find things at\n\t\t * @param options {IInteractionOptions} options to use during interaction\n\t\t * @return {Chart.Element[]} Array of elements that are under the point. If none are found, an empty array is returned\n\t\t */\n\t\tindex: indexMode,\n\n\t\t/**\n\t\t * Returns items in the same dataset. If the options.intersect parameter is true, we only return items if we intersect something\n\t\t * If the options.intersect is false, we find the nearest item and return the items in that dataset\n\t\t * @function Chart.Interaction.modes.dataset\n\t\t * @param chart {chart} the chart we are returning items from\n\t\t * @param e {Event} the event we are find things at\n\t\t * @param options {IInteractionOptions} options to use during interaction\n\t\t * @return {Chart.Element[]} Array of elements that are under the point. If none are found, an empty array is returned\n\t\t */\n\t\tdataset: function(chart, e, options) {\n\t\t\tvar position = getRelativePosition(e, chart);\n\t\t\toptions.axis = options.axis || 'xy';\n\t\t\tvar distanceMetric = getDistanceMetricForAxis(options.axis);\n\t\t\tvar items = options.intersect ? getIntersectItems(chart, position) : getNearestItems(chart, position, false, distanceMetric);\n\n\t\t\tif (items.length > 0) {\n\t\t\t\titems = chart.getDatasetMeta(items[0]._datasetIndex).data;\n\t\t\t}\n\n\t\t\treturn items;\n\t\t},\n\n\t\t/**\n\t\t * @function Chart.Interaction.modes.x-axis\n\t\t * @deprecated since version 2.4.0. Use index mode and intersect == true\n\t\t * @todo remove at version 3\n\t\t * @private\n\t\t */\n\t\t'x-axis': function(chart, e) {\n\t\t\treturn indexMode(chart, e, {intersect: false});\n\t\t},\n\n\t\t/**\n\t\t * Point mode returns all elements that hit test based on the event position\n\t\t * of the event\n\t\t * @function Chart.Interaction.modes.intersect\n\t\t * @param chart {chart} the chart we are returning items from\n\t\t * @param e {Event} the event we are find things at\n\t\t * @return {Chart.Element[]} Array of elements that are under the point. If none are found, an empty array is returned\n\t\t */\n\t\tpoint: function(chart, e) {\n\t\t\tvar position = getRelativePosition(e, chart);\n\t\t\treturn getIntersectItems(chart, position);\n\t\t},\n\n\t\t/**\n\t\t * nearest mode returns the element closest to the point\n\t\t * @function Chart.Interaction.modes.intersect\n\t\t * @param chart {chart} the chart we are returning items from\n\t\t * @param e {Event} the event we are find things at\n\t\t * @param options {IInteractionOptions} options to use\n\t\t * @return {Chart.Element[]} Array of elements that are under the point. If none are found, an empty array is returned\n\t\t */\n\t\tnearest: function(chart, e, options) {\n\t\t\tvar position = getRelativePosition(e, chart);\n\t\t\toptions.axis = options.axis || 'xy';\n\t\t\tvar distanceMetric = getDistanceMetricForAxis(options.axis);\n\t\t\tvar nearestItems = getNearestItems(chart, position, options.intersect, distanceMetric);\n\n\t\t\t// We have multiple items at the same distance from the event. Now sort by smallest\n\t\t\tif (nearestItems.length > 1) {\n\t\t\t\tnearestItems.sort(function(a, b) {\n\t\t\t\t\tvar sizeA = a.getArea();\n\t\t\t\t\tvar sizeB = b.getArea();\n\t\t\t\t\tvar ret = sizeA - sizeB;\n\n\t\t\t\t\tif (ret === 0) {\n\t\t\t\t\t\t// if equal sort by dataset index\n\t\t\t\t\t\tret = a._datasetIndex - b._datasetIndex;\n\t\t\t\t\t}\n\n\t\t\t\t\treturn ret;\n\t\t\t\t});\n\t\t\t}\n\n\t\t\t// Return only 1 item\n\t\t\treturn nearestItems.slice(0, 1);\n\t\t},\n\n\t\t/**\n\t\t * x mode returns the elements that hit-test at the current x coordinate\n\t\t * @function Chart.Interaction.modes.x\n\t\t * @param chart {chart} the chart we are returning items from\n\t\t * @param e {Event} the event we are find things at\n\t\t * @param options {IInteractionOptions} options to use\n\t\t * @return {Chart.Element[]} Array of elements that are under the point. If none are found, an empty array is returned\n\t\t */\n\t\tx: function(chart, e, options) {\n\t\t\tvar position = getRelativePosition(e, chart);\n\t\t\tvar items = [];\n\t\t\tvar intersectsItem = false;\n\n\t\t\tparseVisibleItems(chart, function(element) {\n\t\t\t\tif (element.inXRange(position.x)) {\n\t\t\t\t\titems.push(element);\n\t\t\t\t}\n\n\t\t\t\tif (element.inRange(position.x, position.y)) {\n\t\t\t\t\tintersectsItem = true;\n\t\t\t\t}\n\t\t\t});\n\n\t\t\t// If we want to trigger on an intersect and we don't have any items\n\t\t\t// that intersect the position, return nothing\n\t\t\tif (options.intersect && !intersectsItem) {\n\t\t\t\titems = [];\n\t\t\t}\n\t\t\treturn items;\n\t\t},\n\n\t\t/**\n\t\t * y mode returns the elements that hit-test at the current y coordinate\n\t\t * @function Chart.Interaction.modes.y\n\t\t * @param chart {chart} the chart we are returning items from\n\t\t * @param e {Event} the event we are find things at\n\t\t * @param options {IInteractionOptions} options to use\n\t\t * @return {Chart.Element[]} Array of elements that are under the point. If none are found, an empty array is returned\n\t\t */\n\t\ty: function(chart, e, options) {\n\t\t\tvar position = getRelativePosition(e, chart);\n\t\t\tvar items = [];\n\t\t\tvar intersectsItem = false;\n\n\t\t\tparseVisibleItems(chart, function(element) {\n\t\t\t\tif (element.inYRange(position.y)) {\n\t\t\t\t\titems.push(element);\n\t\t\t\t}\n\n\t\t\t\tif (element.inRange(position.x, position.y)) {\n\t\t\t\t\tintersectsItem = true;\n\t\t\t\t}\n\t\t\t});\n\n\t\t\t// If we want to trigger on an intersect and we don't have any items\n\t\t\t// that intersect the position, return nothing\n\t\t\tif (options.intersect && !intersectsItem) {\n\t\t\t\titems = [];\n\t\t\t}\n\t\t\treturn items;\n\t\t}\n\t}\n};\n","var conversions = require(\"./conversions\");\n\nvar convert = function() {\n   return new Converter();\n}\n\nfor (var func in conversions) {\n  // export Raw versions\n  convert[func + \"Raw\"] =  (function(func) {\n    // accept array or plain args\n    return function(arg) {\n      if (typeof arg == \"number\")\n        arg = Array.prototype.slice.call(arguments);\n      return conversions[func](arg);\n    }\n  })(func);\n\n  var pair = /(\\w+)2(\\w+)/.exec(func),\n      from = pair[1],\n      to = pair[2];\n\n  // export rgb2hsl and [\"rgb\"][\"hsl\"]\n  convert[from] = convert[from] || {};\n\n  convert[from][to] = convert[func] = (function(func) { \n    return function(arg) {\n      if (typeof arg == \"number\")\n        arg = Array.prototype.slice.call(arguments);\n      \n      var val = conversions[func](arg);\n      if (typeof val == \"string\" || val === undefined)\n        return val; // keyword\n\n      for (var i = 0; i < val.length; i++)\n        val[i] = Math.round(val[i]);\n      return val;\n    }\n  })(func);\n}\n\n\n/* Converter does lazy conversion and caching */\nvar Converter = function() {\n   this.convs = {};\n};\n\n/* Either get the values for a space or\n  set the values for a space, depending on args */\nConverter.prototype.routeSpace = function(space, args) {\n   var values = args[0];\n   if (values === undefined) {\n      // color.rgb()\n      return this.getValues(space);\n   }\n   // color.rgb(10, 10, 10)\n   if (typeof values == \"number\") {\n      values = Array.prototype.slice.call(args);        \n   }\n\n   return this.setValues(space, values);\n};\n  \n/* Set the values for a space, invalidating cache */\nConverter.prototype.setValues = function(space, values) {\n   this.space = space;\n   this.convs = {};\n   this.convs[space] = values;\n   return this;\n};\n\n/* Get the values for a space. If there's already\n  a conversion for the space, fetch it, otherwise\n  compute it */\nConverter.prototype.getValues = function(space) {\n   var vals = this.convs[space];\n   if (!vals) {\n      var fspace = this.space,\n          from = this.convs[fspace];\n      vals = convert[fspace][space](from);\n\n      this.convs[space] = vals;\n   }\n  return vals;\n};\n\n[\"rgb\", \"hsl\", \"hsv\", \"cmyk\", \"keyword\"].forEach(function(space) {\n   Converter.prototype[space] = function(vals) {\n      return this.routeSpace(space, arguments);\n   }\n});\n\nmodule.exports = convert;","'use strict';\n\nvar defaults = require('../core/core.defaults');\nvar elements = require('../elements/index');\nvar helpers = require('../helpers/index');\n\ndefaults._set('bar', {\n\thover: {\n\t\tmode: 'label'\n\t},\n\n\tscales: {\n\t\txAxes: [{\n\t\t\ttype: 'category',\n\n\t\t\t// Specific to Bar Controller\n\t\t\tcategoryPercentage: 0.8,\n\t\t\tbarPercentage: 0.9,\n\n\t\t\t// offset settings\n\t\t\toffset: true,\n\n\t\t\t// grid line settings\n\t\t\tgridLines: {\n\t\t\t\toffsetGridLines: true\n\t\t\t}\n\t\t}],\n\n\t\tyAxes: [{\n\t\t\ttype: 'linear'\n\t\t}]\n\t}\n});\n\ndefaults._set('horizontalBar', {\n\thover: {\n\t\tmode: 'index',\n\t\taxis: 'y'\n\t},\n\n\tscales: {\n\t\txAxes: [{\n\t\t\ttype: 'linear',\n\t\t\tposition: 'bottom'\n\t\t}],\n\n\t\tyAxes: [{\n\t\t\tposition: 'left',\n\t\t\ttype: 'category',\n\n\t\t\t// Specific to Horizontal Bar Controller\n\t\t\tcategoryPercentage: 0.8,\n\t\t\tbarPercentage: 0.9,\n\n\t\t\t// offset settings\n\t\t\toffset: true,\n\n\t\t\t// grid line settings\n\t\t\tgridLines: {\n\t\t\t\toffsetGridLines: true\n\t\t\t}\n\t\t}]\n\t},\n\n\telements: {\n\t\trectangle: {\n\t\t\tborderSkipped: 'left'\n\t\t}\n\t},\n\n\ttooltips: {\n\t\tcallbacks: {\n\t\t\ttitle: function(item, data) {\n\t\t\t\t// Pick first xLabel for now\n\t\t\t\tvar title = '';\n\n\t\t\t\tif (item.length > 0) {\n\t\t\t\t\tif (item[0].yLabel) {\n\t\t\t\t\t\ttitle = item[0].yLabel;\n\t\t\t\t\t} else if (data.labels.length > 0 && item[0].index < data.labels.length) {\n\t\t\t\t\t\ttitle = data.labels[item[0].index];\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\treturn title;\n\t\t\t},\n\n\t\t\tlabel: function(item, data) {\n\t\t\t\tvar datasetLabel = data.datasets[item.datasetIndex].label || '';\n\t\t\t\treturn datasetLabel + ': ' + item.xLabel;\n\t\t\t}\n\t\t},\n\t\tmode: 'index',\n\t\taxis: 'y'\n\t}\n});\n\n/**\n * Computes the \"optimal\" sample size to maintain bars equally sized while preventing overlap.\n * @private\n */\nfunction computeMinSampleSize(scale, pixels) {\n\tvar min = scale.isHorizontal() ? scale.width : scale.height;\n\tvar ticks = scale.getTicks();\n\tvar prev, curr, i, ilen;\n\n\tfor (i = 1, ilen = pixels.length; i < ilen; ++i) {\n\t\tmin = Math.min(min, pixels[i] - pixels[i - 1]);\n\t}\n\n\tfor (i = 0, ilen = ticks.length; i < ilen; ++i) {\n\t\tcurr = scale.getPixelForTick(i);\n\t\tmin = i > 0 ? Math.min(min, curr - prev) : min;\n\t\tprev = curr;\n\t}\n\n\treturn min;\n}\n\n/**\n * Computes an \"ideal\" category based on the absolute bar thickness or, if undefined or null,\n * uses the smallest interval (see computeMinSampleSize) that prevents bar overlapping. This\n * mode currently always generates bars equally sized (until we introduce scriptable options?).\n * @private\n */\nfunction computeFitCategoryTraits(index, ruler, options) {\n\tvar thickness = options.barThickness;\n\tvar count = ruler.stackCount;\n\tvar curr = ruler.pixels[index];\n\tvar size, ratio;\n\n\tif (helpers.isNullOrUndef(thickness)) {\n\t\tsize = ruler.min * options.categoryPercentage;\n\t\tratio = options.barPercentage;\n\t} else {\n\t\t// When bar thickness is enforced, category and bar percentages are ignored.\n\t\t// Note(SB): we could add support for relative bar thickness (e.g. barThickness: '50%')\n\t\t// and deprecate barPercentage since this value is ignored when thickness is absolute.\n\t\tsize = thickness * count;\n\t\tratio = 1;\n\t}\n\n\treturn {\n\t\tchunk: size / count,\n\t\tratio: ratio,\n\t\tstart: curr - (size / 2)\n\t};\n}\n\n/**\n * Computes an \"optimal\" category that globally arranges bars side by side (no gap when\n * percentage options are 1), based on the previous and following categories. This mode\n * generates bars with different widths when data are not evenly spaced.\n * @private\n */\nfunction computeFlexCategoryTraits(index, ruler, options) {\n\tvar pixels = ruler.pixels;\n\tvar curr = pixels[index];\n\tvar prev = index > 0 ? pixels[index - 1] : null;\n\tvar next = index < pixels.length - 1 ? pixels[index + 1] : null;\n\tvar percent = options.categoryPercentage;\n\tvar start, size;\n\n\tif (prev === null) {\n\t\t// first data: its size is double based on the next point or,\n\t\t// if it's also the last data, we use the scale end extremity.\n\t\tprev = curr - (next === null ? ruler.end - curr : next - curr);\n\t}\n\n\tif (next === null) {\n\t\t// last data: its size is also double based on the previous point.\n\t\tnext = curr + curr - prev;\n\t}\n\n\tstart = curr - ((curr - prev) / 2) * percent;\n\tsize = ((next - prev) / 2) * percent;\n\n\treturn {\n\t\tchunk: size / ruler.stackCount,\n\t\tratio: options.barPercentage,\n\t\tstart: start\n\t};\n}\n\nmodule.exports = function(Chart) {\n\n\tChart.controllers.bar = Chart.DatasetController.extend({\n\n\t\tdataElementType: elements.Rectangle,\n\n\t\tinitialize: function() {\n\t\t\tvar me = this;\n\t\t\tvar meta;\n\n\t\t\tChart.DatasetController.prototype.initialize.apply(me, arguments);\n\n\t\t\tmeta = me.getMeta();\n\t\t\tmeta.stack = me.getDataset().stack;\n\t\t\tmeta.bar = true;\n\t\t},\n\n\t\tupdate: function(reset) {\n\t\t\tvar me = this;\n\t\t\tvar rects = me.getMeta().data;\n\t\t\tvar i, ilen;\n\n\t\t\tme._ruler = me.getRuler();\n\n\t\t\tfor (i = 0, ilen = rects.length; i < ilen; ++i) {\n\t\t\t\tme.updateElement(rects[i], i, reset);\n\t\t\t}\n\t\t},\n\n\t\tupdateElement: function(rectangle, index, reset) {\n\t\t\tvar me = this;\n\t\t\tvar chart = me.chart;\n\t\t\tvar meta = me.getMeta();\n\t\t\tvar dataset = me.getDataset();\n\t\t\tvar custom = rectangle.custom || {};\n\t\t\tvar rectangleOptions = chart.options.elements.rectangle;\n\n\t\t\trectangle._xScale = me.getScaleForId(meta.xAxisID);\n\t\t\trectangle._yScale = me.getScaleForId(meta.yAxisID);\n\t\t\trectangle._datasetIndex = me.index;\n\t\t\trectangle._index = index;\n\n\t\t\trectangle._model = {\n\t\t\t\tdatasetLabel: dataset.label,\n\t\t\t\tlabel: chart.data.labels[index],\n\t\t\t\tborderSkipped: custom.borderSkipped ? custom.borderSkipped : rectangleOptions.borderSkipped,\n\t\t\t\tbackgroundColor: custom.backgroundColor ? custom.backgroundColor : helpers.valueAtIndexOrDefault(dataset.backgroundColor, index, rectangleOptions.backgroundColor),\n\t\t\t\tborderColor: custom.borderColor ? custom.borderColor : helpers.valueAtIndexOrDefault(dataset.borderColor, index, rectangleOptions.borderColor),\n\t\t\t\tborderWidth: custom.borderWidth ? custom.borderWidth : helpers.valueAtIndexOrDefault(dataset.borderWidth, index, rectangleOptions.borderWidth)\n\t\t\t};\n\n\t\t\tme.updateElementGeometry(rectangle, index, reset);\n\n\t\t\trectangle.pivot();\n\t\t},\n\n\t\t/**\n\t\t * @private\n\t\t */\n\t\tupdateElementGeometry: function(rectangle, index, reset) {\n\t\t\tvar me = this;\n\t\t\tvar model = rectangle._model;\n\t\t\tvar vscale = me.getValueScale();\n\t\t\tvar base = vscale.getBasePixel();\n\t\t\tvar horizontal = vscale.isHorizontal();\n\t\t\tvar ruler = me._ruler || me.getRuler();\n\t\t\tvar vpixels = me.calculateBarValuePixels(me.index, index);\n\t\t\tvar ipixels = me.calculateBarIndexPixels(me.index, index, ruler);\n\n\t\t\tmodel.horizontal = horizontal;\n\t\t\tmodel.base = reset ? base : vpixels.base;\n\t\t\tmodel.x = horizontal ? reset ? base : vpixels.head : ipixels.center;\n\t\t\tmodel.y = horizontal ? ipixels.center : reset ? base : vpixels.head;\n\t\t\tmodel.height = horizontal ? ipixels.size : undefined;\n\t\t\tmodel.width = horizontal ? undefined : ipixels.size;\n\t\t},\n\n\t\t/**\n\t\t * @private\n\t\t */\n\t\tgetValueScaleId: function() {\n\t\t\treturn this.getMeta().yAxisID;\n\t\t},\n\n\t\t/**\n\t\t * @private\n\t\t */\n\t\tgetIndexScaleId: function() {\n\t\t\treturn this.getMeta().xAxisID;\n\t\t},\n\n\t\t/**\n\t\t * @private\n\t\t */\n\t\tgetValueScale: function() {\n\t\t\treturn this.getScaleForId(this.getValueScaleId());\n\t\t},\n\n\t\t/**\n\t\t * @private\n\t\t */\n\t\tgetIndexScale: function() {\n\t\t\treturn this.getScaleForId(this.getIndexScaleId());\n\t\t},\n\n\t\t/**\n\t\t * Returns the stacks based on groups and bar visibility.\n\t\t * @param {Number} [last] - The dataset index\n\t\t * @returns {Array} The stack list\n\t\t * @private\n\t\t */\n\t\t_getStacks: function(last) {\n\t\t\tvar me = this;\n\t\t\tvar chart = me.chart;\n\t\t\tvar scale = me.getIndexScale();\n\t\t\tvar stacked = scale.options.stacked;\n\t\t\tvar ilen = last === undefined ? chart.data.datasets.length : last + 1;\n\t\t\tvar stacks = [];\n\t\t\tvar i, meta;\n\n\t\t\tfor (i = 0; i < ilen; ++i) {\n\t\t\t\tmeta = chart.getDatasetMeta(i);\n\t\t\t\tif (meta.bar && chart.isDatasetVisible(i) &&\n\t\t\t\t\t(stacked === false ||\n\t\t\t\t\t(stacked === true && stacks.indexOf(meta.stack) === -1) ||\n\t\t\t\t\t(stacked === undefined && (meta.stack === undefined || stacks.indexOf(meta.stack) === -1)))) {\n\t\t\t\t\tstacks.push(meta.stack);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn stacks;\n\t\t},\n\n\t\t/**\n\t\t * Returns the effective number of stacks based on groups and bar visibility.\n\t\t * @private\n\t\t */\n\t\tgetStackCount: function() {\n\t\t\treturn this._getStacks().length;\n\t\t},\n\n\t\t/**\n\t\t * Returns the stack index for the given dataset based on groups and bar visibility.\n\t\t * @param {Number} [datasetIndex] - The dataset index\n\t\t * @param {String} [name] - The stack name to find\n\t\t * @returns {Number} The stack index\n\t\t * @private\n\t\t */\n\t\tgetStackIndex: function(datasetIndex, name) {\n\t\t\tvar stacks = this._getStacks(datasetIndex);\n\t\t\tvar index = (name !== undefined)\n\t\t\t\t? stacks.indexOf(name)\n\t\t\t\t: -1; // indexOf returns -1 if element is not present\n\n\t\t\treturn (index === -1)\n\t\t\t\t? stacks.length - 1\n\t\t\t\t: index;\n\t\t},\n\n\t\t/**\n\t\t * @private\n\t\t */\n\t\tgetRuler: function() {\n\t\t\tvar me = this;\n\t\t\tvar scale = me.getIndexScale();\n\t\t\tvar stackCount = me.getStackCount();\n\t\t\tvar datasetIndex = me.index;\n\t\t\tvar isHorizontal = scale.isHorizontal();\n\t\t\tvar start = isHorizontal ? scale.left : scale.top;\n\t\t\tvar end = start + (isHorizontal ? scale.width : scale.height);\n\t\t\tvar pixels = [];\n\t\t\tvar i, ilen, min;\n\n\t\t\tfor (i = 0, ilen = me.getMeta().data.length; i < ilen; ++i) {\n\t\t\t\tpixels.push(scale.getPixelForValue(null, i, datasetIndex));\n\t\t\t}\n\n\t\t\tmin = helpers.isNullOrUndef(scale.options.barThickness)\n\t\t\t\t? computeMinSampleSize(scale, pixels)\n\t\t\t\t: -1;\n\n\t\t\treturn {\n\t\t\t\tmin: min,\n\t\t\t\tpixels: pixels,\n\t\t\t\tstart: start,\n\t\t\t\tend: end,\n\t\t\t\tstackCount: stackCount,\n\t\t\t\tscale: scale\n\t\t\t};\n\t\t},\n\n\t\t/**\n\t\t * Note: pixel values are not clamped to the scale area.\n\t\t * @private\n\t\t */\n\t\tcalculateBarValuePixels: function(datasetIndex, index) {\n\t\t\tvar me = this;\n\t\t\tvar chart = me.chart;\n\t\t\tvar meta = me.getMeta();\n\t\t\tvar scale = me.getValueScale();\n\t\t\tvar datasets = chart.data.datasets;\n\t\t\tvar value = scale.getRightValue(datasets[datasetIndex].data[index]);\n\t\t\tvar stacked = scale.options.stacked;\n\t\t\tvar stack = meta.stack;\n\t\t\tvar start = 0;\n\t\t\tvar i, imeta, ivalue, base, head, size;\n\n\t\t\tif (stacked || (stacked === undefined && stack !== undefined)) {\n\t\t\t\tfor (i = 0; i < datasetIndex; ++i) {\n\t\t\t\t\timeta = chart.getDatasetMeta(i);\n\n\t\t\t\t\tif (imeta.bar &&\n\t\t\t\t\t\timeta.stack === stack &&\n\t\t\t\t\t\timeta.controller.getValueScaleId() === scale.id &&\n\t\t\t\t\t\tchart.isDatasetVisible(i)) {\n\n\t\t\t\t\t\tivalue = scale.getRightValue(datasets[i].data[index]);\n\t\t\t\t\t\tif ((value < 0 && ivalue < 0) || (value >= 0 && ivalue > 0)) {\n\t\t\t\t\t\t\tstart += ivalue;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tbase = scale.getPixelForValue(start);\n\t\t\thead = scale.getPixelForValue(start + value);\n\t\t\tsize = (head - base) / 2;\n\n\t\t\treturn {\n\t\t\t\tsize: size,\n\t\t\t\tbase: base,\n\t\t\t\thead: head,\n\t\t\t\tcenter: head + size / 2\n\t\t\t};\n\t\t},\n\n\t\t/**\n\t\t * @private\n\t\t */\n\t\tcalculateBarIndexPixels: function(datasetIndex, index, ruler) {\n\t\t\tvar me = this;\n\t\t\tvar options = ruler.scale.options;\n\t\t\tvar range = options.barThickness === 'flex'\n\t\t\t\t? computeFlexCategoryTraits(index, ruler, options)\n\t\t\t\t: computeFitCategoryTraits(index, ruler, options);\n\n\t\t\tvar stackIndex = me.getStackIndex(datasetIndex, me.getMeta().stack);\n\t\t\tvar center = range.start + (range.chunk * stackIndex) + (range.chunk / 2);\n\t\t\tvar size = Math.min(\n\t\t\t\thelpers.valueOrDefault(options.maxBarThickness, Infinity),\n\t\t\t\trange.chunk * range.ratio);\n\n\t\t\treturn {\n\t\t\t\tbase: center - size / 2,\n\t\t\t\thead: center + size / 2,\n\t\t\t\tcenter: center,\n\t\t\t\tsize: size\n\t\t\t};\n\t\t},\n\n\t\tdraw: function() {\n\t\t\tvar me = this;\n\t\t\tvar chart = me.chart;\n\t\t\tvar scale = me.getValueScale();\n\t\t\tvar rects = me.getMeta().data;\n\t\t\tvar dataset = me.getDataset();\n\t\t\tvar ilen = rects.length;\n\t\t\tvar i = 0;\n\n\t\t\thelpers.canvas.clipArea(chart.ctx, chart.chartArea);\n\n\t\t\tfor (; i < ilen; ++i) {\n\t\t\t\tif (!isNaN(scale.getRightValue(dataset.data[i]))) {\n\t\t\t\t\trects[i].draw();\n\t\t\t\t}\n\t\t\t}\n\n\t\t\thelpers.canvas.unclipArea(chart.ctx);\n\t\t},\n\t});\n\n\tChart.controllers.horizontalBar = Chart.controllers.bar.extend({\n\t\t/**\n\t\t * @private\n\t\t */\n\t\tgetValueScaleId: function() {\n\t\t\treturn this.getMeta().xAxisID;\n\t\t},\n\n\t\t/**\n\t\t * @private\n\t\t */\n\t\tgetIndexScaleId: function() {\n\t\t\treturn this.getMeta().yAxisID;\n\t\t}\n\t});\n};\n","/* global window: false */\n'use strict';\n\nvar moment = require('moment');\nmoment = typeof moment === 'function' ? moment : window.moment;\n\nvar defaults = require('../core/core.defaults');\nvar helpers = require('../helpers/index');\nvar Scale = require('../core/core.scale');\nvar scaleService = require('../core/core.scaleService');\n\n// Integer constants are from the ES6 spec.\nvar MIN_INTEGER = Number.MIN_SAFE_INTEGER || -9007199254740991;\nvar MAX_INTEGER = Number.MAX_SAFE_INTEGER || 9007199254740991;\n\nvar INTERVALS = {\n\tmillisecond: {\n\t\tcommon: true,\n\t\tsize: 1,\n\t\tsteps: [1, 2, 5, 10, 20, 50, 100, 250, 500]\n\t},\n\tsecond: {\n\t\tcommon: true,\n\t\tsize: 1000,\n\t\tsteps: [1, 2, 5, 10, 15, 30]\n\t},\n\tminute: {\n\t\tcommon: true,\n\t\tsize: 60000,\n\t\tsteps: [1, 2, 5, 10, 15, 30]\n\t},\n\thour: {\n\t\tcommon: true,\n\t\tsize: 3600000,\n\t\tsteps: [1, 2, 3, 6, 12]\n\t},\n\tday: {\n\t\tcommon: true,\n\t\tsize: 86400000,\n\t\tsteps: [1, 2, 5]\n\t},\n\tweek: {\n\t\tcommon: false,\n\t\tsize: 604800000,\n\t\tsteps: [1, 2, 3, 4]\n\t},\n\tmonth: {\n\t\tcommon: true,\n\t\tsize: 2.628e9,\n\t\tsteps: [1, 2, 3]\n\t},\n\tquarter: {\n\t\tcommon: false,\n\t\tsize: 7.884e9,\n\t\tsteps: [1, 2, 3, 4]\n\t},\n\tyear: {\n\t\tcommon: true,\n\t\tsize: 3.154e10\n\t}\n};\n\nvar UNITS = Object.keys(INTERVALS);\n\nfunction sorter(a, b) {\n\treturn a - b;\n}\n\nfunction arrayUnique(items) {\n\tvar hash = {};\n\tvar out = [];\n\tvar i, ilen, item;\n\n\tfor (i = 0, ilen = items.length; i < ilen; ++i) {\n\t\titem = items[i];\n\t\tif (!hash[item]) {\n\t\t\thash[item] = true;\n\t\t\tout.push(item);\n\t\t}\n\t}\n\n\treturn out;\n}\n\n/**\n * Returns an array of {time, pos} objects used to interpolate a specific `time` or position\n * (`pos`) on the scale, by searching entries before and after the requested value. `pos` is\n * a decimal between 0 and 1: 0 being the start of the scale (left or top) and 1 the other\n * extremity (left + width or top + height). Note that it would be more optimized to directly\n * store pre-computed pixels, but the scale dimensions are not guaranteed at the time we need\n * to create the lookup table. The table ALWAYS contains at least two items: min and max.\n *\n * @param {Number[]} timestamps - timestamps sorted from lowest to highest.\n * @param {String} distribution - If 'linear', timestamps will be spread linearly along the min\n * and max range, so basically, the table will contains only two items: {min, 0} and {max, 1}.\n * If 'series', timestamps will be positioned at the same distance from each other. In this\n * case, only timestamps that break the time linearity are registered, meaning that in the\n * best case, all timestamps are linear, the table contains only min and max.\n */\nfunction buildLookupTable(timestamps, min, max, distribution) {\n\tif (distribution === 'linear' || !timestamps.length) {\n\t\treturn [\n\t\t\t{time: min, pos: 0},\n\t\t\t{time: max, pos: 1}\n\t\t];\n\t}\n\n\tvar table = [];\n\tvar items = [min];\n\tvar i, ilen, prev, curr, next;\n\n\tfor (i = 0, ilen = timestamps.length; i < ilen; ++i) {\n\t\tcurr = timestamps[i];\n\t\tif (curr > min && curr < max) {\n\t\t\titems.push(curr);\n\t\t}\n\t}\n\n\titems.push(max);\n\n\tfor (i = 0, ilen = items.length; i < ilen; ++i) {\n\t\tnext = items[i + 1];\n\t\tprev = items[i - 1];\n\t\tcurr = items[i];\n\n\t\t// only add points that breaks the scale linearity\n\t\tif (prev === undefined || next === undefined || Math.round((next + prev) / 2) !== curr) {\n\t\t\ttable.push({time: curr, pos: i / (ilen - 1)});\n\t\t}\n\t}\n\n\treturn table;\n}\n\n// @see adapted from http://www.anujgakhar.com/2014/03/01/binary-search-in-javascript/\nfunction lookup(table, key, value) {\n\tvar lo = 0;\n\tvar hi = table.length - 1;\n\tvar mid, i0, i1;\n\n\twhile (lo >= 0 && lo <= hi) {\n\t\tmid = (lo + hi) >> 1;\n\t\ti0 = table[mid - 1] || null;\n\t\ti1 = table[mid];\n\n\t\tif (!i0) {\n\t\t\t// given value is outside table (before first item)\n\t\t\treturn {lo: null, hi: i1};\n\t\t} else if (i1[key] < value) {\n\t\t\tlo = mid + 1;\n\t\t} else if (i0[key] > value) {\n\t\t\thi = mid - 1;\n\t\t} else {\n\t\t\treturn {lo: i0, hi: i1};\n\t\t}\n\t}\n\n\t// given value is outside table (after last item)\n\treturn {lo: i1, hi: null};\n}\n\n/**\n * Linearly interpolates the given source `value` using the table items `skey` values and\n * returns the associated `tkey` value. For example, interpolate(table, 'time', 42, 'pos')\n * returns the position for a timestamp equal to 42. If value is out of bounds, values at\n * index [0, 1] or [n - 1, n] are used for the interpolation.\n */\nfunction interpolate(table, skey, sval, tkey) {\n\tvar range = lookup(table, skey, sval);\n\n\t// Note: the lookup table ALWAYS contains at least 2 items (min and max)\n\tvar prev = !range.lo ? table[0] : !range.hi ? table[table.length - 2] : range.lo;\n\tvar next = !range.lo ? table[1] : !range.hi ? table[table.length - 1] : range.hi;\n\n\tvar span = next[skey] - prev[skey];\n\tvar ratio = span ? (sval - prev[skey]) / span : 0;\n\tvar offset = (next[tkey] - prev[tkey]) * ratio;\n\n\treturn prev[tkey] + offset;\n}\n\n/**\n * Convert the given value to a moment object using the given time options.\n * @see http://momentjs.com/docs/#/parsing/\n */\nfunction momentify(value, options) {\n\tvar parser = options.parser;\n\tvar format = options.parser || options.format;\n\n\tif (typeof parser === 'function') {\n\t\treturn parser(value);\n\t}\n\n\tif (typeof value === 'string' && typeof format === 'string') {\n\t\treturn moment(value, format);\n\t}\n\n\tif (!(value instanceof moment)) {\n\t\tvalue = moment(value);\n\t}\n\n\tif (value.isValid()) {\n\t\treturn value;\n\t}\n\n\t// Labels are in an incompatible moment format and no `parser` has been provided.\n\t// The user might still use the deprecated `format` option to convert his inputs.\n\tif (typeof format === 'function') {\n\t\treturn format(value);\n\t}\n\n\treturn value;\n}\n\nfunction parse(input, scale) {\n\tif (helpers.isNullOrUndef(input)) {\n\t\treturn null;\n\t}\n\n\tvar options = scale.options.time;\n\tvar value = momentify(scale.getRightValue(input), options);\n\tif (!value.isValid()) {\n\t\treturn null;\n\t}\n\n\tif (options.round) {\n\t\tvalue.startOf(options.round);\n\t}\n\n\treturn value.valueOf();\n}\n\n/**\n * Returns the number of unit to skip to be able to display up to `capacity` number of ticks\n * in `unit` for the given `min` / `max` range and respecting the interval steps constraints.\n */\nfunction determineStepSize(min, max, unit, capacity) {\n\tvar range = max - min;\n\tvar interval = INTERVALS[unit];\n\tvar milliseconds = interval.size;\n\tvar steps = interval.steps;\n\tvar i, ilen, factor;\n\n\tif (!steps) {\n\t\treturn Math.ceil(range / (capacity * milliseconds));\n\t}\n\n\tfor (i = 0, ilen = steps.length; i < ilen; ++i) {\n\t\tfactor = steps[i];\n\t\tif (Math.ceil(range / (milliseconds * factor)) <= capacity) {\n\t\t\tbreak;\n\t\t}\n\t}\n\n\treturn factor;\n}\n\n/**\n * Figures out what unit results in an appropriate number of auto-generated ticks\n */\nfunction determineUnitForAutoTicks(minUnit, min, max, capacity) {\n\tvar ilen = UNITS.length;\n\tvar i, interval, factor;\n\n\tfor (i = UNITS.indexOf(minUnit); i < ilen - 1; ++i) {\n\t\tinterval = INTERVALS[UNITS[i]];\n\t\tfactor = interval.steps ? interval.steps[interval.steps.length - 1] : MAX_INTEGER;\n\n\t\tif (interval.common && Math.ceil((max - min) / (factor * interval.size)) <= capacity) {\n\t\t\treturn UNITS[i];\n\t\t}\n\t}\n\n\treturn UNITS[ilen - 1];\n}\n\n/**\n * Figures out what unit to format a set of ticks with\n */\nfunction determineUnitForFormatting(ticks, minUnit, min, max) {\n\tvar duration = moment.duration(moment(max).diff(moment(min)));\n\tvar ilen = UNITS.length;\n\tvar i, unit;\n\n\tfor (i = ilen - 1; i >= UNITS.indexOf(minUnit); i--) {\n\t\tunit = UNITS[i];\n\t\tif (INTERVALS[unit].common && duration.as(unit) >= ticks.length) {\n\t\t\treturn unit;\n\t\t}\n\t}\n\n\treturn UNITS[minUnit ? UNITS.indexOf(minUnit) : 0];\n}\n\nfunction determineMajorUnit(unit) {\n\tfor (var i = UNITS.indexOf(unit) + 1, ilen = UNITS.length; i < ilen; ++i) {\n\t\tif (INTERVALS[UNITS[i]].common) {\n\t\t\treturn UNITS[i];\n\t\t}\n\t}\n}\n\n/**\n * Generates a maximum of `capacity` timestamps between min and max, rounded to the\n * `minor` unit, aligned on the `major` unit and using the given scale time `options`.\n * Important: this method can return ticks outside the min and max range, it's the\n * responsibility of the calling code to clamp values if needed.\n */\nfunction generate(min, max, capacity, options) {\n\tvar timeOpts = options.time;\n\tvar minor = timeOpts.unit || determineUnitForAutoTicks(timeOpts.minUnit, min, max, capacity);\n\tvar major = determineMajorUnit(minor);\n\tvar stepSize = helpers.valueOrDefault(timeOpts.stepSize, timeOpts.unitStepSize);\n\tvar weekday = minor === 'week' ? timeOpts.isoWeekday : false;\n\tvar majorTicksEnabled = options.ticks.major.enabled;\n\tvar interval = INTERVALS[minor];\n\tvar first = moment(min);\n\tvar last = moment(max);\n\tvar ticks = [];\n\tvar time;\n\n\tif (!stepSize) {\n\t\tstepSize = determineStepSize(min, max, minor, capacity);\n\t}\n\n\t// For 'week' unit, handle the first day of week option\n\tif (weekday) {\n\t\tfirst = first.isoWeekday(weekday);\n\t\tlast = last.isoWeekday(weekday);\n\t}\n\n\t// Align first/last ticks on unit\n\tfirst = first.startOf(weekday ? 'day' : minor);\n\tlast = last.startOf(weekday ? 'day' : minor);\n\n\t// Make sure that the last tick include max\n\tif (last < max) {\n\t\tlast.add(1, minor);\n\t}\n\n\ttime = moment(first);\n\n\tif (majorTicksEnabled && major && !weekday && !timeOpts.round) {\n\t\t// Align the first tick on the previous `minor` unit aligned on the `major` unit:\n\t\t// we first aligned time on the previous `major` unit then add the number of full\n\t\t// stepSize there is between first and the previous major time.\n\t\ttime.startOf(major);\n\t\ttime.add(~~((first - time) / (interval.size * stepSize)) * stepSize, minor);\n\t}\n\n\tfor (; time < last; time.add(stepSize, minor)) {\n\t\tticks.push(+time);\n\t}\n\n\tticks.push(+time);\n\n\treturn ticks;\n}\n\n/**\n * Returns the right and left offsets from edges in the form of {left, right}.\n * Offsets are added when the `offset` option is true.\n */\nfunction computeOffsets(table, ticks, min, max, options) {\n\tvar left = 0;\n\tvar right = 0;\n\tvar upper, lower;\n\n\tif (options.offset && ticks.length) {\n\t\tif (!options.time.min) {\n\t\t\tupper = ticks.length > 1 ? ticks[1] : max;\n\t\t\tlower = ticks[0];\n\t\t\tleft = (\n\t\t\t\tinterpolate(table, 'time', upper, 'pos') -\n\t\t\t\tinterpolate(table, 'time', lower, 'pos')\n\t\t\t) / 2;\n\t\t}\n\t\tif (!options.time.max) {\n\t\t\tupper = ticks[ticks.length - 1];\n\t\t\tlower = ticks.length > 1 ? ticks[ticks.length - 2] : min;\n\t\t\tright = (\n\t\t\t\tinterpolate(table, 'time', upper, 'pos') -\n\t\t\t\tinterpolate(table, 'time', lower, 'pos')\n\t\t\t) / 2;\n\t\t}\n\t}\n\n\treturn {left: left, right: right};\n}\n\nfunction ticksFromTimestamps(values, majorUnit) {\n\tvar ticks = [];\n\tvar i, ilen, value, major;\n\n\tfor (i = 0, ilen = values.length; i < ilen; ++i) {\n\t\tvalue = values[i];\n\t\tmajor = majorUnit ? value === +moment(value).startOf(majorUnit) : false;\n\n\t\tticks.push({\n\t\t\tvalue: value,\n\t\t\tmajor: major\n\t\t});\n\t}\n\n\treturn ticks;\n}\n\nfunction determineLabelFormat(data, timeOpts) {\n\tvar i, momentDate, hasTime;\n\tvar ilen = data.length;\n\n\t// find the label with the most parts (milliseconds, minutes, etc.)\n\t// format all labels with the same level of detail as the most specific label\n\tfor (i = 0; i < ilen; i++) {\n\t\tmomentDate = momentify(data[i], timeOpts);\n\t\tif (momentDate.millisecond() !== 0) {\n\t\t\treturn 'MMM D, YYYY h:mm:ss.SSS a';\n\t\t}\n\t\tif (momentDate.second() !== 0 || momentDate.minute() !== 0 || momentDate.hour() !== 0) {\n\t\t\thasTime = true;\n\t\t}\n\t}\n\tif (hasTime) {\n\t\treturn 'MMM D, YYYY h:mm:ss a';\n\t}\n\treturn 'MMM D, YYYY';\n}\n\nmodule.exports = function() {\n\n\tvar defaultConfig = {\n\t\tposition: 'bottom',\n\n\t\t/**\n\t\t * Data distribution along the scale:\n\t\t * - 'linear': data are spread according to their time (distances can vary),\n\t\t * - 'series': data are spread at the same distance from each other.\n\t\t * @see https://github.com/chartjs/Chart.js/pull/4507\n\t\t * @since 2.7.0\n\t\t */\n\t\tdistribution: 'linear',\n\n\t\t/**\n\t\t * Scale boundary strategy (bypassed by min/max time options)\n\t\t * - `data`: make sure data are fully visible, ticks outside are removed\n\t\t * - `ticks`: make sure ticks are fully visible, data outside are truncated\n\t\t * @see https://github.com/chartjs/Chart.js/pull/4556\n\t\t * @since 2.7.0\n\t\t */\n\t\tbounds: 'data',\n\n\t\ttime: {\n\t\t\tparser: false, // false == a pattern string from http://momentjs.com/docs/#/parsing/string-format/ or a custom callback that converts its argument to a moment\n\t\t\tformat: false, // DEPRECATED false == date objects, moment object, callback or a pattern string from http://momentjs.com/docs/#/parsing/string-format/\n\t\t\tunit: false, // false == automatic or override with week, month, year, etc.\n\t\t\tround: false, // none, or override with week, month, year, etc.\n\t\t\tdisplayFormat: false, // DEPRECATED\n\t\t\tisoWeekday: false, // override week start day - see http://momentjs.com/docs/#/get-set/iso-weekday/\n\t\t\tminUnit: 'millisecond',\n\n\t\t\t// defaults to unit's corresponding unitFormat below or override using pattern string from http://momentjs.com/docs/#/displaying/format/\n\t\t\tdisplayFormats: {\n\t\t\t\tmillisecond: 'h:mm:ss.SSS a', // 11:20:01.123 AM,\n\t\t\t\tsecond: 'h:mm:ss a', // 11:20:01 AM\n\t\t\t\tminute: 'h:mm a', // 11:20 AM\n\t\t\t\thour: 'hA', // 5PM\n\t\t\t\tday: 'MMM D', // Sep 4\n\t\t\t\tweek: 'll', // Week 46, or maybe \"[W]WW - YYYY\" ?\n\t\t\t\tmonth: 'MMM YYYY', // Sept 2015\n\t\t\t\tquarter: '[Q]Q - YYYY', // Q3\n\t\t\t\tyear: 'YYYY' // 2015\n\t\t\t},\n\t\t},\n\t\tticks: {\n\t\t\tautoSkip: false,\n\n\t\t\t/**\n\t\t\t * Ticks generation input values:\n\t\t\t * - 'auto': generates \"optimal\" ticks based on scale size and time options.\n\t\t\t * - 'data': generates ticks from data (including labels from data {t|x|y} objects).\n\t\t\t * - 'labels': generates ticks from user given `data.labels` values ONLY.\n\t\t\t * @see https://github.com/chartjs/Chart.js/pull/4507\n\t\t\t * @since 2.7.0\n\t\t\t */\n\t\t\tsource: 'auto',\n\n\t\t\tmajor: {\n\t\t\t\tenabled: false\n\t\t\t}\n\t\t}\n\t};\n\n\tvar TimeScale = Scale.extend({\n\t\tinitialize: function() {\n\t\t\tif (!moment) {\n\t\t\t\tthrow new Error('Chart.js - Moment.js could not be found! You must include it before Chart.js to use the time scale. Download at https://momentjs.com');\n\t\t\t}\n\n\t\t\tthis.mergeTicksOptions();\n\n\t\t\tScale.prototype.initialize.call(this);\n\t\t},\n\n\t\tupdate: function() {\n\t\t\tvar me = this;\n\t\t\tvar options = me.options;\n\n\t\t\t// DEPRECATIONS: output a message only one time per update\n\t\t\tif (options.time && options.time.format) {\n\t\t\t\tconsole.warn('options.time.format is deprecated and replaced by options.time.parser.');\n\t\t\t}\n\n\t\t\treturn Scale.prototype.update.apply(me, arguments);\n\t\t},\n\n\t\t/**\n\t\t * Allows data to be referenced via 't' attribute\n\t\t */\n\t\tgetRightValue: function(rawValue) {\n\t\t\tif (rawValue && rawValue.t !== undefined) {\n\t\t\t\trawValue = rawValue.t;\n\t\t\t}\n\t\t\treturn Scale.prototype.getRightValue.call(this, rawValue);\n\t\t},\n\n\t\tdetermineDataLimits: function() {\n\t\t\tvar me = this;\n\t\t\tvar chart = me.chart;\n\t\t\tvar timeOpts = me.options.time;\n\t\t\tvar unit = timeOpts.unit || 'day';\n\t\t\tvar min = MAX_INTEGER;\n\t\t\tvar max = MIN_INTEGER;\n\t\t\tvar timestamps = [];\n\t\t\tvar datasets = [];\n\t\t\tvar labels = [];\n\t\t\tvar i, j, ilen, jlen, data, timestamp;\n\n\t\t\t// Convert labels to timestamps\n\t\t\tfor (i = 0, ilen = chart.data.labels.length; i < ilen; ++i) {\n\t\t\t\tlabels.push(parse(chart.data.labels[i], me));\n\t\t\t}\n\n\t\t\t// Convert data to timestamps\n\t\t\tfor (i = 0, ilen = (chart.data.datasets || []).length; i < ilen; ++i) {\n\t\t\t\tif (chart.isDatasetVisible(i)) {\n\t\t\t\t\tdata = chart.data.datasets[i].data;\n\n\t\t\t\t\t// Let's consider that all data have the same format.\n\t\t\t\t\tif (helpers.isObject(data[0])) {\n\t\t\t\t\t\tdatasets[i] = [];\n\n\t\t\t\t\t\tfor (j = 0, jlen = data.length; j < jlen; ++j) {\n\t\t\t\t\t\t\ttimestamp = parse(data[j], me);\n\t\t\t\t\t\t\ttimestamps.push(timestamp);\n\t\t\t\t\t\t\tdatasets[i][j] = timestamp;\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\ttimestamps.push.apply(timestamps, labels);\n\t\t\t\t\t\tdatasets[i] = labels.slice(0);\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tdatasets[i] = [];\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (labels.length) {\n\t\t\t\t// Sort labels **after** data have been converted\n\t\t\t\tlabels = arrayUnique(labels).sort(sorter);\n\t\t\t\tmin = Math.min(min, labels[0]);\n\t\t\t\tmax = Math.max(max, labels[labels.length - 1]);\n\t\t\t}\n\n\t\t\tif (timestamps.length) {\n\t\t\t\ttimestamps = arrayUnique(timestamps).sort(sorter);\n\t\t\t\tmin = Math.min(min, timestamps[0]);\n\t\t\t\tmax = Math.max(max, timestamps[timestamps.length - 1]);\n\t\t\t}\n\n\t\t\tmin = parse(timeOpts.min, me) || min;\n\t\t\tmax = parse(timeOpts.max, me) || max;\n\n\t\t\t// In case there is no valid min/max, set limits based on unit time option\n\t\t\tmin = min === MAX_INTEGER ? +moment().startOf(unit) : min;\n\t\t\tmax = max === MIN_INTEGER ? +moment().endOf(unit) + 1 : max;\n\n\t\t\t// Make sure that max is strictly higher than min (required by the lookup table)\n\t\t\tme.min = Math.min(min, max);\n\t\t\tme.max = Math.max(min + 1, max);\n\n\t\t\t// PRIVATE\n\t\t\tme._horizontal = me.isHorizontal();\n\t\t\tme._table = [];\n\t\t\tme._timestamps = {\n\t\t\t\tdata: timestamps,\n\t\t\t\tdatasets: datasets,\n\t\t\t\tlabels: labels\n\t\t\t};\n\t\t},\n\n\t\tbuildTicks: function() {\n\t\t\tvar me = this;\n\t\t\tvar min = me.min;\n\t\t\tvar max = me.max;\n\t\t\tvar options = me.options;\n\t\t\tvar timeOpts = options.time;\n\t\t\tvar timestamps = [];\n\t\t\tvar ticks = [];\n\t\t\tvar i, ilen, timestamp;\n\n\t\t\tswitch (options.ticks.source) {\n\t\t\tcase 'data':\n\t\t\t\ttimestamps = me._timestamps.data;\n\t\t\t\tbreak;\n\t\t\tcase 'labels':\n\t\t\t\ttimestamps = me._timestamps.labels;\n\t\t\t\tbreak;\n\t\t\tcase 'auto':\n\t\t\tdefault:\n\t\t\t\ttimestamps = generate(min, max, me.getLabelCapacity(min), options);\n\t\t\t}\n\n\t\t\tif (options.bounds === 'ticks' && timestamps.length) {\n\t\t\t\tmin = timestamps[0];\n\t\t\t\tmax = timestamps[timestamps.length - 1];\n\t\t\t}\n\n\t\t\t// Enforce limits with user min/max options\n\t\t\tmin = parse(timeOpts.min, me) || min;\n\t\t\tmax = parse(timeOpts.max, me) || max;\n\n\t\t\t// Remove ticks outside the min/max range\n\t\t\tfor (i = 0, ilen = timestamps.length; i < ilen; ++i) {\n\t\t\t\ttimestamp = timestamps[i];\n\t\t\t\tif (timestamp >= min && timestamp <= max) {\n\t\t\t\t\tticks.push(timestamp);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tme.min = min;\n\t\t\tme.max = max;\n\n\t\t\t// PRIVATE\n\t\t\tme._unit = timeOpts.unit || determineUnitForFormatting(ticks, timeOpts.minUnit, me.min, me.max);\n\t\t\tme._majorUnit = determineMajorUnit(me._unit);\n\t\t\tme._table = buildLookupTable(me._timestamps.data, min, max, options.distribution);\n\t\t\tme._offsets = computeOffsets(me._table, ticks, min, max, options);\n\t\t\tme._labelFormat = determineLabelFormat(me._timestamps.data, timeOpts);\n\n\t\t\treturn ticksFromTimestamps(ticks, me._majorUnit);\n\t\t},\n\n\t\tgetLabelForIndex: function(index, datasetIndex) {\n\t\t\tvar me = this;\n\t\t\tvar data = me.chart.data;\n\t\t\tvar timeOpts = me.options.time;\n\t\t\tvar label = data.labels && index < data.labels.length ? data.labels[index] : '';\n\t\t\tvar value = data.datasets[datasetIndex].data[index];\n\n\t\t\tif (helpers.isObject(value)) {\n\t\t\t\tlabel = me.getRightValue(value);\n\t\t\t}\n\t\t\tif (timeOpts.tooltipFormat) {\n\t\t\t\treturn momentify(label, timeOpts).format(timeOpts.tooltipFormat);\n\t\t\t}\n\t\t\tif (typeof label === 'string') {\n\t\t\t\treturn label;\n\t\t\t}\n\n\t\t\treturn momentify(label, timeOpts).format(me._labelFormat);\n\t\t},\n\n\t\t/**\n\t\t * Function to format an individual tick mark\n\t\t * @private\n\t\t */\n\t\ttickFormatFunction: function(tick, index, ticks, formatOverride) {\n\t\t\tvar me = this;\n\t\t\tvar options = me.options;\n\t\t\tvar time = tick.valueOf();\n\t\t\tvar formats = options.time.displayFormats;\n\t\t\tvar minorFormat = formats[me._unit];\n\t\t\tvar majorUnit = me._majorUnit;\n\t\t\tvar majorFormat = formats[majorUnit];\n\t\t\tvar majorTime = tick.clone().startOf(majorUnit).valueOf();\n\t\t\tvar majorTickOpts = options.ticks.major;\n\t\t\tvar major = majorTickOpts.enabled && majorUnit && majorFormat && time === majorTime;\n\t\t\tvar label = tick.format(formatOverride ? formatOverride : major ? majorFormat : minorFormat);\n\t\t\tvar tickOpts = major ? majorTickOpts : options.ticks.minor;\n\t\t\tvar formatter = helpers.valueOrDefault(tickOpts.callback, tickOpts.userCallback);\n\n\t\t\treturn formatter ? formatter(label, index, ticks) : label;\n\t\t},\n\n\t\tconvertTicksToLabels: function(ticks) {\n\t\t\tvar labels = [];\n\t\t\tvar i, ilen;\n\n\t\t\tfor (i = 0, ilen = ticks.length; i < ilen; ++i) {\n\t\t\t\tlabels.push(this.tickFormatFunction(moment(ticks[i].value), i, ticks));\n\t\t\t}\n\n\t\t\treturn labels;\n\t\t},\n\n\t\t/**\n\t\t * @private\n\t\t */\n\t\tgetPixelForOffset: function(time) {\n\t\t\tvar me = this;\n\t\t\tvar size = me._horizontal ? me.width : me.height;\n\t\t\tvar start = me._horizontal ? me.left : me.top;\n\t\t\tvar pos = interpolate(me._table, 'time', time, 'pos');\n\n\t\t\treturn start + size * (me._offsets.left + pos) / (me._offsets.left + 1 + me._offsets.right);\n\t\t},\n\n\t\tgetPixelForValue: function(value, index, datasetIndex) {\n\t\t\tvar me = this;\n\t\t\tvar time = null;\n\n\t\t\tif (index !== undefined && datasetIndex !== undefined) {\n\t\t\t\ttime = me._timestamps.datasets[datasetIndex][index];\n\t\t\t}\n\n\t\t\tif (time === null) {\n\t\t\t\ttime = parse(value, me);\n\t\t\t}\n\n\t\t\tif (time !== null) {\n\t\t\t\treturn me.getPixelForOffset(time);\n\t\t\t}\n\t\t},\n\n\t\tgetPixelForTick: function(index) {\n\t\t\tvar ticks = this.getTicks();\n\t\t\treturn index >= 0 && index < ticks.length ?\n\t\t\t\tthis.getPixelForOffset(ticks[index].value) :\n\t\t\t\tnull;\n\t\t},\n\n\t\tgetValueForPixel: function(pixel) {\n\t\t\tvar me = this;\n\t\t\tvar size = me._horizontal ? me.width : me.height;\n\t\t\tvar start = me._horizontal ? me.left : me.top;\n\t\t\tvar pos = (size ? (pixel - start) / size : 0) * (me._offsets.left + 1 + me._offsets.left) - me._offsets.right;\n\t\t\tvar time = interpolate(me._table, 'pos', pos, 'time');\n\n\t\t\treturn moment(time);\n\t\t},\n\n\t\t/**\n\t\t * Crude approximation of what the label width might be\n\t\t * @private\n\t\t */\n\t\tgetLabelWidth: function(label) {\n\t\t\tvar me = this;\n\t\t\tvar ticksOpts = me.options.ticks;\n\t\t\tvar tickLabelWidth = me.ctx.measureText(label).width;\n\t\t\tvar angle = helpers.toRadians(ticksOpts.maxRotation);\n\t\t\tvar cosRotation = Math.cos(angle);\n\t\t\tvar sinRotation = Math.sin(angle);\n\t\t\tvar tickFontSize = helpers.valueOrDefault(ticksOpts.fontSize, defaults.global.defaultFontSize);\n\n\t\t\treturn (tickLabelWidth * cosRotation) + (tickFontSize * sinRotation);\n\t\t},\n\n\t\t/**\n\t\t * @private\n\t\t */\n\t\tgetLabelCapacity: function(exampleTime) {\n\t\t\tvar me = this;\n\n\t\t\tvar formatOverride = me.options.time.displayFormats.millisecond;\t// Pick the longest format for guestimation\n\n\t\t\tvar exampleLabel = me.tickFormatFunction(moment(exampleTime), 0, [], formatOverride);\n\t\t\tvar tickLabelWidth = me.getLabelWidth(exampleLabel);\n\t\t\tvar innerWidth = me.isHorizontal() ? me.width : me.height;\n\n\t\t\tvar capacity = Math.floor(innerWidth / tickLabelWidth);\n\t\t\treturn capacity > 0 ? capacity : 1;\n\t\t}\n\t});\n\n\tscaleService.registerScaleType('time', TimeScale, defaultConfig);\n};\n","function dataHandler(newData, oldData) {\n  if (oldData) {\n    var chart = this.$data._chart;\n    var newDatasetLabels = newData.datasets.map(function (dataset) {\n      return dataset.label;\n    });\n    var oldDatasetLabels = oldData.datasets.map(function (dataset) {\n      return dataset.label;\n    });\n    var oldLabels = JSON.stringify(oldDatasetLabels);\n    var newLabels = JSON.stringify(newDatasetLabels);\n\n    if (newLabels === oldLabels && oldData.datasets.length === newData.datasets.length) {\n      newData.datasets.forEach(function (dataset, i) {\n        var oldDatasetKeys = Object.keys(oldData.datasets[i]);\n        var newDatasetKeys = Object.keys(dataset);\n        var deletionKeys = oldDatasetKeys.filter(function (key) {\n          return key !== '_meta' && newDatasetKeys.indexOf(key) === -1;\n        });\n        deletionKeys.forEach(function (deletionKey) {\n          delete chart.data.datasets[i][deletionKey];\n        });\n\n        for (var attribute in dataset) {\n          if (dataset.hasOwnProperty(attribute)) {\n            chart.data.datasets[i][attribute] = dataset[attribute];\n          }\n        }\n      });\n\n      if (newData.hasOwnProperty('labels')) {\n        chart.data.labels = newData.labels;\n        this.$emit('labels:update');\n      }\n\n      if (newData.hasOwnProperty('xLabels')) {\n        chart.data.xLabels = newData.xLabels;\n        this.$emit('xlabels:update');\n      }\n\n      if (newData.hasOwnProperty('yLabels')) {\n        chart.data.yLabels = newData.yLabels;\n        this.$emit('ylabels:update');\n      }\n\n      chart.update();\n      this.$emit('chart:update');\n    } else {\n      if (chart) {\n        chart.destroy();\n        this.$emit('chart:destroy');\n      }\n\n      this.renderChart(this.chartData, this.options);\n      this.$emit('chart:render');\n    }\n  } else {\n    if (this.$data._chart) {\n      this.$data._chart.destroy();\n\n      this.$emit('chart:destroy');\n    }\n\n    this.renderChart(this.chartData, this.options);\n    this.$emit('chart:render');\n  }\n}\n\nexport var reactiveData = {\n  data: function data() {\n    return {\n      chartData: null\n    };\n  },\n  watch: {\n    'chartData': dataHandler\n  }\n};\nexport var reactiveProp = {\n  props: {\n    chartData: {\n      required: true\n    }\n  },\n  watch: {\n    'chartData': dataHandler\n  }\n};\nexport default {\n  reactiveData: reactiveData,\n  reactiveProp: reactiveProp\n};","import Chart from 'chart.js';\nexport function generateChart(chartId, chartType) {\n  return {\n    render: function render(createElement) {\n      return createElement('div', {\n        style: this.styles,\n        class: this.cssClasses\n      }, [createElement('canvas', {\n        attrs: {\n          id: this.chartId,\n          width: this.width,\n          height: this.height\n        },\n        ref: 'canvas'\n      })]);\n    },\n    props: {\n      chartId: {\n        default: chartId,\n        type: String\n      },\n      width: {\n        default: 400,\n        type: Number\n      },\n      height: {\n        default: 400,\n        type: Number\n      },\n      cssClasses: {\n        type: String,\n        default: ''\n      },\n      styles: {\n        type: Object\n      },\n      plugins: {\n        type: Array,\n        default: function _default() {\n          return [];\n        }\n      }\n    },\n    data: function data() {\n      return {\n        _chart: null,\n        _plugins: this.plugins\n      };\n    },\n    methods: {\n      addPlugin: function addPlugin(plugin) {\n        this.$data._plugins.push(plugin);\n      },\n      generateLegend: function generateLegend() {\n        if (this.$data._chart) {\n          return this.$data._chart.generateLegend();\n        }\n      },\n      renderChart: function renderChart(data, options) {\n        if (this.$data._chart) this.$data._chart.destroy();\n        this.$data._chart = new Chart(this.$refs.canvas.getContext('2d'), {\n          type: chartType,\n          data: data,\n          options: options,\n          plugins: this.$data._plugins\n        });\n      }\n    },\n    beforeDestroy: function beforeDestroy() {\n      if (this.$data._chart) {\n        this.$data._chart.destroy();\n      }\n    }\n  };\n}\nexport var Bar = generateChart('bar-chart', 'bar');\nexport var HorizontalBar = generateChart('horizontalbar-chart', 'horizontalBar');\nexport var Doughnut = generateChart('doughnut-chart', 'doughnut');\nexport var Line = generateChart('line-chart', 'line');\nexport var Pie = generateChart('pie-chart', 'pie');\nexport var PolarArea = generateChart('polar-chart', 'polarArea');\nexport var Radar = generateChart('radar-chart', 'radar');\nexport var Bubble = generateChart('bubble-chart', 'bubble');\nexport var Scatter = generateChart('scatter-chart', 'scatter');\nexport default {\n  Bar: Bar,\n  HorizontalBar: HorizontalBar,\n  Doughnut: Doughnut,\n  Line: Line,\n  Pie: Pie,\n  PolarArea: PolarArea,\n  Radar: Radar,\n  Bubble: Bubble,\n  Scatter: Scatter\n};","import mixins from './mixins/index.js';\nimport { Bar, HorizontalBar, Doughnut, Line, Pie, PolarArea, Radar, Bubble, Scatter, generateChart } from './BaseCharts';\nvar VueCharts = {\n  Bar: Bar,\n  HorizontalBar: HorizontalBar,\n  Doughnut: Doughnut,\n  Line: Line,\n  Pie: Pie,\n  PolarArea: PolarArea,\n  Radar: Radar,\n  Bubble: Bubble,\n  Scatter: Scatter,\n  mixins: mixins,\n  generateChart: generateChart,\n  render: function render() {\n    return console.error('[vue-chartjs]: This is not a vue component. It is the whole object containing all vue components. Please import the named export or access the components over the dot notation. For more info visit https://vue-chartjs.org/#/home?id=quick-start');\n  }\n};\nexport default VueCharts;\nexport { VueCharts, Bar, HorizontalBar, Doughnut, Line, Pie, PolarArea, Radar, Bubble, Scatter, mixins, generateChart };","'use strict';\n\nvar defaults = require('./core.defaults');\nvar helpers = require('../helpers/index');\n\ndefaults._set('global', {\n\tplugins: {}\n});\n\n/**\n * The plugin service singleton\n * @namespace Chart.plugins\n * @since 2.1.0\n */\nmodule.exports = {\n\t/**\n\t * Globally registered plugins.\n\t * @private\n\t */\n\t_plugins: [],\n\n\t/**\n\t * This identifier is used to invalidate the descriptors cache attached to each chart\n\t * when a global plugin is registered or unregistered. In this case, the cache ID is\n\t * incremented and descriptors are regenerated during following API calls.\n\t * @private\n\t */\n\t_cacheId: 0,\n\n\t/**\n\t * Registers the given plugin(s) if not already registered.\n\t * @param {Array|Object} plugins plugin instance(s).\n\t */\n\tregister: function(plugins) {\n\t\tvar p = this._plugins;\n\t\t([]).concat(plugins).forEach(function(plugin) {\n\t\t\tif (p.indexOf(plugin) === -1) {\n\t\t\t\tp.push(plugin);\n\t\t\t}\n\t\t});\n\n\t\tthis._cacheId++;\n\t},\n\n\t/**\n\t * Unregisters the given plugin(s) only if registered.\n\t * @param {Array|Object} plugins plugin instance(s).\n\t */\n\tunregister: function(plugins) {\n\t\tvar p = this._plugins;\n\t\t([]).concat(plugins).forEach(function(plugin) {\n\t\t\tvar idx = p.indexOf(plugin);\n\t\t\tif (idx !== -1) {\n\t\t\t\tp.splice(idx, 1);\n\t\t\t}\n\t\t});\n\n\t\tthis._cacheId++;\n\t},\n\n\t/**\n\t * Remove all registered plugins.\n\t * @since 2.1.5\n\t */\n\tclear: function() {\n\t\tthis._plugins = [];\n\t\tthis._cacheId++;\n\t},\n\n\t/**\n\t * Returns the number of registered plugins?\n\t * @returns {Number}\n\t * @since 2.1.5\n\t */\n\tcount: function() {\n\t\treturn this._plugins.length;\n\t},\n\n\t/**\n\t * Returns all registered plugin instances.\n\t * @returns {Array} array of plugin objects.\n\t * @since 2.1.5\n\t */\n\tgetAll: function() {\n\t\treturn this._plugins;\n\t},\n\n\t/**\n\t * Calls enabled plugins for `chart` on the specified hook and with the given args.\n\t * This method immediately returns as soon as a plugin explicitly returns false. The\n\t * returned value can be used, for instance, to interrupt the current action.\n\t * @param {Object} chart - The chart instance for which plugins should be called.\n\t * @param {String} hook - The name of the plugin method to call (e.g. 'beforeUpdate').\n\t * @param {Array} [args] - Extra arguments to apply to the hook call.\n\t * @returns {Boolean} false if any of the plugins return false, else returns true.\n\t */\n\tnotify: function(chart, hook, args) {\n\t\tvar descriptors = this.descriptors(chart);\n\t\tvar ilen = descriptors.length;\n\t\tvar i, descriptor, plugin, params, method;\n\n\t\tfor (i = 0; i < ilen; ++i) {\n\t\t\tdescriptor = descriptors[i];\n\t\t\tplugin = descriptor.plugin;\n\t\t\tmethod = plugin[hook];\n\t\t\tif (typeof method === 'function') {\n\t\t\t\tparams = [chart].concat(args || []);\n\t\t\t\tparams.push(descriptor.options);\n\t\t\t\tif (method.apply(plugin, params) === false) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn true;\n\t},\n\n\t/**\n\t * Returns descriptors of enabled plugins for the given chart.\n\t * @returns {Array} [{ plugin, options }]\n\t * @private\n\t */\n\tdescriptors: function(chart) {\n\t\tvar cache = chart.$plugins || (chart.$plugins = {});\n\t\tif (cache.id === this._cacheId) {\n\t\t\treturn cache.descriptors;\n\t\t}\n\n\t\tvar plugins = [];\n\t\tvar descriptors = [];\n\t\tvar config = (chart && chart.config) || {};\n\t\tvar options = (config.options && config.options.plugins) || {};\n\n\t\tthis._plugins.concat(config.plugins || []).forEach(function(plugin) {\n\t\t\tvar idx = plugins.indexOf(plugin);\n\t\t\tif (idx !== -1) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tvar id = plugin.id;\n\t\t\tvar opts = options[id];\n\t\t\tif (opts === false) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (opts === true) {\n\t\t\t\topts = helpers.clone(defaults.global.plugins[id]);\n\t\t\t}\n\n\t\t\tplugins.push(plugin);\n\t\t\tdescriptors.push({\n\t\t\t\tplugin: plugin,\n\t\t\t\toptions: opts || {}\n\t\t\t});\n\t\t});\n\n\t\tcache.descriptors = descriptors;\n\t\tcache.id = this._cacheId;\n\t\treturn descriptors;\n\t},\n\n\t/**\n\t * Invalidates cache for the given chart: descriptors hold a reference on plugin option,\n\t * but in some cases, this reference can be changed by the user when updating options.\n\t * https://github.com/chartjs/Chart.js/issues/5111#issuecomment-355934167\n\t * @private\n\t */\n\t_invalidate: function(chart) {\n\t\tdelete chart.$plugins;\n\t}\n};\n\n/**\n * Plugin extension hooks.\n * @interface IPlugin\n * @since 2.1.0\n */\n/**\n * @method IPlugin#beforeInit\n * @desc Called before initializing `chart`.\n * @param {Chart.Controller} chart - The chart instance.\n * @param {Object} options - The plugin options.\n */\n/**\n * @method IPlugin#afterInit\n * @desc Called after `chart` has been initialized and before the first update.\n * @param {Chart.Controller} chart - The chart instance.\n * @param {Object} options - The plugin options.\n */\n/**\n * @method IPlugin#beforeUpdate\n * @desc Called before updating `chart`. If any plugin returns `false`, the update\n * is cancelled (and thus subsequent render(s)) until another `update` is triggered.\n * @param {Chart.Controller} chart - The chart instance.\n * @param {Object} options - The plugin options.\n * @returns {Boolean} `false` to cancel the chart update.\n */\n/**\n * @method IPlugin#afterUpdate\n * @desc Called after `chart` has been updated and before rendering. Note that this\n * hook will not be called if the chart update has been previously cancelled.\n * @param {Chart.Controller} chart - The chart instance.\n * @param {Object} options - The plugin options.\n */\n/**\n * @method IPlugin#beforeDatasetsUpdate\n * @desc Called before updating the `chart` datasets. If any plugin returns `false`,\n * the datasets update is cancelled until another `update` is triggered.\n * @param {Chart.Controller} chart - The chart instance.\n * @param {Object} options - The plugin options.\n * @returns {Boolean} false to cancel the datasets update.\n * @since version 2.1.5\n*/\n/**\n * @method IPlugin#afterDatasetsUpdate\n * @desc Called after the `chart` datasets have been updated. Note that this hook\n * will not be called if the datasets update has been previously cancelled.\n * @param {Chart.Controller} chart - The chart instance.\n * @param {Object} options - The plugin options.\n * @since version 2.1.5\n */\n/**\n * @method IPlugin#beforeDatasetUpdate\n * @desc Called before updating the `chart` dataset at the given `args.index`. If any plugin\n * returns `false`, the datasets update is cancelled until another `update` is triggered.\n * @param {Chart} chart - The chart instance.\n * @param {Object} args - The call arguments.\n * @param {Number} args.index - The dataset index.\n * @param {Object} args.meta - The dataset metadata.\n * @param {Object} options - The plugin options.\n * @returns {Boolean} `false` to cancel the chart datasets drawing.\n */\n/**\n * @method IPlugin#afterDatasetUpdate\n * @desc Called after the `chart` datasets at the given `args.index` has been updated. Note\n * that this hook will not be called if the datasets update has been previously cancelled.\n * @param {Chart} chart - The chart instance.\n * @param {Object} args - The call arguments.\n * @param {Number} args.index - The dataset index.\n * @param {Object} args.meta - The dataset metadata.\n * @param {Object} options - The plugin options.\n */\n/**\n * @method IPlugin#beforeLayout\n * @desc Called before laying out `chart`. If any plugin returns `false`,\n * the layout update is cancelled until another `update` is triggered.\n * @param {Chart.Controller} chart - The chart instance.\n * @param {Object} options - The plugin options.\n * @returns {Boolean} `false` to cancel the chart layout.\n */\n/**\n * @method IPlugin#afterLayout\n * @desc Called after the `chart` has been layed out. Note that this hook will not\n * be called if the layout update has been previously cancelled.\n * @param {Chart.Controller} chart - The chart instance.\n * @param {Object} options - The plugin options.\n */\n/**\n * @method IPlugin#beforeRender\n * @desc Called before rendering `chart`. If any plugin returns `false`,\n * the rendering is cancelled until another `render` is triggered.\n * @param {Chart.Controller} chart - The chart instance.\n * @param {Object} options - The plugin options.\n * @returns {Boolean} `false` to cancel the chart rendering.\n */\n/**\n * @method IPlugin#afterRender\n * @desc Called after the `chart` has been fully rendered (and animation completed). Note\n * that this hook will not be called if the rendering has been previously cancelled.\n * @param {Chart.Controller} chart - The chart instance.\n * @param {Object} options - The plugin options.\n */\n/**\n * @method IPlugin#beforeDraw\n * @desc Called before drawing `chart` at every animation frame specified by the given\n * easing value. If any plugin returns `false`, the frame drawing is cancelled until\n * another `render` is triggered.\n * @param {Chart.Controller} chart - The chart instance.\n * @param {Number} easingValue - The current animation value, between 0.0 and 1.0.\n * @param {Object} options - The plugin options.\n * @returns {Boolean} `false` to cancel the chart drawing.\n */\n/**\n * @method IPlugin#afterDraw\n * @desc Called after the `chart` has been drawn for the specific easing value. Note\n * that this hook will not be called if the drawing has been previously cancelled.\n * @param {Chart.Controller} chart - The chart instance.\n * @param {Number} easingValue - The current animation value, between 0.0 and 1.0.\n * @param {Object} options - The plugin options.\n */\n/**\n * @method IPlugin#beforeDatasetsDraw\n * @desc Called before drawing the `chart` datasets. If any plugin returns `false`,\n * the datasets drawing is cancelled until another `render` is triggered.\n * @param {Chart.Controller} chart - The chart instance.\n * @param {Number} easingValue - The current animation value, between 0.0 and 1.0.\n * @param {Object} options - The plugin options.\n * @returns {Boolean} `false` to cancel the chart datasets drawing.\n */\n/**\n * @method IPlugin#afterDatasetsDraw\n * @desc Called after the `chart` datasets have been drawn. Note that this hook\n * will not be called if the datasets drawing has been previously cancelled.\n * @param {Chart.Controller} chart - The chart instance.\n * @param {Number} easingValue - The current animation value, between 0.0 and 1.0.\n * @param {Object} options - The plugin options.\n */\n/**\n * @method IPlugin#beforeDatasetDraw\n * @desc Called before drawing the `chart` dataset at the given `args.index` (datasets\n * are drawn in the reverse order). If any plugin returns `false`, the datasets drawing\n * is cancelled until another `render` is triggered.\n * @param {Chart} chart - The chart instance.\n * @param {Object} args - The call arguments.\n * @param {Number} args.index - The dataset index.\n * @param {Object} args.meta - The dataset metadata.\n * @param {Number} args.easingValue - The current animation value, between 0.0 and 1.0.\n * @param {Object} options - The plugin options.\n * @returns {Boolean} `false` to cancel the chart datasets drawing.\n */\n/**\n * @method IPlugin#afterDatasetDraw\n * @desc Called after the `chart` datasets at the given `args.index` have been drawn\n * (datasets are drawn in the reverse order). Note that this hook will not be called\n * if the datasets drawing has been previously cancelled.\n * @param {Chart} chart - The chart instance.\n * @param {Object} args - The call arguments.\n * @param {Number} args.index - The dataset index.\n * @param {Object} args.meta - The dataset metadata.\n * @param {Number} args.easingValue - The current animation value, between 0.0 and 1.0.\n * @param {Object} options - The plugin options.\n */\n/**\n * @method IPlugin#beforeTooltipDraw\n * @desc Called before drawing the `tooltip`. If any plugin returns `false`,\n * the tooltip drawing is cancelled until another `render` is triggered.\n * @param {Chart} chart - The chart instance.\n * @param {Object} args - The call arguments.\n * @param {Object} args.tooltip - The tooltip.\n * @param {Number} args.easingValue - The current animation value, between 0.0 and 1.0.\n * @param {Object} options - The plugin options.\n * @returns {Boolean} `false` to cancel the chart tooltip drawing.\n */\n/**\n * @method IPlugin#afterTooltipDraw\n * @desc Called after drawing the `tooltip`. Note that this hook will not\n * be called if the tooltip drawing has been previously cancelled.\n * @param {Chart} chart - The chart instance.\n * @param {Object} args - The call arguments.\n * @param {Object} args.tooltip - The tooltip.\n * @param {Number} args.easingValue - The current animation value, between 0.0 and 1.0.\n * @param {Object} options - The plugin options.\n */\n/**\n * @method IPlugin#beforeEvent\n * @desc Called before processing the specified `event`. If any plugin returns `false`,\n * the event will be discarded.\n * @param {Chart.Controller} chart - The chart instance.\n * @param {IEvent} event - The event object.\n * @param {Object} options - The plugin options.\n */\n/**\n * @method IPlugin#afterEvent\n * @desc Called after the `event` has been consumed. Note that this hook\n * will not be called if the `event` has been previously discarded.\n * @param {Chart.Controller} chart - The chart instance.\n * @param {IEvent} event - The event object.\n * @param {Object} options - The plugin options.\n */\n/**\n * @method IPlugin#resize\n * @desc Called after the chart as been resized.\n * @param {Chart.Controller} chart - The chart instance.\n * @param {Number} size - The new canvas display size (eq. canvas.style width & height).\n * @param {Object} options - The plugin options.\n */\n/**\n * @method IPlugin#destroy\n * @desc Called after the chart as been destroyed.\n * @param {Chart.Controller} chart - The chart instance.\n * @param {Object} options - The plugin options.\n */\n","'use strict';\n\nmodule.exports = function(Chart) {\n\n\tChart.Radar = function(context, config) {\n\t\tconfig.type = 'radar';\n\n\t\treturn new Chart(context, config);\n\t};\n\n};\n","'use strict';\n\nvar defaults = require('./core.defaults');\n\ndefaults._set('global', {\n\tresponsive: true,\n\tresponsiveAnimationDuration: 0,\n\tmaintainAspectRatio: true,\n\tevents: ['mousemove', 'mouseout', 'click', 'touchstart', 'touchmove'],\n\thover: {\n\t\tonHover: null,\n\t\tmode: 'nearest',\n\t\tintersect: true,\n\t\tanimationDuration: 400\n\t},\n\tonClick: null,\n\tdefaultColor: 'rgba(0,0,0,0.1)',\n\tdefaultFontColor: '#666',\n\tdefaultFontFamily: \"'Helvetica Neue', 'Helvetica', 'Arial', sans-serif\",\n\tdefaultFontSize: 12,\n\tdefaultFontStyle: 'normal',\n\tshowLines: true,\n\n\t// Element defaults defined in element extensions\n\telements: {},\n\n\t// Layout options such as padding\n\tlayout: {\n\t\tpadding: {\n\t\t\ttop: 0,\n\t\t\tright: 0,\n\t\t\tbottom: 0,\n\t\t\tleft: 0\n\t\t}\n\t}\n});\n\nmodule.exports = function() {\n\n\t// Occupy the global variable of Chart, and create a simple base class\n\tvar Chart = function(item, config) {\n\t\tthis.construct(item, config);\n\t\treturn this;\n\t};\n\n\tChart.Chart = Chart;\n\n\treturn Chart;\n};\n","/**\n * Platform fallback implementation (minimal).\n * @see https://github.com/chartjs/Chart.js/pull/4591#issuecomment-319575939\n */\n\nmodule.exports = {\n\tacquireContext: function(item) {\n\t\tif (item && item.canvas) {\n\t\t\t// Support for any object associated to a canvas (including a context2d)\n\t\t\titem = item.canvas;\n\t\t}\n\n\t\treturn item && item.getContext('2d') || null;\n\t}\n};\n","'use strict';\n\nvar defaults = require('../core/core.defaults');\nvar elements = require('../elements/index');\nvar helpers = require('../helpers/index');\n\ndefaults._set('polarArea', {\n\tscale: {\n\t\ttype: 'radialLinear',\n\t\tangleLines: {\n\t\t\tdisplay: false\n\t\t},\n\t\tgridLines: {\n\t\t\tcircular: true\n\t\t},\n\t\tpointLabels: {\n\t\t\tdisplay: false\n\t\t},\n\t\tticks: {\n\t\t\tbeginAtZero: true\n\t\t}\n\t},\n\n\t// Boolean - Whether to animate the rotation of the chart\n\tanimation: {\n\t\tanimateRotate: true,\n\t\tanimateScale: true\n\t},\n\n\tstartAngle: -0.5 * Math.PI,\n\tlegendCallback: function(chart) {\n\t\tvar text = [];\n\t\ttext.push('<ul class=\"' + chart.id + '-legend\">');\n\n\t\tvar data = chart.data;\n\t\tvar datasets = data.datasets;\n\t\tvar labels = data.labels;\n\n\t\tif (datasets.length) {\n\t\t\tfor (var i = 0; i < datasets[0].data.length; ++i) {\n\t\t\t\ttext.push('<li><span style=\"background-color:' + datasets[0].backgroundColor[i] + '\"></span>');\n\t\t\t\tif (labels[i]) {\n\t\t\t\t\ttext.push(labels[i]);\n\t\t\t\t}\n\t\t\t\ttext.push('</li>');\n\t\t\t}\n\t\t}\n\n\t\ttext.push('</ul>');\n\t\treturn text.join('');\n\t},\n\tlegend: {\n\t\tlabels: {\n\t\t\tgenerateLabels: function(chart) {\n\t\t\t\tvar data = chart.data;\n\t\t\t\tif (data.labels.length && data.datasets.length) {\n\t\t\t\t\treturn data.labels.map(function(label, i) {\n\t\t\t\t\t\tvar meta = chart.getDatasetMeta(0);\n\t\t\t\t\t\tvar ds = data.datasets[0];\n\t\t\t\t\t\tvar arc = meta.data[i];\n\t\t\t\t\t\tvar custom = arc.custom || {};\n\t\t\t\t\t\tvar valueAtIndexOrDefault = helpers.valueAtIndexOrDefault;\n\t\t\t\t\t\tvar arcOpts = chart.options.elements.arc;\n\t\t\t\t\t\tvar fill = custom.backgroundColor ? custom.backgroundColor : valueAtIndexOrDefault(ds.backgroundColor, i, arcOpts.backgroundColor);\n\t\t\t\t\t\tvar stroke = custom.borderColor ? custom.borderColor : valueAtIndexOrDefault(ds.borderColor, i, arcOpts.borderColor);\n\t\t\t\t\t\tvar bw = custom.borderWidth ? custom.borderWidth : valueAtIndexOrDefault(ds.borderWidth, i, arcOpts.borderWidth);\n\n\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\ttext: label,\n\t\t\t\t\t\t\tfillStyle: fill,\n\t\t\t\t\t\t\tstrokeStyle: stroke,\n\t\t\t\t\t\t\tlineWidth: bw,\n\t\t\t\t\t\t\thidden: isNaN(ds.data[i]) || meta.data[i].hidden,\n\n\t\t\t\t\t\t\t// Extra data used for toggling the correct item\n\t\t\t\t\t\t\tindex: i\n\t\t\t\t\t\t};\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\treturn [];\n\t\t\t}\n\t\t},\n\n\t\tonClick: function(e, legendItem) {\n\t\t\tvar index = legendItem.index;\n\t\t\tvar chart = this.chart;\n\t\t\tvar i, ilen, meta;\n\n\t\t\tfor (i = 0, ilen = (chart.data.datasets || []).length; i < ilen; ++i) {\n\t\t\t\tmeta = chart.getDatasetMeta(i);\n\t\t\t\tmeta.data[index].hidden = !meta.data[index].hidden;\n\t\t\t}\n\n\t\t\tchart.update();\n\t\t}\n\t},\n\n\t// Need to override these to give a nice default\n\ttooltips: {\n\t\tcallbacks: {\n\t\t\ttitle: function() {\n\t\t\t\treturn '';\n\t\t\t},\n\t\t\tlabel: function(item, data) {\n\t\t\t\treturn data.labels[item.index] + ': ' + item.yLabel;\n\t\t\t}\n\t\t}\n\t}\n});\n\nmodule.exports = function(Chart) {\n\n\tChart.controllers.polarArea = Chart.DatasetController.extend({\n\n\t\tdataElementType: elements.Arc,\n\n\t\tlinkScales: helpers.noop,\n\n\t\tupdate: function(reset) {\n\t\t\tvar me = this;\n\t\t\tvar dataset = me.getDataset();\n\t\t\tvar meta = me.getMeta();\n\t\t\tvar start = me.chart.options.startAngle || 0;\n\t\t\tvar starts = me._starts = [];\n\t\t\tvar angles = me._angles = [];\n\t\t\tvar i, ilen, angle;\n\n\t\t\tme._updateRadius();\n\n\t\t\tmeta.count = me.countVisibleElements();\n\n\t\t\tfor (i = 0, ilen = dataset.data.length; i < ilen; i++) {\n\t\t\t\tstarts[i] = start;\n\t\t\t\tangle = me._computeAngle(i);\n\t\t\t\tangles[i] = angle;\n\t\t\t\tstart += angle;\n\t\t\t}\n\n\t\t\thelpers.each(meta.data, function(arc, index) {\n\t\t\t\tme.updateElement(arc, index, reset);\n\t\t\t});\n\t\t},\n\n\t\t/**\n\t\t * @private\n\t\t */\n\t\t_updateRadius: function() {\n\t\t\tvar me = this;\n\t\t\tvar chart = me.chart;\n\t\t\tvar chartArea = chart.chartArea;\n\t\t\tvar opts = chart.options;\n\t\t\tvar arcOpts = opts.elements.arc;\n\t\t\tvar minSize = Math.min(chartArea.right - chartArea.left, chartArea.bottom - chartArea.top);\n\n\t\t\tchart.outerRadius = Math.max((minSize - arcOpts.borderWidth / 2) / 2, 0);\n\t\t\tchart.innerRadius = Math.max(opts.cutoutPercentage ? (chart.outerRadius / 100) * (opts.cutoutPercentage) : 1, 0);\n\t\t\tchart.radiusLength = (chart.outerRadius - chart.innerRadius) / chart.getVisibleDatasetCount();\n\n\t\t\tme.outerRadius = chart.outerRadius - (chart.radiusLength * me.index);\n\t\t\tme.innerRadius = me.outerRadius - chart.radiusLength;\n\t\t},\n\n\t\tupdateElement: function(arc, index, reset) {\n\t\t\tvar me = this;\n\t\t\tvar chart = me.chart;\n\t\t\tvar dataset = me.getDataset();\n\t\t\tvar opts = chart.options;\n\t\t\tvar animationOpts = opts.animation;\n\t\t\tvar scale = chart.scale;\n\t\t\tvar labels = chart.data.labels;\n\n\t\t\tvar centerX = scale.xCenter;\n\t\t\tvar centerY = scale.yCenter;\n\n\t\t\t// var negHalfPI = -0.5 * Math.PI;\n\t\t\tvar datasetStartAngle = opts.startAngle;\n\t\t\tvar distance = arc.hidden ? 0 : scale.getDistanceFromCenterForValue(dataset.data[index]);\n\t\t\tvar startAngle = me._starts[index];\n\t\t\tvar endAngle = startAngle + (arc.hidden ? 0 : me._angles[index]);\n\n\t\t\tvar resetRadius = animationOpts.animateScale ? 0 : scale.getDistanceFromCenterForValue(dataset.data[index]);\n\n\t\t\thelpers.extend(arc, {\n\t\t\t\t// Utility\n\t\t\t\t_datasetIndex: me.index,\n\t\t\t\t_index: index,\n\t\t\t\t_scale: scale,\n\n\t\t\t\t// Desired view properties\n\t\t\t\t_model: {\n\t\t\t\t\tx: centerX,\n\t\t\t\t\ty: centerY,\n\t\t\t\t\tinnerRadius: 0,\n\t\t\t\t\touterRadius: reset ? resetRadius : distance,\n\t\t\t\t\tstartAngle: reset && animationOpts.animateRotate ? datasetStartAngle : startAngle,\n\t\t\t\t\tendAngle: reset && animationOpts.animateRotate ? datasetStartAngle : endAngle,\n\t\t\t\t\tlabel: helpers.valueAtIndexOrDefault(labels, index, labels[index])\n\t\t\t\t}\n\t\t\t});\n\n\t\t\t// Apply border and fill style\n\t\t\tvar elementOpts = this.chart.options.elements.arc;\n\t\t\tvar custom = arc.custom || {};\n\t\t\tvar valueOrDefault = helpers.valueAtIndexOrDefault;\n\t\t\tvar model = arc._model;\n\n\t\t\tmodel.backgroundColor = custom.backgroundColor ? custom.backgroundColor : valueOrDefault(dataset.backgroundColor, index, elementOpts.backgroundColor);\n\t\t\tmodel.borderColor = custom.borderColor ? custom.borderColor : valueOrDefault(dataset.borderColor, index, elementOpts.borderColor);\n\t\t\tmodel.borderWidth = custom.borderWidth ? custom.borderWidth : valueOrDefault(dataset.borderWidth, index, elementOpts.borderWidth);\n\n\t\t\tarc.pivot();\n\t\t},\n\n\t\tcountVisibleElements: function() {\n\t\t\tvar dataset = this.getDataset();\n\t\t\tvar meta = this.getMeta();\n\t\t\tvar count = 0;\n\n\t\t\thelpers.each(meta.data, function(element, index) {\n\t\t\t\tif (!isNaN(dataset.data[index]) && !element.hidden) {\n\t\t\t\t\tcount++;\n\t\t\t\t}\n\t\t\t});\n\n\t\t\treturn count;\n\t\t},\n\n\t\t/**\n\t\t * @private\n\t\t */\n\t\t_computeAngle: function(index) {\n\t\t\tvar me = this;\n\t\t\tvar count = this.getMeta().count;\n\t\t\tvar dataset = me.getDataset();\n\t\t\tvar meta = me.getMeta();\n\n\t\t\tif (isNaN(dataset.data[index]) || meta.data[index].hidden) {\n\t\t\t\treturn 0;\n\t\t\t}\n\n\t\t\t// Scriptable options\n\t\t\tvar context = {\n\t\t\t\tchart: me.chart,\n\t\t\t\tdataIndex: index,\n\t\t\t\tdataset: dataset,\n\t\t\t\tdatasetIndex: me.index\n\t\t\t};\n\n\t\t\treturn helpers.options.resolve([\n\t\t\t\tme.chart.options.elements.arc.angle,\n\t\t\t\t(2 * Math.PI) / count\n\t\t\t], context, index);\n\t\t}\n\t});\n};\n","'use strict';\n\nvar defaults = require('../core/core.defaults');\nvar Element = require('../core/core.element');\nvar helpers = require('../helpers/index');\n\ndefaults._set('global', {\n\telements: {\n\t\tarc: {\n\t\t\tbackgroundColor: defaults.global.defaultColor,\n\t\t\tborderColor: '#fff',\n\t\t\tborderWidth: 2\n\t\t}\n\t}\n});\n\nmodule.exports = Element.extend({\n\tinLabelRange: function(mouseX) {\n\t\tvar vm = this._view;\n\n\t\tif (vm) {\n\t\t\treturn (Math.pow(mouseX - vm.x, 2) < Math.pow(vm.radius + vm.hoverRadius, 2));\n\t\t}\n\t\treturn false;\n\t},\n\n\tinRange: function(chartX, chartY) {\n\t\tvar vm = this._view;\n\n\t\tif (vm) {\n\t\t\tvar pointRelativePosition = helpers.getAngleFromPoint(vm, {x: chartX, y: chartY});\n\t\t\tvar\tangle = pointRelativePosition.angle;\n\t\t\tvar distance = pointRelativePosition.distance;\n\n\t\t\t// Sanitise angle range\n\t\t\tvar startAngle = vm.startAngle;\n\t\t\tvar endAngle = vm.endAngle;\n\t\t\twhile (endAngle < startAngle) {\n\t\t\t\tendAngle += 2.0 * Math.PI;\n\t\t\t}\n\t\t\twhile (angle > endAngle) {\n\t\t\t\tangle -= 2.0 * Math.PI;\n\t\t\t}\n\t\t\twhile (angle < startAngle) {\n\t\t\t\tangle += 2.0 * Math.PI;\n\t\t\t}\n\n\t\t\t// Check if within the range of the open/close angle\n\t\t\tvar betweenAngles = (angle >= startAngle && angle <= endAngle);\n\t\t\tvar withinRadius = (distance >= vm.innerRadius && distance <= vm.outerRadius);\n\n\t\t\treturn (betweenAngles && withinRadius);\n\t\t}\n\t\treturn false;\n\t},\n\n\tgetCenterPoint: function() {\n\t\tvar vm = this._view;\n\t\tvar halfAngle = (vm.startAngle + vm.endAngle) / 2;\n\t\tvar halfRadius = (vm.innerRadius + vm.outerRadius) / 2;\n\t\treturn {\n\t\t\tx: vm.x + Math.cos(halfAngle) * halfRadius,\n\t\t\ty: vm.y + Math.sin(halfAngle) * halfRadius\n\t\t};\n\t},\n\n\tgetArea: function() {\n\t\tvar vm = this._view;\n\t\treturn Math.PI * ((vm.endAngle - vm.startAngle) / (2 * Math.PI)) * (Math.pow(vm.outerRadius, 2) - Math.pow(vm.innerRadius, 2));\n\t},\n\n\ttooltipPosition: function() {\n\t\tvar vm = this._view;\n\t\tvar centreAngle = vm.startAngle + ((vm.endAngle - vm.startAngle) / 2);\n\t\tvar rangeFromCentre = (vm.outerRadius - vm.innerRadius) / 2 + vm.innerRadius;\n\n\t\treturn {\n\t\t\tx: vm.x + (Math.cos(centreAngle) * rangeFromCentre),\n\t\t\ty: vm.y + (Math.sin(centreAngle) * rangeFromCentre)\n\t\t};\n\t},\n\n\tdraw: function() {\n\t\tvar ctx = this._chart.ctx;\n\t\tvar vm = this._view;\n\t\tvar sA = vm.startAngle;\n\t\tvar eA = vm.endAngle;\n\n\t\tctx.beginPath();\n\n\t\tctx.arc(vm.x, vm.y, vm.outerRadius, sA, eA);\n\t\tctx.arc(vm.x, vm.y, vm.innerRadius, eA, sA, true);\n\n\t\tctx.closePath();\n\t\tctx.strokeStyle = vm.borderColor;\n\t\tctx.lineWidth = vm.borderWidth;\n\n\t\tctx.fillStyle = vm.backgroundColor;\n\n\t\tctx.fill();\n\t\tctx.lineJoin = 'bevel';\n\n\t\tif (vm.borderWidth) {\n\t\t\tctx.stroke();\n\t\t}\n\t}\n});\n","'use strict';\n\nvar color = require('chartjs-color');\nvar helpers = require('../helpers/index');\n\nfunction interpolate(start, view, model, ease) {\n\tvar keys = Object.keys(model);\n\tvar i, ilen, key, actual, origin, target, type, c0, c1;\n\n\tfor (i = 0, ilen = keys.length; i < ilen; ++i) {\n\t\tkey = keys[i];\n\n\t\ttarget = model[key];\n\n\t\t// if a value is added to the model after pivot() has been called, the view\n\t\t// doesn't contain it, so let's initialize the view to the target value.\n\t\tif (!view.hasOwnProperty(key)) {\n\t\t\tview[key] = target;\n\t\t}\n\n\t\tactual = view[key];\n\n\t\tif (actual === target || key[0] === '_') {\n\t\t\tcontinue;\n\t\t}\n\n\t\tif (!start.hasOwnProperty(key)) {\n\t\t\tstart[key] = actual;\n\t\t}\n\n\t\torigin = start[key];\n\n\t\ttype = typeof target;\n\n\t\tif (type === typeof origin) {\n\t\t\tif (type === 'string') {\n\t\t\t\tc0 = color(origin);\n\t\t\t\tif (c0.valid) {\n\t\t\t\t\tc1 = color(target);\n\t\t\t\t\tif (c1.valid) {\n\t\t\t\t\t\tview[key] = c1.mix(c0, ease).rgbString();\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else if (type === 'number' && isFinite(origin) && isFinite(target)) {\n\t\t\t\tview[key] = origin + (target - origin) * ease;\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t}\n\n\t\tview[key] = target;\n\t}\n}\n\nvar Element = function(configuration) {\n\thelpers.extend(this, configuration);\n\tthis.initialize.apply(this, arguments);\n};\n\nhelpers.extend(Element.prototype, {\n\n\tinitialize: function() {\n\t\tthis.hidden = false;\n\t},\n\n\tpivot: function() {\n\t\tvar me = this;\n\t\tif (!me._view) {\n\t\t\tme._view = helpers.clone(me._model);\n\t\t}\n\t\tme._start = {};\n\t\treturn me;\n\t},\n\n\ttransition: function(ease) {\n\t\tvar me = this;\n\t\tvar model = me._model;\n\t\tvar start = me._start;\n\t\tvar view = me._view;\n\n\t\t// No animation -> No Transition\n\t\tif (!model || ease === 1) {\n\t\t\tme._view = model;\n\t\t\tme._start = null;\n\t\t\treturn me;\n\t\t}\n\n\t\tif (!view) {\n\t\t\tview = me._view = {};\n\t\t}\n\n\t\tif (!start) {\n\t\t\tstart = me._start = {};\n\t\t}\n\n\t\tinterpolate(start, view, model, ease);\n\n\t\treturn me;\n\t},\n\n\ttooltipPosition: function() {\n\t\treturn {\n\t\t\tx: this._model.x,\n\t\t\ty: this._model.y\n\t\t};\n\t},\n\n\thasValue: function() {\n\t\treturn helpers.isNumber(this._model.x) && helpers.isNumber(this._model.y);\n\t}\n});\n\nElement.extend = helpers.inherits;\n\nmodule.exports = Element;\n","'use strict';\n\nmodule.exports = {};\nmodule.exports.Arc = require('./element.arc');\nmodule.exports.Line = require('./element.line');\nmodule.exports.Point = require('./element.point');\nmodule.exports.Rectangle = require('./element.rectangle');\n","'use strict'\r\n\r\nmodule.exports = {\r\n\t\"aliceblue\": [240, 248, 255],\r\n\t\"antiquewhite\": [250, 235, 215],\r\n\t\"aqua\": [0, 255, 255],\r\n\t\"aquamarine\": [127, 255, 212],\r\n\t\"azure\": [240, 255, 255],\r\n\t\"beige\": [245, 245, 220],\r\n\t\"bisque\": [255, 228, 196],\r\n\t\"black\": [0, 0, 0],\r\n\t\"blanchedalmond\": [255, 235, 205],\r\n\t\"blue\": [0, 0, 255],\r\n\t\"blueviolet\": [138, 43, 226],\r\n\t\"brown\": [165, 42, 42],\r\n\t\"burlywood\": [222, 184, 135],\r\n\t\"cadetblue\": [95, 158, 160],\r\n\t\"chartreuse\": [127, 255, 0],\r\n\t\"chocolate\": [210, 105, 30],\r\n\t\"coral\": [255, 127, 80],\r\n\t\"cornflowerblue\": [100, 149, 237],\r\n\t\"cornsilk\": [255, 248, 220],\r\n\t\"crimson\": [220, 20, 60],\r\n\t\"cyan\": [0, 255, 255],\r\n\t\"darkblue\": [0, 0, 139],\r\n\t\"darkcyan\": [0, 139, 139],\r\n\t\"darkgoldenrod\": [184, 134, 11],\r\n\t\"darkgray\": [169, 169, 169],\r\n\t\"darkgreen\": [0, 100, 0],\r\n\t\"darkgrey\": [169, 169, 169],\r\n\t\"darkkhaki\": [189, 183, 107],\r\n\t\"darkmagenta\": [139, 0, 139],\r\n\t\"darkolivegreen\": [85, 107, 47],\r\n\t\"darkorange\": [255, 140, 0],\r\n\t\"darkorchid\": [153, 50, 204],\r\n\t\"darkred\": [139, 0, 0],\r\n\t\"darksalmon\": [233, 150, 122],\r\n\t\"darkseagreen\": [143, 188, 143],\r\n\t\"darkslateblue\": [72, 61, 139],\r\n\t\"darkslategray\": [47, 79, 79],\r\n\t\"darkslategrey\": [47, 79, 79],\r\n\t\"darkturquoise\": [0, 206, 209],\r\n\t\"darkviolet\": [148, 0, 211],\r\n\t\"deeppink\": [255, 20, 147],\r\n\t\"deepskyblue\": [0, 191, 255],\r\n\t\"dimgray\": [105, 105, 105],\r\n\t\"dimgrey\": [105, 105, 105],\r\n\t\"dodgerblue\": [30, 144, 255],\r\n\t\"firebrick\": [178, 34, 34],\r\n\t\"floralwhite\": [255, 250, 240],\r\n\t\"forestgreen\": [34, 139, 34],\r\n\t\"fuchsia\": [255, 0, 255],\r\n\t\"gainsboro\": [220, 220, 220],\r\n\t\"ghostwhite\": [248, 248, 255],\r\n\t\"gold\": [255, 215, 0],\r\n\t\"goldenrod\": [218, 165, 32],\r\n\t\"gray\": [128, 128, 128],\r\n\t\"green\": [0, 128, 0],\r\n\t\"greenyellow\": [173, 255, 47],\r\n\t\"grey\": [128, 128, 128],\r\n\t\"honeydew\": [240, 255, 240],\r\n\t\"hotpink\": [255, 105, 180],\r\n\t\"indianred\": [205, 92, 92],\r\n\t\"indigo\": [75, 0, 130],\r\n\t\"ivory\": [255, 255, 240],\r\n\t\"khaki\": [240, 230, 140],\r\n\t\"lavender\": [230, 230, 250],\r\n\t\"lavenderblush\": [255, 240, 245],\r\n\t\"lawngreen\": [124, 252, 0],\r\n\t\"lemonchiffon\": [255, 250, 205],\r\n\t\"lightblue\": [173, 216, 230],\r\n\t\"lightcoral\": [240, 128, 128],\r\n\t\"lightcyan\": [224, 255, 255],\r\n\t\"lightgoldenrodyellow\": [250, 250, 210],\r\n\t\"lightgray\": [211, 211, 211],\r\n\t\"lightgreen\": [144, 238, 144],\r\n\t\"lightgrey\": [211, 211, 211],\r\n\t\"lightpink\": [255, 182, 193],\r\n\t\"lightsalmon\": [255, 160, 122],\r\n\t\"lightseagreen\": [32, 178, 170],\r\n\t\"lightskyblue\": [135, 206, 250],\r\n\t\"lightslategray\": [119, 136, 153],\r\n\t\"lightslategrey\": [119, 136, 153],\r\n\t\"lightsteelblue\": [176, 196, 222],\r\n\t\"lightyellow\": [255, 255, 224],\r\n\t\"lime\": [0, 255, 0],\r\n\t\"limegreen\": [50, 205, 50],\r\n\t\"linen\": [250, 240, 230],\r\n\t\"magenta\": [255, 0, 255],\r\n\t\"maroon\": [128, 0, 0],\r\n\t\"mediumaquamarine\": [102, 205, 170],\r\n\t\"mediumblue\": [0, 0, 205],\r\n\t\"mediumorchid\": [186, 85, 211],\r\n\t\"mediumpurple\": [147, 112, 219],\r\n\t\"mediumseagreen\": [60, 179, 113],\r\n\t\"mediumslateblue\": [123, 104, 238],\r\n\t\"mediumspringgreen\": [0, 250, 154],\r\n\t\"mediumturquoise\": [72, 209, 204],\r\n\t\"mediumvioletred\": [199, 21, 133],\r\n\t\"midnightblue\": [25, 25, 112],\r\n\t\"mintcream\": [245, 255, 250],\r\n\t\"mistyrose\": [255, 228, 225],\r\n\t\"moccasin\": [255, 228, 181],\r\n\t\"navajowhite\": [255, 222, 173],\r\n\t\"navy\": [0, 0, 128],\r\n\t\"oldlace\": [253, 245, 230],\r\n\t\"olive\": [128, 128, 0],\r\n\t\"olivedrab\": [107, 142, 35],\r\n\t\"orange\": [255, 165, 0],\r\n\t\"orangered\": [255, 69, 0],\r\n\t\"orchid\": [218, 112, 214],\r\n\t\"palegoldenrod\": [238, 232, 170],\r\n\t\"palegreen\": [152, 251, 152],\r\n\t\"paleturquoise\": [175, 238, 238],\r\n\t\"palevioletred\": [219, 112, 147],\r\n\t\"papayawhip\": [255, 239, 213],\r\n\t\"peachpuff\": [255, 218, 185],\r\n\t\"peru\": [205, 133, 63],\r\n\t\"pink\": [255, 192, 203],\r\n\t\"plum\": [221, 160, 221],\r\n\t\"powderblue\": [176, 224, 230],\r\n\t\"purple\": [128, 0, 128],\r\n\t\"rebeccapurple\": [102, 51, 153],\r\n\t\"red\": [255, 0, 0],\r\n\t\"rosybrown\": [188, 143, 143],\r\n\t\"royalblue\": [65, 105, 225],\r\n\t\"saddlebrown\": [139, 69, 19],\r\n\t\"salmon\": [250, 128, 114],\r\n\t\"sandybrown\": [244, 164, 96],\r\n\t\"seagreen\": [46, 139, 87],\r\n\t\"seashell\": [255, 245, 238],\r\n\t\"sienna\": [160, 82, 45],\r\n\t\"silver\": [192, 192, 192],\r\n\t\"skyblue\": [135, 206, 235],\r\n\t\"slateblue\": [106, 90, 205],\r\n\t\"slategray\": [112, 128, 144],\r\n\t\"slategrey\": [112, 128, 144],\r\n\t\"snow\": [255, 250, 250],\r\n\t\"springgreen\": [0, 255, 127],\r\n\t\"steelblue\": [70, 130, 180],\r\n\t\"tan\": [210, 180, 140],\r\n\t\"teal\": [0, 128, 128],\r\n\t\"thistle\": [216, 191, 216],\r\n\t\"tomato\": [255, 99, 71],\r\n\t\"turquoise\": [64, 224, 208],\r\n\t\"violet\": [238, 130, 238],\r\n\t\"wheat\": [245, 222, 179],\r\n\t\"white\": [255, 255, 255],\r\n\t\"whitesmoke\": [245, 245, 245],\r\n\t\"yellow\": [255, 255, 0],\r\n\t\"yellowgreen\": [154, 205, 50]\r\n};\r\n","'use strict';\n\nmodule.exports = function(Chart) {\n\n\tChart.PolarArea = function(context, config) {\n\t\tconfig.type = 'polarArea';\n\n\t\treturn new Chart(context, config);\n\t};\n\n};\n","'use strict';\n\nmodule.exports = function(Chart) {\n\tChart.Scatter = function(context, config) {\n\t\tconfig.type = 'scatter';\n\t\treturn new Chart(context, config);\n\t};\n};\n","'use strict';\n\nvar defaults = require('../core/core.defaults');\nvar Element = require('../core/core.element');\nvar helpers = require('../helpers/index');\nvar layouts = require('../core/core.layouts');\n\nvar noop = helpers.noop;\n\ndefaults._set('global', {\n\tlegend: {\n\t\tdisplay: true,\n\t\tposition: 'top',\n\t\tfullWidth: true,\n\t\treverse: false,\n\t\tweight: 1000,\n\n\t\t// a callback that will handle\n\t\tonClick: function(e, legendItem) {\n\t\t\tvar index = legendItem.datasetIndex;\n\t\t\tvar ci = this.chart;\n\t\t\tvar meta = ci.getDatasetMeta(index);\n\n\t\t\t// See controller.isDatasetVisible comment\n\t\t\tmeta.hidden = meta.hidden === null ? !ci.data.datasets[index].hidden : null;\n\n\t\t\t// We hid a dataset ... rerender the chart\n\t\t\tci.update();\n\t\t},\n\n\t\tonHover: null,\n\n\t\tlabels: {\n\t\t\tboxWidth: 40,\n\t\t\tpadding: 10,\n\t\t\t// Generates labels shown in the legend\n\t\t\t// Valid properties to return:\n\t\t\t// text : text to display\n\t\t\t// fillStyle : fill of coloured box\n\t\t\t// strokeStyle: stroke of coloured box\n\t\t\t// hidden : if this legend item refers to a hidden item\n\t\t\t// lineCap : cap style for line\n\t\t\t// lineDash\n\t\t\t// lineDashOffset :\n\t\t\t// lineJoin :\n\t\t\t// lineWidth :\n\t\t\tgenerateLabels: function(chart) {\n\t\t\t\tvar data = chart.data;\n\t\t\t\treturn helpers.isArray(data.datasets) ? data.datasets.map(function(dataset, i) {\n\t\t\t\t\treturn {\n\t\t\t\t\t\ttext: dataset.label,\n\t\t\t\t\t\tfillStyle: (!helpers.isArray(dataset.backgroundColor) ? dataset.backgroundColor : dataset.backgroundColor[0]),\n\t\t\t\t\t\thidden: !chart.isDatasetVisible(i),\n\t\t\t\t\t\tlineCap: dataset.borderCapStyle,\n\t\t\t\t\t\tlineDash: dataset.borderDash,\n\t\t\t\t\t\tlineDashOffset: dataset.borderDashOffset,\n\t\t\t\t\t\tlineJoin: dataset.borderJoinStyle,\n\t\t\t\t\t\tlineWidth: dataset.borderWidth,\n\t\t\t\t\t\tstrokeStyle: dataset.borderColor,\n\t\t\t\t\t\tpointStyle: dataset.pointStyle,\n\n\t\t\t\t\t\t// Below is extra data used for toggling the datasets\n\t\t\t\t\t\tdatasetIndex: i\n\t\t\t\t\t};\n\t\t\t\t}, this) : [];\n\t\t\t}\n\t\t}\n\t},\n\n\tlegendCallback: function(chart) {\n\t\tvar text = [];\n\t\ttext.push('<ul class=\"' + chart.id + '-legend\">');\n\t\tfor (var i = 0; i < chart.data.datasets.length; i++) {\n\t\t\ttext.push('<li><span style=\"background-color:' + chart.data.datasets[i].backgroundColor + '\"></span>');\n\t\t\tif (chart.data.datasets[i].label) {\n\t\t\t\ttext.push(chart.data.datasets[i].label);\n\t\t\t}\n\t\t\ttext.push('</li>');\n\t\t}\n\t\ttext.push('</ul>');\n\t\treturn text.join('');\n\t}\n});\n\n/**\n * Helper function to get the box width based on the usePointStyle option\n * @param labelopts {Object} the label options on the legend\n * @param fontSize {Number} the label font size\n * @return {Number} width of the color box area\n */\nfunction getBoxWidth(labelOpts, fontSize) {\n\treturn labelOpts.usePointStyle ?\n\t\tfontSize * Math.SQRT2 :\n\t\tlabelOpts.boxWidth;\n}\n\n/**\n * IMPORTANT: this class is exposed publicly as Chart.Legend, backward compatibility required!\n */\nvar Legend = Element.extend({\n\n\tinitialize: function(config) {\n\t\thelpers.extend(this, config);\n\n\t\t// Contains hit boxes for each dataset (in dataset order)\n\t\tthis.legendHitBoxes = [];\n\n\t\t// Are we in doughnut mode which has a different data type\n\t\tthis.doughnutMode = false;\n\t},\n\n\t// These methods are ordered by lifecycle. Utilities then follow.\n\t// Any function defined here is inherited by all legend types.\n\t// Any function can be extended by the legend type\n\n\tbeforeUpdate: noop,\n\tupdate: function(maxWidth, maxHeight, margins) {\n\t\tvar me = this;\n\n\t\t// Update Lifecycle - Probably don't want to ever extend or overwrite this function ;)\n\t\tme.beforeUpdate();\n\n\t\t// Absorb the master measurements\n\t\tme.maxWidth = maxWidth;\n\t\tme.maxHeight = maxHeight;\n\t\tme.margins = margins;\n\n\t\t// Dimensions\n\t\tme.beforeSetDimensions();\n\t\tme.setDimensions();\n\t\tme.afterSetDimensions();\n\t\t// Labels\n\t\tme.beforeBuildLabels();\n\t\tme.buildLabels();\n\t\tme.afterBuildLabels();\n\n\t\t// Fit\n\t\tme.beforeFit();\n\t\tme.fit();\n\t\tme.afterFit();\n\t\t//\n\t\tme.afterUpdate();\n\n\t\treturn me.minSize;\n\t},\n\tafterUpdate: noop,\n\n\t//\n\n\tbeforeSetDimensions: noop,\n\tsetDimensions: function() {\n\t\tvar me = this;\n\t\t// Set the unconstrained dimension before label rotation\n\t\tif (me.isHorizontal()) {\n\t\t\t// Reset position before calculating rotation\n\t\t\tme.width = me.maxWidth;\n\t\t\tme.left = 0;\n\t\t\tme.right = me.width;\n\t\t} else {\n\t\t\tme.height = me.maxHeight;\n\n\t\t\t// Reset position before calculating rotation\n\t\t\tme.top = 0;\n\t\t\tme.bottom = me.height;\n\t\t}\n\n\t\t// Reset padding\n\t\tme.paddingLeft = 0;\n\t\tme.paddingTop = 0;\n\t\tme.paddingRight = 0;\n\t\tme.paddingBottom = 0;\n\n\t\t// Reset minSize\n\t\tme.minSize = {\n\t\t\twidth: 0,\n\t\t\theight: 0\n\t\t};\n\t},\n\tafterSetDimensions: noop,\n\n\t//\n\n\tbeforeBuildLabels: noop,\n\tbuildLabels: function() {\n\t\tvar me = this;\n\t\tvar labelOpts = me.options.labels || {};\n\t\tvar legendItems = helpers.callback(labelOpts.generateLabels, [me.chart], me) || [];\n\n\t\tif (labelOpts.filter) {\n\t\t\tlegendItems = legendItems.filter(function(item) {\n\t\t\t\treturn labelOpts.filter(item, me.chart.data);\n\t\t\t});\n\t\t}\n\n\t\tif (me.options.reverse) {\n\t\t\tlegendItems.reverse();\n\t\t}\n\n\t\tme.legendItems = legendItems;\n\t},\n\tafterBuildLabels: noop,\n\n\t//\n\n\tbeforeFit: noop,\n\tfit: function() {\n\t\tvar me = this;\n\t\tvar opts = me.options;\n\t\tvar labelOpts = opts.labels;\n\t\tvar display = opts.display;\n\n\t\tvar ctx = me.ctx;\n\n\t\tvar globalDefault = defaults.global;\n\t\tvar valueOrDefault = helpers.valueOrDefault;\n\t\tvar fontSize = valueOrDefault(labelOpts.fontSize, globalDefault.defaultFontSize);\n\t\tvar fontStyle = valueOrDefault(labelOpts.fontStyle, globalDefault.defaultFontStyle);\n\t\tvar fontFamily = valueOrDefault(labelOpts.fontFamily, globalDefault.defaultFontFamily);\n\t\tvar labelFont = helpers.fontString(fontSize, fontStyle, fontFamily);\n\n\t\t// Reset hit boxes\n\t\tvar hitboxes = me.legendHitBoxes = [];\n\n\t\tvar minSize = me.minSize;\n\t\tvar isHorizontal = me.isHorizontal();\n\n\t\tif (isHorizontal) {\n\t\t\tminSize.width = me.maxWidth; // fill all the width\n\t\t\tminSize.height = display ? 10 : 0;\n\t\t} else {\n\t\t\tminSize.width = display ? 10 : 0;\n\t\t\tminSize.height = me.maxHeight; // fill all the height\n\t\t}\n\n\t\t// Increase sizes here\n\t\tif (display) {\n\t\t\tctx.font = labelFont;\n\n\t\t\tif (isHorizontal) {\n\t\t\t\t// Labels\n\n\t\t\t\t// Width of each line of legend boxes. Labels wrap onto multiple lines when there are too many to fit on one\n\t\t\t\tvar lineWidths = me.lineWidths = [0];\n\t\t\t\tvar totalHeight = me.legendItems.length ? fontSize + (labelOpts.padding) : 0;\n\n\t\t\t\tctx.textAlign = 'left';\n\t\t\t\tctx.textBaseline = 'top';\n\n\t\t\t\thelpers.each(me.legendItems, function(legendItem, i) {\n\t\t\t\t\tvar boxWidth = getBoxWidth(labelOpts, fontSize);\n\t\t\t\t\tvar width = boxWidth + (fontSize / 2) + ctx.measureText(legendItem.text).width;\n\n\t\t\t\t\tif (lineWidths[lineWidths.length - 1] + width + labelOpts.padding >= me.width) {\n\t\t\t\t\t\ttotalHeight += fontSize + (labelOpts.padding);\n\t\t\t\t\t\tlineWidths[lineWidths.length] = me.left;\n\t\t\t\t\t}\n\n\t\t\t\t\t// Store the hitbox width and height here. Final position will be updated in `draw`\n\t\t\t\t\thitboxes[i] = {\n\t\t\t\t\t\tleft: 0,\n\t\t\t\t\t\ttop: 0,\n\t\t\t\t\t\twidth: width,\n\t\t\t\t\t\theight: fontSize\n\t\t\t\t\t};\n\n\t\t\t\t\tlineWidths[lineWidths.length - 1] += width + labelOpts.padding;\n\t\t\t\t});\n\n\t\t\t\tminSize.height += totalHeight;\n\n\t\t\t} else {\n\t\t\t\tvar vPadding = labelOpts.padding;\n\t\t\t\tvar columnWidths = me.columnWidths = [];\n\t\t\t\tvar totalWidth = labelOpts.padding;\n\t\t\t\tvar currentColWidth = 0;\n\t\t\t\tvar currentColHeight = 0;\n\t\t\t\tvar itemHeight = fontSize + vPadding;\n\n\t\t\t\thelpers.each(me.legendItems, function(legendItem, i) {\n\t\t\t\t\tvar boxWidth = getBoxWidth(labelOpts, fontSize);\n\t\t\t\t\tvar itemWidth = boxWidth + (fontSize / 2) + ctx.measureText(legendItem.text).width;\n\n\t\t\t\t\t// If too tall, go to new column\n\t\t\t\t\tif (currentColHeight + itemHeight > minSize.height) {\n\t\t\t\t\t\ttotalWidth += currentColWidth + labelOpts.padding;\n\t\t\t\t\t\tcolumnWidths.push(currentColWidth); // previous column width\n\n\t\t\t\t\t\tcurrentColWidth = 0;\n\t\t\t\t\t\tcurrentColHeight = 0;\n\t\t\t\t\t}\n\n\t\t\t\t\t// Get max width\n\t\t\t\t\tcurrentColWidth = Math.max(currentColWidth, itemWidth);\n\t\t\t\t\tcurrentColHeight += itemHeight;\n\n\t\t\t\t\t// Store the hitbox width and height here. Final position will be updated in `draw`\n\t\t\t\t\thitboxes[i] = {\n\t\t\t\t\t\tleft: 0,\n\t\t\t\t\t\ttop: 0,\n\t\t\t\t\t\twidth: itemWidth,\n\t\t\t\t\t\theight: fontSize\n\t\t\t\t\t};\n\t\t\t\t});\n\n\t\t\t\ttotalWidth += currentColWidth;\n\t\t\t\tcolumnWidths.push(currentColWidth);\n\t\t\t\tminSize.width += totalWidth;\n\t\t\t}\n\t\t}\n\n\t\tme.width = minSize.width;\n\t\tme.height = minSize.height;\n\t},\n\tafterFit: noop,\n\n\t// Shared Methods\n\tisHorizontal: function() {\n\t\treturn this.options.position === 'top' || this.options.position === 'bottom';\n\t},\n\n\t// Actually draw the legend on the canvas\n\tdraw: function() {\n\t\tvar me = this;\n\t\tvar opts = me.options;\n\t\tvar labelOpts = opts.labels;\n\t\tvar globalDefault = defaults.global;\n\t\tvar lineDefault = globalDefault.elements.line;\n\t\tvar legendWidth = me.width;\n\t\tvar lineWidths = me.lineWidths;\n\n\t\tif (opts.display) {\n\t\t\tvar ctx = me.ctx;\n\t\t\tvar valueOrDefault = helpers.valueOrDefault;\n\t\t\tvar fontColor = valueOrDefault(labelOpts.fontColor, globalDefault.defaultFontColor);\n\t\t\tvar fontSize = valueOrDefault(labelOpts.fontSize, globalDefault.defaultFontSize);\n\t\t\tvar fontStyle = valueOrDefault(labelOpts.fontStyle, globalDefault.defaultFontStyle);\n\t\t\tvar fontFamily = valueOrDefault(labelOpts.fontFamily, globalDefault.defaultFontFamily);\n\t\t\tvar labelFont = helpers.fontString(fontSize, fontStyle, fontFamily);\n\t\t\tvar cursor;\n\n\t\t\t// Canvas setup\n\t\t\tctx.textAlign = 'left';\n\t\t\tctx.textBaseline = 'middle';\n\t\t\tctx.lineWidth = 0.5;\n\t\t\tctx.strokeStyle = fontColor; // for strikethrough effect\n\t\t\tctx.fillStyle = fontColor; // render in correct colour\n\t\t\tctx.font = labelFont;\n\n\t\t\tvar boxWidth = getBoxWidth(labelOpts, fontSize);\n\t\t\tvar hitboxes = me.legendHitBoxes;\n\n\t\t\t// current position\n\t\t\tvar drawLegendBox = function(x, y, legendItem) {\n\t\t\t\tif (isNaN(boxWidth) || boxWidth <= 0) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\t// Set the ctx for the box\n\t\t\t\tctx.save();\n\n\t\t\t\tctx.fillStyle = valueOrDefault(legendItem.fillStyle, globalDefault.defaultColor);\n\t\t\t\tctx.lineCap = valueOrDefault(legendItem.lineCap, lineDefault.borderCapStyle);\n\t\t\t\tctx.lineDashOffset = valueOrDefault(legendItem.lineDashOffset, lineDefault.borderDashOffset);\n\t\t\t\tctx.lineJoin = valueOrDefault(legendItem.lineJoin, lineDefault.borderJoinStyle);\n\t\t\t\tctx.lineWidth = valueOrDefault(legendItem.lineWidth, lineDefault.borderWidth);\n\t\t\t\tctx.strokeStyle = valueOrDefault(legendItem.strokeStyle, globalDefault.defaultColor);\n\t\t\t\tvar isLineWidthZero = (valueOrDefault(legendItem.lineWidth, lineDefault.borderWidth) === 0);\n\n\t\t\t\tif (ctx.setLineDash) {\n\t\t\t\t\t// IE 9 and 10 do not support line dash\n\t\t\t\t\tctx.setLineDash(valueOrDefault(legendItem.lineDash, lineDefault.borderDash));\n\t\t\t\t}\n\n\t\t\t\tif (opts.labels && opts.labels.usePointStyle) {\n\t\t\t\t\t// Recalculate x and y for drawPoint() because its expecting\n\t\t\t\t\t// x and y to be center of figure (instead of top left)\n\t\t\t\t\tvar radius = fontSize * Math.SQRT2 / 2;\n\t\t\t\t\tvar offSet = radius / Math.SQRT2;\n\t\t\t\t\tvar centerX = x + offSet;\n\t\t\t\t\tvar centerY = y + offSet;\n\n\t\t\t\t\t// Draw pointStyle as legend symbol\n\t\t\t\t\thelpers.canvas.drawPoint(ctx, legendItem.pointStyle, radius, centerX, centerY);\n\t\t\t\t} else {\n\t\t\t\t\t// Draw box as legend symbol\n\t\t\t\t\tif (!isLineWidthZero) {\n\t\t\t\t\t\tctx.strokeRect(x, y, boxWidth, fontSize);\n\t\t\t\t\t}\n\t\t\t\t\tctx.fillRect(x, y, boxWidth, fontSize);\n\t\t\t\t}\n\n\t\t\t\tctx.restore();\n\t\t\t};\n\t\t\tvar fillText = function(x, y, legendItem, textWidth) {\n\t\t\t\tvar halfFontSize = fontSize / 2;\n\t\t\t\tvar xLeft = boxWidth + halfFontSize + x;\n\t\t\t\tvar yMiddle = y + halfFontSize;\n\n\t\t\t\tctx.fillText(legendItem.text, xLeft, yMiddle);\n\n\t\t\t\tif (legendItem.hidden) {\n\t\t\t\t\t// Strikethrough the text if hidden\n\t\t\t\t\tctx.beginPath();\n\t\t\t\t\tctx.lineWidth = 2;\n\t\t\t\t\tctx.moveTo(xLeft, yMiddle);\n\t\t\t\t\tctx.lineTo(xLeft + textWidth, yMiddle);\n\t\t\t\t\tctx.stroke();\n\t\t\t\t}\n\t\t\t};\n\n\t\t\t// Horizontal\n\t\t\tvar isHorizontal = me.isHorizontal();\n\t\t\tif (isHorizontal) {\n\t\t\t\tcursor = {\n\t\t\t\t\tx: me.left + ((legendWidth - lineWidths[0]) / 2),\n\t\t\t\t\ty: me.top + labelOpts.padding,\n\t\t\t\t\tline: 0\n\t\t\t\t};\n\t\t\t} else {\n\t\t\t\tcursor = {\n\t\t\t\t\tx: me.left + labelOpts.padding,\n\t\t\t\t\ty: me.top + labelOpts.padding,\n\t\t\t\t\tline: 0\n\t\t\t\t};\n\t\t\t}\n\n\t\t\tvar itemHeight = fontSize + labelOpts.padding;\n\t\t\thelpers.each(me.legendItems, function(legendItem, i) {\n\t\t\t\tvar textWidth = ctx.measureText(legendItem.text).width;\n\t\t\t\tvar width = boxWidth + (fontSize / 2) + textWidth;\n\t\t\t\tvar x = cursor.x;\n\t\t\t\tvar y = cursor.y;\n\n\t\t\t\tif (isHorizontal) {\n\t\t\t\t\tif (x + width >= legendWidth) {\n\t\t\t\t\t\ty = cursor.y += itemHeight;\n\t\t\t\t\t\tcursor.line++;\n\t\t\t\t\t\tx = cursor.x = me.left + ((legendWidth - lineWidths[cursor.line]) / 2);\n\t\t\t\t\t}\n\t\t\t\t} else if (y + itemHeight > me.bottom) {\n\t\t\t\t\tx = cursor.x = x + me.columnWidths[cursor.line] + labelOpts.padding;\n\t\t\t\t\ty = cursor.y = me.top + labelOpts.padding;\n\t\t\t\t\tcursor.line++;\n\t\t\t\t}\n\n\t\t\t\tdrawLegendBox(x, y, legendItem);\n\n\t\t\t\thitboxes[i].left = x;\n\t\t\t\thitboxes[i].top = y;\n\n\t\t\t\t// Fill the actual label\n\t\t\t\tfillText(x, y, legendItem, textWidth);\n\n\t\t\t\tif (isHorizontal) {\n\t\t\t\t\tcursor.x += width + (labelOpts.padding);\n\t\t\t\t} else {\n\t\t\t\t\tcursor.y += itemHeight;\n\t\t\t\t}\n\n\t\t\t});\n\t\t}\n\t},\n\n\t/**\n\t * Handle an event\n\t * @private\n\t * @param {IEvent} event - The event to handle\n\t * @return {Boolean} true if a change occured\n\t */\n\thandleEvent: function(e) {\n\t\tvar me = this;\n\t\tvar opts = me.options;\n\t\tvar type = e.type === 'mouseup' ? 'click' : e.type;\n\t\tvar changed = false;\n\n\t\tif (type === 'mousemove') {\n\t\t\tif (!opts.onHover) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t} else if (type === 'click') {\n\t\t\tif (!opts.onClick) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t} else {\n\t\t\treturn;\n\t\t}\n\n\t\t// Chart event already has relative position in it\n\t\tvar x = e.x;\n\t\tvar y = e.y;\n\n\t\tif (x >= me.left && x <= me.right && y >= me.top && y <= me.bottom) {\n\t\t\t// See if we are touching one of the dataset boxes\n\t\t\tvar lh = me.legendHitBoxes;\n\t\t\tfor (var i = 0; i < lh.length; ++i) {\n\t\t\t\tvar hitBox = lh[i];\n\n\t\t\t\tif (x >= hitBox.left && x <= hitBox.left + hitBox.width && y >= hitBox.top && y <= hitBox.top + hitBox.height) {\n\t\t\t\t\t// Touching an element\n\t\t\t\t\tif (type === 'click') {\n\t\t\t\t\t\t// use e.native for backwards compatibility\n\t\t\t\t\t\topts.onClick.call(me, e.native, me.legendItems[i]);\n\t\t\t\t\t\tchanged = true;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t} else if (type === 'mousemove') {\n\t\t\t\t\t\t// use e.native for backwards compatibility\n\t\t\t\t\t\topts.onHover.call(me, e.native, me.legendItems[i]);\n\t\t\t\t\t\tchanged = true;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn changed;\n\t}\n});\n\nfunction createNewLegendAndAttach(chart, legendOpts) {\n\tvar legend = new Legend({\n\t\tctx: chart.ctx,\n\t\toptions: legendOpts,\n\t\tchart: chart\n\t});\n\n\tlayouts.configure(chart, legend, legendOpts);\n\tlayouts.addBox(chart, legend);\n\tchart.legend = legend;\n}\n\nmodule.exports = {\n\tid: 'legend',\n\n\t/**\n\t * Backward compatibility: since 2.1.5, the legend is registered as a plugin, making\n\t * Chart.Legend obsolete. To avoid a breaking change, we export the Legend as part of\n\t * the plugin, which one will be re-exposed in the chart.js file.\n\t * https://github.com/chartjs/Chart.js/pull/2640\n\t * @private\n\t */\n\t_element: Legend,\n\n\tbeforeInit: function(chart) {\n\t\tvar legendOpts = chart.options.legend;\n\n\t\tif (legendOpts) {\n\t\t\tcreateNewLegendAndAttach(chart, legendOpts);\n\t\t}\n\t},\n\n\tbeforeUpdate: function(chart) {\n\t\tvar legendOpts = chart.options.legend;\n\t\tvar legend = chart.legend;\n\n\t\tif (legendOpts) {\n\t\t\thelpers.mergeIf(legendOpts, defaults.global.legend);\n\n\t\t\tif (legend) {\n\t\t\t\tlayouts.configure(chart, legend, legendOpts);\n\t\t\t\tlegend.options = legendOpts;\n\t\t\t} else {\n\t\t\t\tcreateNewLegendAndAttach(chart, legendOpts);\n\t\t\t}\n\t\t} else if (legend) {\n\t\t\tlayouts.removeBox(chart, legend);\n\t\t\tdelete chart.legend;\n\t\t}\n\t},\n\n\tafterEvent: function(chart, e) {\n\t\tvar legend = chart.legend;\n\t\tif (legend) {\n\t\t\tlegend.handleEvent(e);\n\t\t}\n\t}\n};\n","'use strict';\n\nmodule.exports = function(Chart) {\n\n\tChart.Bubble = function(context, config) {\n\t\tconfig.type = 'bubble';\n\t\treturn new Chart(context, config);\n\t};\n\n};\n","'use strict';\n\nvar Element = require('./core.element');\n\nvar exports = module.exports = Element.extend({\n\tchart: null, // the animation associated chart instance\n\tcurrentStep: 0, // the current animation step\n\tnumSteps: 60, // default number of steps\n\teasing: '', // the easing to use for this animation\n\trender: null, // render function used by the animation service\n\n\tonAnimationProgress: null, // user specified callback to fire on each step of the animation\n\tonAnimationComplete: null, // user specified callback to fire when the animation finishes\n});\n\n// DEPRECATIONS\n\n/**\n * Provided for backward compatibility, use Chart.Animation instead\n * @prop Chart.Animation#animationObject\n * @deprecated since version 2.6.0\n * @todo remove at version 3\n */\nObject.defineProperty(exports.prototype, 'animationObject', {\n\tget: function() {\n\t\treturn this;\n\t}\n});\n\n/**\n * Provided for backward compatibility, use Chart.Animation#chart instead\n * @prop Chart.Animation#chartInstance\n * @deprecated since version 2.6.0\n * @todo remove at version 3\n */\nObject.defineProperty(exports.prototype, 'chartInstance', {\n\tget: function() {\n\t\treturn this.chart;\n\t},\n\tset: function(value) {\n\t\tthis.chart = value;\n\t}\n});\n","'use strict';\n\nvar helpers = require('../helpers/index');\n\nmodule.exports = function(Chart) {\n\n\tvar arrayEvents = ['push', 'pop', 'shift', 'splice', 'unshift'];\n\n\t/**\n\t * Hooks the array methods that add or remove values ('push', pop', 'shift', 'splice',\n\t * 'unshift') and notify the listener AFTER the array has been altered. Listeners are\n\t * called on the 'onData*' callbacks (e.g. onDataPush, etc.) with same arguments.\n\t */\n\tfunction listenArrayEvents(array, listener) {\n\t\tif (array._chartjs) {\n\t\t\tarray._chartjs.listeners.push(listener);\n\t\t\treturn;\n\t\t}\n\n\t\tObject.defineProperty(array, '_chartjs', {\n\t\t\tconfigurable: true,\n\t\t\tenumerable: false,\n\t\t\tvalue: {\n\t\t\t\tlisteners: [listener]\n\t\t\t}\n\t\t});\n\n\t\tarrayEvents.forEach(function(key) {\n\t\t\tvar method = 'onData' + key.charAt(0).toUpperCase() + key.slice(1);\n\t\t\tvar base = array[key];\n\n\t\t\tObject.defineProperty(array, key, {\n\t\t\t\tconfigurable: true,\n\t\t\t\tenumerable: false,\n\t\t\t\tvalue: function() {\n\t\t\t\t\tvar args = Array.prototype.slice.call(arguments);\n\t\t\t\t\tvar res = base.apply(this, args);\n\n\t\t\t\t\thelpers.each(array._chartjs.listeners, function(object) {\n\t\t\t\t\t\tif (typeof object[method] === 'function') {\n\t\t\t\t\t\t\tobject[method].apply(object, args);\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\n\t\t\t\t\treturn res;\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\t}\n\n\t/**\n\t * Removes the given array event listener and cleanup extra attached properties (such as\n\t * the _chartjs stub and overridden methods) if array doesn't have any more listeners.\n\t */\n\tfunction unlistenArrayEvents(array, listener) {\n\t\tvar stub = array._chartjs;\n\t\tif (!stub) {\n\t\t\treturn;\n\t\t}\n\n\t\tvar listeners = stub.listeners;\n\t\tvar index = listeners.indexOf(listener);\n\t\tif (index !== -1) {\n\t\t\tlisteners.splice(index, 1);\n\t\t}\n\n\t\tif (listeners.length > 0) {\n\t\t\treturn;\n\t\t}\n\n\t\tarrayEvents.forEach(function(key) {\n\t\t\tdelete array[key];\n\t\t});\n\n\t\tdelete array._chartjs;\n\t}\n\n\t// Base class for all dataset controllers (line, bar, etc)\n\tChart.DatasetController = function(chart, datasetIndex) {\n\t\tthis.initialize(chart, datasetIndex);\n\t};\n\n\thelpers.extend(Chart.DatasetController.prototype, {\n\n\t\t/**\n\t\t * Element type used to generate a meta dataset (e.g. Chart.element.Line).\n\t\t * @type {Chart.core.element}\n\t\t */\n\t\tdatasetElementType: null,\n\n\t\t/**\n\t\t * Element type used to generate a meta data (e.g. Chart.element.Point).\n\t\t * @type {Chart.core.element}\n\t\t */\n\t\tdataElementType: null,\n\n\t\tinitialize: function(chart, datasetIndex) {\n\t\t\tvar me = this;\n\t\t\tme.chart = chart;\n\t\t\tme.index = datasetIndex;\n\t\t\tme.linkScales();\n\t\t\tme.addElements();\n\t\t},\n\n\t\tupdateIndex: function(datasetIndex) {\n\t\t\tthis.index = datasetIndex;\n\t\t},\n\n\t\tlinkScales: function() {\n\t\t\tvar me = this;\n\t\t\tvar meta = me.getMeta();\n\t\t\tvar dataset = me.getDataset();\n\n\t\t\tif (meta.xAxisID === null || !(meta.xAxisID in me.chart.scales)) {\n\t\t\t\tmeta.xAxisID = dataset.xAxisID || me.chart.options.scales.xAxes[0].id;\n\t\t\t}\n\t\t\tif (meta.yAxisID === null || !(meta.yAxisID in me.chart.scales)) {\n\t\t\t\tmeta.yAxisID = dataset.yAxisID || me.chart.options.scales.yAxes[0].id;\n\t\t\t}\n\t\t},\n\n\t\tgetDataset: function() {\n\t\t\treturn this.chart.data.datasets[this.index];\n\t\t},\n\n\t\tgetMeta: function() {\n\t\t\treturn this.chart.getDatasetMeta(this.index);\n\t\t},\n\n\t\tgetScaleForId: function(scaleID) {\n\t\t\treturn this.chart.scales[scaleID];\n\t\t},\n\n\t\treset: function() {\n\t\t\tthis.update(true);\n\t\t},\n\n\t\t/**\n\t\t * @private\n\t\t */\n\t\tdestroy: function() {\n\t\t\tif (this._data) {\n\t\t\t\tunlistenArrayEvents(this._data, this);\n\t\t\t}\n\t\t},\n\n\t\tcreateMetaDataset: function() {\n\t\t\tvar me = this;\n\t\t\tvar type = me.datasetElementType;\n\t\t\treturn type && new type({\n\t\t\t\t_chart: me.chart,\n\t\t\t\t_datasetIndex: me.index\n\t\t\t});\n\t\t},\n\n\t\tcreateMetaData: function(index) {\n\t\t\tvar me = this;\n\t\t\tvar type = me.dataElementType;\n\t\t\treturn type && new type({\n\t\t\t\t_chart: me.chart,\n\t\t\t\t_datasetIndex: me.index,\n\t\t\t\t_index: index\n\t\t\t});\n\t\t},\n\n\t\taddElements: function() {\n\t\t\tvar me = this;\n\t\t\tvar meta = me.getMeta();\n\t\t\tvar data = me.getDataset().data || [];\n\t\t\tvar metaData = meta.data;\n\t\t\tvar i, ilen;\n\n\t\t\tfor (i = 0, ilen = data.length; i < ilen; ++i) {\n\t\t\t\tmetaData[i] = metaData[i] || me.createMetaData(i);\n\t\t\t}\n\n\t\t\tmeta.dataset = meta.dataset || me.createMetaDataset();\n\t\t},\n\n\t\taddElementAndReset: function(index) {\n\t\t\tvar element = this.createMetaData(index);\n\t\t\tthis.getMeta().data.splice(index, 0, element);\n\t\t\tthis.updateElement(element, index, true);\n\t\t},\n\n\t\tbuildOrUpdateElements: function() {\n\t\t\tvar me = this;\n\t\t\tvar dataset = me.getDataset();\n\t\t\tvar data = dataset.data || (dataset.data = []);\n\n\t\t\t// In order to correctly handle data addition/deletion animation (an thus simulate\n\t\t\t// real-time charts), we need to monitor these data modifications and synchronize\n\t\t\t// the internal meta data accordingly.\n\t\t\tif (me._data !== data) {\n\t\t\t\tif (me._data) {\n\t\t\t\t\t// This case happens when the user replaced the data array instance.\n\t\t\t\t\tunlistenArrayEvents(me._data, me);\n\t\t\t\t}\n\n\t\t\t\tlistenArrayEvents(data, me);\n\t\t\t\tme._data = data;\n\t\t\t}\n\n\t\t\t// Re-sync meta data in case the user replaced the data array or if we missed\n\t\t\t// any updates and so make sure that we handle number of datapoints changing.\n\t\t\tme.resyncElements();\n\t\t},\n\n\t\tupdate: helpers.noop,\n\n\t\ttransition: function(easingValue) {\n\t\t\tvar meta = this.getMeta();\n\t\t\tvar elements = meta.data || [];\n\t\t\tvar ilen = elements.length;\n\t\t\tvar i = 0;\n\n\t\t\tfor (; i < ilen; ++i) {\n\t\t\t\telements[i].transition(easingValue);\n\t\t\t}\n\n\t\t\tif (meta.dataset) {\n\t\t\t\tmeta.dataset.transition(easingValue);\n\t\t\t}\n\t\t},\n\n\t\tdraw: function() {\n\t\t\tvar meta = this.getMeta();\n\t\t\tvar elements = meta.data || [];\n\t\t\tvar ilen = elements.length;\n\t\t\tvar i = 0;\n\n\t\t\tif (meta.dataset) {\n\t\t\t\tmeta.dataset.draw();\n\t\t\t}\n\n\t\t\tfor (; i < ilen; ++i) {\n\t\t\t\telements[i].draw();\n\t\t\t}\n\t\t},\n\n\t\tremoveHoverStyle: function(element) {\n\t\t\thelpers.merge(element._model, element.$previousStyle || {});\n\t\t\tdelete element.$previousStyle;\n\t\t},\n\n\t\tsetHoverStyle: function(element) {\n\t\t\tvar dataset = this.chart.data.datasets[element._datasetIndex];\n\t\t\tvar index = element._index;\n\t\t\tvar custom = element.custom || {};\n\t\t\tvar valueOrDefault = helpers.valueAtIndexOrDefault;\n\t\t\tvar getHoverColor = helpers.getHoverColor;\n\t\t\tvar model = element._model;\n\n\t\t\telement.$previousStyle = {\n\t\t\t\tbackgroundColor: model.backgroundColor,\n\t\t\t\tborderColor: model.borderColor,\n\t\t\t\tborderWidth: model.borderWidth\n\t\t\t};\n\n\t\t\tmodel.backgroundColor = custom.hoverBackgroundColor ? custom.hoverBackgroundColor : valueOrDefault(dataset.hoverBackgroundColor, index, getHoverColor(model.backgroundColor));\n\t\t\tmodel.borderColor = custom.hoverBorderColor ? custom.hoverBorderColor : valueOrDefault(dataset.hoverBorderColor, index, getHoverColor(model.borderColor));\n\t\t\tmodel.borderWidth = custom.hoverBorderWidth ? custom.hoverBorderWidth : valueOrDefault(dataset.hoverBorderWidth, index, model.borderWidth);\n\t\t},\n\n\t\t/**\n\t\t * @private\n\t\t */\n\t\tresyncElements: function() {\n\t\t\tvar me = this;\n\t\t\tvar meta = me.getMeta();\n\t\t\tvar data = me.getDataset().data;\n\t\t\tvar numMeta = meta.data.length;\n\t\t\tvar numData = data.length;\n\n\t\t\tif (numData < numMeta) {\n\t\t\t\tmeta.data.splice(numData, numMeta - numData);\n\t\t\t} else if (numData > numMeta) {\n\t\t\t\tme.insertElements(numMeta, numData - numMeta);\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * @private\n\t\t */\n\t\tinsertElements: function(start, count) {\n\t\t\tfor (var i = 0; i < count; ++i) {\n\t\t\t\tthis.addElementAndReset(start + i);\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * @private\n\t\t */\n\t\tonDataPush: function() {\n\t\t\tthis.insertElements(this.getDataset().data.length - 1, arguments.length);\n\t\t},\n\n\t\t/**\n\t\t * @private\n\t\t */\n\t\tonDataPop: function() {\n\t\t\tthis.getMeta().data.pop();\n\t\t},\n\n\t\t/**\n\t\t * @private\n\t\t */\n\t\tonDataShift: function() {\n\t\t\tthis.getMeta().data.shift();\n\t\t},\n\n\t\t/**\n\t\t * @private\n\t\t */\n\t\tonDataSplice: function(start, count) {\n\t\t\tthis.getMeta().data.splice(start, count);\n\t\t\tthis.insertElements(start, arguments.length - 2);\n\t\t},\n\n\t\t/**\n\t\t * @private\n\t\t */\n\t\tonDataUnshift: function() {\n\t\t\tthis.insertElements(0, arguments.length);\n\t\t}\n\t});\n\n\tChart.DatasetController.extend = helpers.inherits;\n};\n","'use strict';\n\nvar helpers = require('../helpers/index');\n\nmodule.exports = {\n\t/**\n\t * @private\n\t */\n\t_set: function(scope, values) {\n\t\treturn helpers.merge(this[scope] || (this[scope] = {}), values);\n\t}\n};\n","'use strict';\n\nvar defaults = require('../core/core.defaults');\nvar Element = require('../core/core.element');\n\ndefaults._set('global', {\n\telements: {\n\t\trectangle: {\n\t\t\tbackgroundColor: defaults.global.defaultColor,\n\t\t\tborderColor: defaults.global.defaultColor,\n\t\t\tborderSkipped: 'bottom',\n\t\t\tborderWidth: 0\n\t\t}\n\t}\n});\n\nfunction isVertical(bar) {\n\treturn bar._view.width !== undefined;\n}\n\n/**\n * Helper function to get the bounds of the bar regardless of the orientation\n * @param bar {Chart.Element.Rectangle} the bar\n * @return {Bounds} bounds of the bar\n * @private\n */\nfunction getBarBounds(bar) {\n\tvar vm = bar._view;\n\tvar x1, x2, y1, y2;\n\n\tif (isVertical(bar)) {\n\t\t// vertical\n\t\tvar halfWidth = vm.width / 2;\n\t\tx1 = vm.x - halfWidth;\n\t\tx2 = vm.x + halfWidth;\n\t\ty1 = Math.min(vm.y, vm.base);\n\t\ty2 = Math.max(vm.y, vm.base);\n\t} else {\n\t\t// horizontal bar\n\t\tvar halfHeight = vm.height / 2;\n\t\tx1 = Math.min(vm.x, vm.base);\n\t\tx2 = Math.max(vm.x, vm.base);\n\t\ty1 = vm.y - halfHeight;\n\t\ty2 = vm.y + halfHeight;\n\t}\n\n\treturn {\n\t\tleft: x1,\n\t\ttop: y1,\n\t\tright: x2,\n\t\tbottom: y2\n\t};\n}\n\nmodule.exports = Element.extend({\n\tdraw: function() {\n\t\tvar ctx = this._chart.ctx;\n\t\tvar vm = this._view;\n\t\tvar left, right, top, bottom, signX, signY, borderSkipped;\n\t\tvar borderWidth = vm.borderWidth;\n\n\t\tif (!vm.horizontal) {\n\t\t\t// bar\n\t\t\tleft = vm.x - vm.width / 2;\n\t\t\tright = vm.x + vm.width / 2;\n\t\t\ttop = vm.y;\n\t\t\tbottom = vm.base;\n\t\t\tsignX = 1;\n\t\t\tsignY = bottom > top ? 1 : -1;\n\t\t\tborderSkipped = vm.borderSkipped || 'bottom';\n\t\t} else {\n\t\t\t// horizontal bar\n\t\t\tleft = vm.base;\n\t\t\tright = vm.x;\n\t\t\ttop = vm.y - vm.height / 2;\n\t\t\tbottom = vm.y + vm.height / 2;\n\t\t\tsignX = right > left ? 1 : -1;\n\t\t\tsignY = 1;\n\t\t\tborderSkipped = vm.borderSkipped || 'left';\n\t\t}\n\n\t\t// Canvas doesn't allow us to stroke inside the width so we can\n\t\t// adjust the sizes to fit if we're setting a stroke on the line\n\t\tif (borderWidth) {\n\t\t\t// borderWidth shold be less than bar width and bar height.\n\t\t\tvar barSize = Math.min(Math.abs(left - right), Math.abs(top - bottom));\n\t\t\tborderWidth = borderWidth > barSize ? barSize : borderWidth;\n\t\t\tvar halfStroke = borderWidth / 2;\n\t\t\t// Adjust borderWidth when bar top position is near vm.base(zero).\n\t\t\tvar borderLeft = left + (borderSkipped !== 'left' ? halfStroke * signX : 0);\n\t\t\tvar borderRight = right + (borderSkipped !== 'right' ? -halfStroke * signX : 0);\n\t\t\tvar borderTop = top + (borderSkipped !== 'top' ? halfStroke * signY : 0);\n\t\t\tvar borderBottom = bottom + (borderSkipped !== 'bottom' ? -halfStroke * signY : 0);\n\t\t\t// not become a vertical line?\n\t\t\tif (borderLeft !== borderRight) {\n\t\t\t\ttop = borderTop;\n\t\t\t\tbottom = borderBottom;\n\t\t\t}\n\t\t\t// not become a horizontal line?\n\t\t\tif (borderTop !== borderBottom) {\n\t\t\t\tleft = borderLeft;\n\t\t\t\tright = borderRight;\n\t\t\t}\n\t\t}\n\n\t\tctx.beginPath();\n\t\tctx.fillStyle = vm.backgroundColor;\n\t\tctx.strokeStyle = vm.borderColor;\n\t\tctx.lineWidth = borderWidth;\n\n\t\t// Corner points, from bottom-left to bottom-right clockwise\n\t\t// | 1 2 |\n\t\t// | 0 3 |\n\t\tvar corners = [\n\t\t\t[left, bottom],\n\t\t\t[left, top],\n\t\t\t[right, top],\n\t\t\t[right, bottom]\n\t\t];\n\n\t\t// Find first (starting) corner with fallback to 'bottom'\n\t\tvar borders = ['bottom', 'left', 'top', 'right'];\n\t\tvar startCorner = borders.indexOf(borderSkipped, 0);\n\t\tif (startCorner === -1) {\n\t\t\tstartCorner = 0;\n\t\t}\n\n\t\tfunction cornerAt(index) {\n\t\t\treturn corners[(startCorner + index) % 4];\n\t\t}\n\n\t\t// Draw rectangle from 'startCorner'\n\t\tvar corner = cornerAt(0);\n\t\tctx.moveTo(corner[0], corner[1]);\n\n\t\tfor (var i = 1; i < 4; i++) {\n\t\t\tcorner = cornerAt(i);\n\t\t\tctx.lineTo(corner[0], corner[1]);\n\t\t}\n\n\t\tctx.fill();\n\t\tif (borderWidth) {\n\t\t\tctx.stroke();\n\t\t}\n\t},\n\n\theight: function() {\n\t\tvar vm = this._view;\n\t\treturn vm.base - vm.y;\n\t},\n\n\tinRange: function(mouseX, mouseY) {\n\t\tvar inRange = false;\n\n\t\tif (this._view) {\n\t\t\tvar bounds = getBarBounds(this);\n\t\t\tinRange = mouseX >= bounds.left && mouseX <= bounds.right && mouseY >= bounds.top && mouseY <= bounds.bottom;\n\t\t}\n\n\t\treturn inRange;\n\t},\n\n\tinLabelRange: function(mouseX, mouseY) {\n\t\tvar me = this;\n\t\tif (!me._view) {\n\t\t\treturn false;\n\t\t}\n\n\t\tvar inRange = false;\n\t\tvar bounds = getBarBounds(me);\n\n\t\tif (isVertical(me)) {\n\t\t\tinRange = mouseX >= bounds.left && mouseX <= bounds.right;\n\t\t} else {\n\t\t\tinRange = mouseY >= bounds.top && mouseY <= bounds.bottom;\n\t\t}\n\n\t\treturn inRange;\n\t},\n\n\tinXRange: function(mouseX) {\n\t\tvar bounds = getBarBounds(this);\n\t\treturn mouseX >= bounds.left && mouseX <= bounds.right;\n\t},\n\n\tinYRange: function(mouseY) {\n\t\tvar bounds = getBarBounds(this);\n\t\treturn mouseY >= bounds.top && mouseY <= bounds.bottom;\n\t},\n\n\tgetCenterPoint: function() {\n\t\tvar vm = this._view;\n\t\tvar x, y;\n\t\tif (isVertical(this)) {\n\t\t\tx = vm.x;\n\t\t\ty = (vm.y + vm.base) / 2;\n\t\t} else {\n\t\t\tx = (vm.x + vm.base) / 2;\n\t\t\ty = vm.y;\n\t\t}\n\n\t\treturn {x: x, y: y};\n\t},\n\n\tgetArea: function() {\n\t\tvar vm = this._view;\n\t\treturn vm.width * Math.abs(vm.y - vm.base);\n\t},\n\n\ttooltipPosition: function() {\n\t\tvar vm = this._view;\n\t\treturn {\n\t\t\tx: vm.x,\n\t\t\ty: vm.y\n\t\t};\n\t}\n});\n","'use strict';\n\nvar helpers = require('./helpers.core');\n\n/**\n * Easing functions adapted from Robert Penner's easing equations.\n * @namespace Chart.helpers.easingEffects\n * @see http://www.robertpenner.com/easing/\n */\nvar effects = {\n\tlinear: function(t) {\n\t\treturn t;\n\t},\n\n\teaseInQuad: function(t) {\n\t\treturn t * t;\n\t},\n\n\teaseOutQuad: function(t) {\n\t\treturn -t * (t - 2);\n\t},\n\n\teaseInOutQuad: function(t) {\n\t\tif ((t /= 0.5) < 1) {\n\t\t\treturn 0.5 * t * t;\n\t\t}\n\t\treturn -0.5 * ((--t) * (t - 2) - 1);\n\t},\n\n\teaseInCubic: function(t) {\n\t\treturn t * t * t;\n\t},\n\n\teaseOutCubic: function(t) {\n\t\treturn (t = t - 1) * t * t + 1;\n\t},\n\n\teaseInOutCubic: function(t) {\n\t\tif ((t /= 0.5) < 1) {\n\t\t\treturn 0.5 * t * t * t;\n\t\t}\n\t\treturn 0.5 * ((t -= 2) * t * t + 2);\n\t},\n\n\teaseInQuart: function(t) {\n\t\treturn t * t * t * t;\n\t},\n\n\teaseOutQuart: function(t) {\n\t\treturn -((t = t - 1) * t * t * t - 1);\n\t},\n\n\teaseInOutQuart: function(t) {\n\t\tif ((t /= 0.5) < 1) {\n\t\t\treturn 0.5 * t * t * t * t;\n\t\t}\n\t\treturn -0.5 * ((t -= 2) * t * t * t - 2);\n\t},\n\n\teaseInQuint: function(t) {\n\t\treturn t * t * t * t * t;\n\t},\n\n\teaseOutQuint: function(t) {\n\t\treturn (t = t - 1) * t * t * t * t + 1;\n\t},\n\n\teaseInOutQuint: function(t) {\n\t\tif ((t /= 0.5) < 1) {\n\t\t\treturn 0.5 * t * t * t * t * t;\n\t\t}\n\t\treturn 0.5 * ((t -= 2) * t * t * t * t + 2);\n\t},\n\n\teaseInSine: function(t) {\n\t\treturn -Math.cos(t * (Math.PI / 2)) + 1;\n\t},\n\n\teaseOutSine: function(t) {\n\t\treturn Math.sin(t * (Math.PI / 2));\n\t},\n\n\teaseInOutSine: function(t) {\n\t\treturn -0.5 * (Math.cos(Math.PI * t) - 1);\n\t},\n\n\teaseInExpo: function(t) {\n\t\treturn (t === 0) ? 0 : Math.pow(2, 10 * (t - 1));\n\t},\n\n\teaseOutExpo: function(t) {\n\t\treturn (t === 1) ? 1 : -Math.pow(2, -10 * t) + 1;\n\t},\n\n\teaseInOutExpo: function(t) {\n\t\tif (t === 0) {\n\t\t\treturn 0;\n\t\t}\n\t\tif (t === 1) {\n\t\t\treturn 1;\n\t\t}\n\t\tif ((t /= 0.5) < 1) {\n\t\t\treturn 0.5 * Math.pow(2, 10 * (t - 1));\n\t\t}\n\t\treturn 0.5 * (-Math.pow(2, -10 * --t) + 2);\n\t},\n\n\teaseInCirc: function(t) {\n\t\tif (t >= 1) {\n\t\t\treturn t;\n\t\t}\n\t\treturn -(Math.sqrt(1 - t * t) - 1);\n\t},\n\n\teaseOutCirc: function(t) {\n\t\treturn Math.sqrt(1 - (t = t - 1) * t);\n\t},\n\n\teaseInOutCirc: function(t) {\n\t\tif ((t /= 0.5) < 1) {\n\t\t\treturn -0.5 * (Math.sqrt(1 - t * t) - 1);\n\t\t}\n\t\treturn 0.5 * (Math.sqrt(1 - (t -= 2) * t) + 1);\n\t},\n\n\teaseInElastic: function(t) {\n\t\tvar s = 1.70158;\n\t\tvar p = 0;\n\t\tvar a = 1;\n\t\tif (t === 0) {\n\t\t\treturn 0;\n\t\t}\n\t\tif (t === 1) {\n\t\t\treturn 1;\n\t\t}\n\t\tif (!p) {\n\t\t\tp = 0.3;\n\t\t}\n\t\tif (a < 1) {\n\t\t\ta = 1;\n\t\t\ts = p / 4;\n\t\t} else {\n\t\t\ts = p / (2 * Math.PI) * Math.asin(1 / a);\n\t\t}\n\t\treturn -(a * Math.pow(2, 10 * (t -= 1)) * Math.sin((t - s) * (2 * Math.PI) / p));\n\t},\n\n\teaseOutElastic: function(t) {\n\t\tvar s = 1.70158;\n\t\tvar p = 0;\n\t\tvar a = 1;\n\t\tif (t === 0) {\n\t\t\treturn 0;\n\t\t}\n\t\tif (t === 1) {\n\t\t\treturn 1;\n\t\t}\n\t\tif (!p) {\n\t\t\tp = 0.3;\n\t\t}\n\t\tif (a < 1) {\n\t\t\ta = 1;\n\t\t\ts = p / 4;\n\t\t} else {\n\t\t\ts = p / (2 * Math.PI) * Math.asin(1 / a);\n\t\t}\n\t\treturn a * Math.pow(2, -10 * t) * Math.sin((t - s) * (2 * Math.PI) / p) + 1;\n\t},\n\n\teaseInOutElastic: function(t) {\n\t\tvar s = 1.70158;\n\t\tvar p = 0;\n\t\tvar a = 1;\n\t\tif (t === 0) {\n\t\t\treturn 0;\n\t\t}\n\t\tif ((t /= 0.5) === 2) {\n\t\t\treturn 1;\n\t\t}\n\t\tif (!p) {\n\t\t\tp = 0.45;\n\t\t}\n\t\tif (a < 1) {\n\t\t\ta = 1;\n\t\t\ts = p / 4;\n\t\t} else {\n\t\t\ts = p / (2 * Math.PI) * Math.asin(1 / a);\n\t\t}\n\t\tif (t < 1) {\n\t\t\treturn -0.5 * (a * Math.pow(2, 10 * (t -= 1)) * Math.sin((t - s) * (2 * Math.PI) / p));\n\t\t}\n\t\treturn a * Math.pow(2, -10 * (t -= 1)) * Math.sin((t - s) * (2 * Math.PI) / p) * 0.5 + 1;\n\t},\n\teaseInBack: function(t) {\n\t\tvar s = 1.70158;\n\t\treturn t * t * ((s + 1) * t - s);\n\t},\n\n\teaseOutBack: function(t) {\n\t\tvar s = 1.70158;\n\t\treturn (t = t - 1) * t * ((s + 1) * t + s) + 1;\n\t},\n\n\teaseInOutBack: function(t) {\n\t\tvar s = 1.70158;\n\t\tif ((t /= 0.5) < 1) {\n\t\t\treturn 0.5 * (t * t * (((s *= (1.525)) + 1) * t - s));\n\t\t}\n\t\treturn 0.5 * ((t -= 2) * t * (((s *= (1.525)) + 1) * t + s) + 2);\n\t},\n\n\teaseInBounce: function(t) {\n\t\treturn 1 - effects.easeOutBounce(1 - t);\n\t},\n\n\teaseOutBounce: function(t) {\n\t\tif (t < (1 / 2.75)) {\n\t\t\treturn 7.5625 * t * t;\n\t\t}\n\t\tif (t < (2 / 2.75)) {\n\t\t\treturn 7.5625 * (t -= (1.5 / 2.75)) * t + 0.75;\n\t\t}\n\t\tif (t < (2.5 / 2.75)) {\n\t\t\treturn 7.5625 * (t -= (2.25 / 2.75)) * t + 0.9375;\n\t\t}\n\t\treturn 7.5625 * (t -= (2.625 / 2.75)) * t + 0.984375;\n\t},\n\n\teaseInOutBounce: function(t) {\n\t\tif (t < 0.5) {\n\t\t\treturn effects.easeInBounce(t * 2) * 0.5;\n\t\t}\n\t\treturn effects.easeOutBounce(t * 2 - 1) * 0.5 + 0.5;\n\t}\n};\n\nmodule.exports = {\n\teffects: effects\n};\n\n// DEPRECATIONS\n\n/**\n * Provided for backward compatibility, use Chart.helpers.easing.effects instead.\n * @function Chart.helpers.easingEffects\n * @deprecated since version 2.7.0\n * @todo remove at version 3\n * @private\n */\nhelpers.easingEffects = effects;\n","'use strict';\n\nvar helpers = require('../helpers/index');\nvar Scale = require('../core/core.scale');\nvar scaleService = require('../core/core.scaleService');\nvar Ticks = require('../core/core.ticks');\n\n/**\n * Generate a set of logarithmic ticks\n * @param generationOptions the options used to generate the ticks\n * @param dataRange the range of the data\n * @returns {Array<Number>} array of tick values\n */\nfunction generateTicks(generationOptions, dataRange) {\n\tvar ticks = [];\n\tvar valueOrDefault = helpers.valueOrDefault;\n\n\t// Figure out what the max number of ticks we can support it is based on the size of\n\t// the axis area. For now, we say that the minimum tick spacing in pixels must be 50\n\t// We also limit the maximum number of ticks to 11 which gives a nice 10 squares on\n\t// the graph\n\tvar tickVal = valueOrDefault(generationOptions.min, Math.pow(10, Math.floor(helpers.log10(dataRange.min))));\n\n\tvar endExp = Math.floor(helpers.log10(dataRange.max));\n\tvar endSignificand = Math.ceil(dataRange.max / Math.pow(10, endExp));\n\tvar exp, significand;\n\n\tif (tickVal === 0) {\n\t\texp = Math.floor(helpers.log10(dataRange.minNotZero));\n\t\tsignificand = Math.floor(dataRange.minNotZero / Math.pow(10, exp));\n\n\t\tticks.push(tickVal);\n\t\ttickVal = significand * Math.pow(10, exp);\n\t} else {\n\t\texp = Math.floor(helpers.log10(tickVal));\n\t\tsignificand = Math.floor(tickVal / Math.pow(10, exp));\n\t}\n\tvar precision = exp < 0 ? Math.pow(10, Math.abs(exp)) : 1;\n\n\tdo {\n\t\tticks.push(tickVal);\n\n\t\t++significand;\n\t\tif (significand === 10) {\n\t\t\tsignificand = 1;\n\t\t\t++exp;\n\t\t\tprecision = exp >= 0 ? 1 : precision;\n\t\t}\n\n\t\ttickVal = Math.round(significand * Math.pow(10, exp) * precision) / precision;\n\t} while (exp < endExp || (exp === endExp && significand < endSignificand));\n\n\tvar lastTick = valueOrDefault(generationOptions.max, tickVal);\n\tticks.push(lastTick);\n\n\treturn ticks;\n}\n\n\nmodule.exports = function(Chart) {\n\n\tvar defaultConfig = {\n\t\tposition: 'left',\n\n\t\t// label settings\n\t\tticks: {\n\t\t\tcallback: Ticks.formatters.logarithmic\n\t\t}\n\t};\n\n\tvar LogarithmicScale = Scale.extend({\n\t\tdetermineDataLimits: function() {\n\t\t\tvar me = this;\n\t\t\tvar opts = me.options;\n\t\t\tvar chart = me.chart;\n\t\t\tvar data = chart.data;\n\t\t\tvar datasets = data.datasets;\n\t\t\tvar isHorizontal = me.isHorizontal();\n\t\t\tfunction IDMatches(meta) {\n\t\t\t\treturn isHorizontal ? meta.xAxisID === me.id : meta.yAxisID === me.id;\n\t\t\t}\n\n\t\t\t// Calculate Range\n\t\t\tme.min = null;\n\t\t\tme.max = null;\n\t\t\tme.minNotZero = null;\n\n\t\t\tvar hasStacks = opts.stacked;\n\t\t\tif (hasStacks === undefined) {\n\t\t\t\thelpers.each(datasets, function(dataset, datasetIndex) {\n\t\t\t\t\tif (hasStacks) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tvar meta = chart.getDatasetMeta(datasetIndex);\n\t\t\t\t\tif (chart.isDatasetVisible(datasetIndex) && IDMatches(meta) &&\n\t\t\t\t\t\tmeta.stack !== undefined) {\n\t\t\t\t\t\thasStacks = true;\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tif (opts.stacked || hasStacks) {\n\t\t\t\tvar valuesPerStack = {};\n\n\t\t\t\thelpers.each(datasets, function(dataset, datasetIndex) {\n\t\t\t\t\tvar meta = chart.getDatasetMeta(datasetIndex);\n\t\t\t\t\tvar key = [\n\t\t\t\t\t\tmeta.type,\n\t\t\t\t\t\t// we have a separate stack for stack=undefined datasets when the opts.stacked is undefined\n\t\t\t\t\t\t((opts.stacked === undefined && meta.stack === undefined) ? datasetIndex : ''),\n\t\t\t\t\t\tmeta.stack\n\t\t\t\t\t].join('.');\n\n\t\t\t\t\tif (chart.isDatasetVisible(datasetIndex) && IDMatches(meta)) {\n\t\t\t\t\t\tif (valuesPerStack[key] === undefined) {\n\t\t\t\t\t\t\tvaluesPerStack[key] = [];\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\thelpers.each(dataset.data, function(rawValue, index) {\n\t\t\t\t\t\t\tvar values = valuesPerStack[key];\n\t\t\t\t\t\t\tvar value = +me.getRightValue(rawValue);\n\t\t\t\t\t\t\t// invalid, hidden and negative values are ignored\n\t\t\t\t\t\t\tif (isNaN(value) || meta.data[index].hidden || value < 0) {\n\t\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tvalues[index] = values[index] || 0;\n\t\t\t\t\t\t\tvalues[index] += value;\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\t\thelpers.each(valuesPerStack, function(valuesForType) {\n\t\t\t\t\tif (valuesForType.length > 0) {\n\t\t\t\t\t\tvar minVal = helpers.min(valuesForType);\n\t\t\t\t\t\tvar maxVal = helpers.max(valuesForType);\n\t\t\t\t\t\tme.min = me.min === null ? minVal : Math.min(me.min, minVal);\n\t\t\t\t\t\tme.max = me.max === null ? maxVal : Math.max(me.max, maxVal);\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\t} else {\n\t\t\t\thelpers.each(datasets, function(dataset, datasetIndex) {\n\t\t\t\t\tvar meta = chart.getDatasetMeta(datasetIndex);\n\t\t\t\t\tif (chart.isDatasetVisible(datasetIndex) && IDMatches(meta)) {\n\t\t\t\t\t\thelpers.each(dataset.data, function(rawValue, index) {\n\t\t\t\t\t\t\tvar value = +me.getRightValue(rawValue);\n\t\t\t\t\t\t\t// invalid, hidden and negative values are ignored\n\t\t\t\t\t\t\tif (isNaN(value) || meta.data[index].hidden || value < 0) {\n\t\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif (me.min === null) {\n\t\t\t\t\t\t\t\tme.min = value;\n\t\t\t\t\t\t\t} else if (value < me.min) {\n\t\t\t\t\t\t\t\tme.min = value;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif (me.max === null) {\n\t\t\t\t\t\t\t\tme.max = value;\n\t\t\t\t\t\t\t} else if (value > me.max) {\n\t\t\t\t\t\t\t\tme.max = value;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif (value !== 0 && (me.minNotZero === null || value < me.minNotZero)) {\n\t\t\t\t\t\t\t\tme.minNotZero = value;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\n\t\t\t// Common base implementation to handle ticks.min, ticks.max\n\t\t\tthis.handleTickRangeOptions();\n\t\t},\n\t\thandleTickRangeOptions: function() {\n\t\t\tvar me = this;\n\t\t\tvar opts = me.options;\n\t\t\tvar tickOpts = opts.ticks;\n\t\t\tvar valueOrDefault = helpers.valueOrDefault;\n\t\t\tvar DEFAULT_MIN = 1;\n\t\t\tvar DEFAULT_MAX = 10;\n\n\t\t\tme.min = valueOrDefault(tickOpts.min, me.min);\n\t\t\tme.max = valueOrDefault(tickOpts.max, me.max);\n\n\t\t\tif (me.min === me.max) {\n\t\t\t\tif (me.min !== 0 && me.min !== null) {\n\t\t\t\t\tme.min = Math.pow(10, Math.floor(helpers.log10(me.min)) - 1);\n\t\t\t\t\tme.max = Math.pow(10, Math.floor(helpers.log10(me.max)) + 1);\n\t\t\t\t} else {\n\t\t\t\t\tme.min = DEFAULT_MIN;\n\t\t\t\t\tme.max = DEFAULT_MAX;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (me.min === null) {\n\t\t\t\tme.min = Math.pow(10, Math.floor(helpers.log10(me.max)) - 1);\n\t\t\t}\n\t\t\tif (me.max === null) {\n\t\t\t\tme.max = me.min !== 0\n\t\t\t\t\t? Math.pow(10, Math.floor(helpers.log10(me.min)) + 1)\n\t\t\t\t\t: DEFAULT_MAX;\n\t\t\t}\n\t\t\tif (me.minNotZero === null) {\n\t\t\t\tif (me.min > 0) {\n\t\t\t\t\tme.minNotZero = me.min;\n\t\t\t\t} else if (me.max < 1) {\n\t\t\t\t\tme.minNotZero = Math.pow(10, Math.floor(helpers.log10(me.max)));\n\t\t\t\t} else {\n\t\t\t\t\tme.minNotZero = DEFAULT_MIN;\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\tbuildTicks: function() {\n\t\t\tvar me = this;\n\t\t\tvar opts = me.options;\n\t\t\tvar tickOpts = opts.ticks;\n\t\t\tvar reverse = !me.isHorizontal();\n\n\t\t\tvar generationOptions = {\n\t\t\t\tmin: tickOpts.min,\n\t\t\t\tmax: tickOpts.max\n\t\t\t};\n\t\t\tvar ticks = me.ticks = generateTicks(generationOptions, me);\n\n\t\t\t// At this point, we need to update our max and min given the tick values since we have expanded the\n\t\t\t// range of the scale\n\t\t\tme.max = helpers.max(ticks);\n\t\t\tme.min = helpers.min(ticks);\n\n\t\t\tif (tickOpts.reverse) {\n\t\t\t\treverse = !reverse;\n\t\t\t\tme.start = me.max;\n\t\t\t\tme.end = me.min;\n\t\t\t} else {\n\t\t\t\tme.start = me.min;\n\t\t\t\tme.end = me.max;\n\t\t\t}\n\t\t\tif (reverse) {\n\t\t\t\tticks.reverse();\n\t\t\t}\n\t\t},\n\t\tconvertTicksToLabels: function() {\n\t\t\tthis.tickValues = this.ticks.slice();\n\n\t\t\tScale.prototype.convertTicksToLabels.call(this);\n\t\t},\n\t\t// Get the correct tooltip label\n\t\tgetLabelForIndex: function(index, datasetIndex) {\n\t\t\treturn +this.getRightValue(this.chart.data.datasets[datasetIndex].data[index]);\n\t\t},\n\t\tgetPixelForTick: function(index) {\n\t\t\treturn this.getPixelForValue(this.tickValues[index]);\n\t\t},\n\t\t/**\n\t\t * Returns the value of the first tick.\n\t\t * @param {Number} value - The minimum not zero value.\n\t\t * @return {Number} The first tick value.\n\t\t * @private\n\t\t */\n\t\t_getFirstTickValue: function(value) {\n\t\t\tvar exp = Math.floor(helpers.log10(value));\n\t\t\tvar significand = Math.floor(value / Math.pow(10, exp));\n\n\t\t\treturn significand * Math.pow(10, exp);\n\t\t},\n\t\tgetPixelForValue: function(value) {\n\t\t\tvar me = this;\n\t\t\tvar reverse = me.options.ticks.reverse;\n\t\t\tvar log10 = helpers.log10;\n\t\t\tvar firstTickValue = me._getFirstTickValue(me.minNotZero);\n\t\t\tvar offset = 0;\n\t\t\tvar innerDimension, pixel, start, end, sign;\n\n\t\t\tvalue = +me.getRightValue(value);\n\t\t\tif (reverse) {\n\t\t\t\tstart = me.end;\n\t\t\t\tend = me.start;\n\t\t\t\tsign = -1;\n\t\t\t} else {\n\t\t\t\tstart = me.start;\n\t\t\t\tend = me.end;\n\t\t\t\tsign = 1;\n\t\t\t}\n\t\t\tif (me.isHorizontal()) {\n\t\t\t\tinnerDimension = me.width;\n\t\t\t\tpixel = reverse ? me.right : me.left;\n\t\t\t} else {\n\t\t\t\tinnerDimension = me.height;\n\t\t\t\tsign *= -1; // invert, since the upper-left corner of the canvas is at pixel (0, 0)\n\t\t\t\tpixel = reverse ? me.top : me.bottom;\n\t\t\t}\n\t\t\tif (value !== start) {\n\t\t\t\tif (start === 0) { // include zero tick\n\t\t\t\t\toffset = helpers.getValueOrDefault(\n\t\t\t\t\t\tme.options.ticks.fontSize,\n\t\t\t\t\t\tChart.defaults.global.defaultFontSize\n\t\t\t\t\t);\n\t\t\t\t\tinnerDimension -= offset;\n\t\t\t\t\tstart = firstTickValue;\n\t\t\t\t}\n\t\t\t\tif (value !== 0) {\n\t\t\t\t\toffset += innerDimension / (log10(end) - log10(start)) * (log10(value) - log10(start));\n\t\t\t\t}\n\t\t\t\tpixel += sign * offset;\n\t\t\t}\n\t\t\treturn pixel;\n\t\t},\n\t\tgetValueForPixel: function(pixel) {\n\t\t\tvar me = this;\n\t\t\tvar reverse = me.options.ticks.reverse;\n\t\t\tvar log10 = helpers.log10;\n\t\t\tvar firstTickValue = me._getFirstTickValue(me.minNotZero);\n\t\t\tvar innerDimension, start, end, value;\n\n\t\t\tif (reverse) {\n\t\t\t\tstart = me.end;\n\t\t\t\tend = me.start;\n\t\t\t} else {\n\t\t\t\tstart = me.start;\n\t\t\t\tend = me.end;\n\t\t\t}\n\t\t\tif (me.isHorizontal()) {\n\t\t\t\tinnerDimension = me.width;\n\t\t\t\tvalue = reverse ? me.right - pixel : pixel - me.left;\n\t\t\t} else {\n\t\t\t\tinnerDimension = me.height;\n\t\t\t\tvalue = reverse ? pixel - me.top : me.bottom - pixel;\n\t\t\t}\n\t\t\tif (value !== start) {\n\t\t\t\tif (start === 0) { // include zero tick\n\t\t\t\t\tvar offset = helpers.getValueOrDefault(\n\t\t\t\t\t\tme.options.ticks.fontSize,\n\t\t\t\t\t\tChart.defaults.global.defaultFontSize\n\t\t\t\t\t);\n\t\t\t\t\tvalue -= offset;\n\t\t\t\t\tinnerDimension -= offset;\n\t\t\t\t\tstart = firstTickValue;\n\t\t\t\t}\n\t\t\t\tvalue *= log10(end) - log10(start);\n\t\t\t\tvalue /= innerDimension;\n\t\t\t\tvalue = Math.pow(10, log10(start) + value);\n\t\t\t}\n\t\t\treturn value;\n\t\t}\n\t});\n\n\tscaleService.registerScaleType('logarithmic', LogarithmicScale, defaultConfig);\n};\n","'use strict';\n\nvar defaults = require('../core/core.defaults');\nvar helpers = require('../helpers/index');\nvar scaleService = require('../core/core.scaleService');\nvar Ticks = require('../core/core.ticks');\n\nmodule.exports = function(Chart) {\n\n\tvar globalDefaults = defaults.global;\n\n\tvar defaultConfig = {\n\t\tdisplay: true,\n\n\t\t// Boolean - Whether to animate scaling the chart from the centre\n\t\tanimate: true,\n\t\tposition: 'chartArea',\n\n\t\tangleLines: {\n\t\t\tdisplay: true,\n\t\t\tcolor: 'rgba(0, 0, 0, 0.1)',\n\t\t\tlineWidth: 1\n\t\t},\n\n\t\tgridLines: {\n\t\t\tcircular: false\n\t\t},\n\n\t\t// label settings\n\t\tticks: {\n\t\t\t// Boolean - Show a backdrop to the scale label\n\t\t\tshowLabelBackdrop: true,\n\n\t\t\t// String - The colour of the label backdrop\n\t\t\tbackdropColor: 'rgba(255,255,255,0.75)',\n\n\t\t\t// Number - The backdrop padding above & below the label in pixels\n\t\t\tbackdropPaddingY: 2,\n\n\t\t\t// Number - The backdrop padding to the side of the label in pixels\n\t\t\tbackdropPaddingX: 2,\n\n\t\t\tcallback: Ticks.formatters.linear\n\t\t},\n\n\t\tpointLabels: {\n\t\t\t// Boolean - if true, show point labels\n\t\t\tdisplay: true,\n\n\t\t\t// Number - Point label font size in pixels\n\t\t\tfontSize: 10,\n\n\t\t\t// Function - Used to convert point labels\n\t\t\tcallback: function(label) {\n\t\t\t\treturn label;\n\t\t\t}\n\t\t}\n\t};\n\n\tfunction getValueCount(scale) {\n\t\tvar opts = scale.options;\n\t\treturn opts.angleLines.display || opts.pointLabels.display ? scale.chart.data.labels.length : 0;\n\t}\n\n\tfunction getPointLabelFontOptions(scale) {\n\t\tvar pointLabelOptions = scale.options.pointLabels;\n\t\tvar fontSize = helpers.valueOrDefault(pointLabelOptions.fontSize, globalDefaults.defaultFontSize);\n\t\tvar fontStyle = helpers.valueOrDefault(pointLabelOptions.fontStyle, globalDefaults.defaultFontStyle);\n\t\tvar fontFamily = helpers.valueOrDefault(pointLabelOptions.fontFamily, globalDefaults.defaultFontFamily);\n\t\tvar font = helpers.fontString(fontSize, fontStyle, fontFamily);\n\n\t\treturn {\n\t\t\tsize: fontSize,\n\t\t\tstyle: fontStyle,\n\t\t\tfamily: fontFamily,\n\t\t\tfont: font\n\t\t};\n\t}\n\n\tfunction measureLabelSize(ctx, fontSize, label) {\n\t\tif (helpers.isArray(label)) {\n\t\t\treturn {\n\t\t\t\tw: helpers.longestText(ctx, ctx.font, label),\n\t\t\t\th: (label.length * fontSize) + ((label.length - 1) * 1.5 * fontSize)\n\t\t\t};\n\t\t}\n\n\t\treturn {\n\t\t\tw: ctx.measureText(label).width,\n\t\t\th: fontSize\n\t\t};\n\t}\n\n\tfunction determineLimits(angle, pos, size, min, max) {\n\t\tif (angle === min || angle === max) {\n\t\t\treturn {\n\t\t\t\tstart: pos - (size / 2),\n\t\t\t\tend: pos + (size / 2)\n\t\t\t};\n\t\t} else if (angle < min || angle > max) {\n\t\t\treturn {\n\t\t\t\tstart: pos - size - 5,\n\t\t\t\tend: pos\n\t\t\t};\n\t\t}\n\n\t\treturn {\n\t\t\tstart: pos,\n\t\t\tend: pos + size + 5\n\t\t};\n\t}\n\n\t/**\n\t * Helper function to fit a radial linear scale with point labels\n\t */\n\tfunction fitWithPointLabels(scale) {\n\t\t/*\n\t\t * Right, this is really confusing and there is a lot of maths going on here\n\t\t * The gist of the problem is here: https://gist.github.com/nnnick/696cc9c55f4b0beb8fe9\n\t\t *\n\t\t * Reaction: https://dl.dropboxusercontent.com/u/34601363/toomuchscience.gif\n\t\t *\n\t\t * Solution:\n\t\t *\n\t\t * We assume the radius of the polygon is half the size of the canvas at first\n\t\t * at each index we check if the text overlaps.\n\t\t *\n\t\t * Where it does, we store that angle and that index.\n\t\t *\n\t\t * After finding the largest index and angle we calculate how much we need to remove\n\t\t * from the shape radius to move the point inwards by that x.\n\t\t *\n\t\t * We average the left and right distances to get the maximum shape radius that can fit in the box\n\t\t * along with labels.\n\t\t *\n\t\t * Once we have that, we can find the centre point for the chart, by taking the x text protrusion\n\t\t * on each side, removing that from the size, halving it and adding the left x protrusion width.\n\t\t *\n\t\t * This will mean we have a shape fitted to the canvas, as large as it can be with the labels\n\t\t * and position it in the most space efficient manner\n\t\t *\n\t\t * https://dl.dropboxusercontent.com/u/34601363/yeahscience.gif\n\t\t */\n\n\t\tvar plFont = getPointLabelFontOptions(scale);\n\n\t\t// Get maximum radius of the polygon. Either half the height (minus the text width) or half the width.\n\t\t// Use this to calculate the offset + change. - Make sure L/R protrusion is at least 0 to stop issues with centre points\n\t\tvar largestPossibleRadius = Math.min(scale.height / 2, scale.width / 2);\n\t\tvar furthestLimits = {\n\t\t\tr: scale.width,\n\t\t\tl: 0,\n\t\t\tt: scale.height,\n\t\t\tb: 0\n\t\t};\n\t\tvar furthestAngles = {};\n\t\tvar i, textSize, pointPosition;\n\n\t\tscale.ctx.font = plFont.font;\n\t\tscale._pointLabelSizes = [];\n\n\t\tvar valueCount = getValueCount(scale);\n\t\tfor (i = 0; i < valueCount; i++) {\n\t\t\tpointPosition = scale.getPointPosition(i, largestPossibleRadius);\n\t\t\ttextSize = measureLabelSize(scale.ctx, plFont.size, scale.pointLabels[i] || '');\n\t\t\tscale._pointLabelSizes[i] = textSize;\n\n\t\t\t// Add quarter circle to make degree 0 mean top of circle\n\t\t\tvar angleRadians = scale.getIndexAngle(i);\n\t\t\tvar angle = helpers.toDegrees(angleRadians) % 360;\n\t\t\tvar hLimits = determineLimits(angle, pointPosition.x, textSize.w, 0, 180);\n\t\t\tvar vLimits = determineLimits(angle, pointPosition.y, textSize.h, 90, 270);\n\n\t\t\tif (hLimits.start < furthestLimits.l) {\n\t\t\t\tfurthestLimits.l = hLimits.start;\n\t\t\t\tfurthestAngles.l = angleRadians;\n\t\t\t}\n\n\t\t\tif (hLimits.end > furthestLimits.r) {\n\t\t\t\tfurthestLimits.r = hLimits.end;\n\t\t\t\tfurthestAngles.r = angleRadians;\n\t\t\t}\n\n\t\t\tif (vLimits.start < furthestLimits.t) {\n\t\t\t\tfurthestLimits.t = vLimits.start;\n\t\t\t\tfurthestAngles.t = angleRadians;\n\t\t\t}\n\n\t\t\tif (vLimits.end > furthestLimits.b) {\n\t\t\t\tfurthestLimits.b = vLimits.end;\n\t\t\t\tfurthestAngles.b = angleRadians;\n\t\t\t}\n\t\t}\n\n\t\tscale.setReductions(largestPossibleRadius, furthestLimits, furthestAngles);\n\t}\n\n\t/**\n\t * Helper function to fit a radial linear scale with no point labels\n\t */\n\tfunction fit(scale) {\n\t\tvar largestPossibleRadius = Math.min(scale.height / 2, scale.width / 2);\n\t\tscale.drawingArea = Math.round(largestPossibleRadius);\n\t\tscale.setCenterPoint(0, 0, 0, 0);\n\t}\n\n\tfunction getTextAlignForAngle(angle) {\n\t\tif (angle === 0 || angle === 180) {\n\t\t\treturn 'center';\n\t\t} else if (angle < 180) {\n\t\t\treturn 'left';\n\t\t}\n\n\t\treturn 'right';\n\t}\n\n\tfunction fillText(ctx, text, position, fontSize) {\n\t\tif (helpers.isArray(text)) {\n\t\t\tvar y = position.y;\n\t\t\tvar spacing = 1.5 * fontSize;\n\n\t\t\tfor (var i = 0; i < text.length; ++i) {\n\t\t\t\tctx.fillText(text[i], position.x, y);\n\t\t\t\ty += spacing;\n\t\t\t}\n\t\t} else {\n\t\t\tctx.fillText(text, position.x, position.y);\n\t\t}\n\t}\n\n\tfunction adjustPointPositionForLabelHeight(angle, textSize, position) {\n\t\tif (angle === 90 || angle === 270) {\n\t\t\tposition.y -= (textSize.h / 2);\n\t\t} else if (angle > 270 || angle < 90) {\n\t\t\tposition.y -= textSize.h;\n\t\t}\n\t}\n\n\tfunction drawPointLabels(scale) {\n\t\tvar ctx = scale.ctx;\n\t\tvar opts = scale.options;\n\t\tvar angleLineOpts = opts.angleLines;\n\t\tvar pointLabelOpts = opts.pointLabels;\n\n\t\tctx.lineWidth = angleLineOpts.lineWidth;\n\t\tctx.strokeStyle = angleLineOpts.color;\n\n\t\tvar outerDistance = scale.getDistanceFromCenterForValue(opts.ticks.reverse ? scale.min : scale.max);\n\n\t\t// Point Label Font\n\t\tvar plFont = getPointLabelFontOptions(scale);\n\n\t\tctx.textBaseline = 'top';\n\n\t\tfor (var i = getValueCount(scale) - 1; i >= 0; i--) {\n\t\t\tif (angleLineOpts.display) {\n\t\t\t\tvar outerPosition = scale.getPointPosition(i, outerDistance);\n\t\t\t\tctx.beginPath();\n\t\t\t\tctx.moveTo(scale.xCenter, scale.yCenter);\n\t\t\t\tctx.lineTo(outerPosition.x, outerPosition.y);\n\t\t\t\tctx.stroke();\n\t\t\t\tctx.closePath();\n\t\t\t}\n\n\t\t\tif (pointLabelOpts.display) {\n\t\t\t\t// Extra 3px out for some label spacing\n\t\t\t\tvar pointLabelPosition = scale.getPointPosition(i, outerDistance + 5);\n\n\t\t\t\t// Keep this in loop since we may support array properties here\n\t\t\t\tvar pointLabelFontColor = helpers.valueAtIndexOrDefault(pointLabelOpts.fontColor, i, globalDefaults.defaultFontColor);\n\t\t\t\tctx.font = plFont.font;\n\t\t\t\tctx.fillStyle = pointLabelFontColor;\n\n\t\t\t\tvar angleRadians = scale.getIndexAngle(i);\n\t\t\t\tvar angle = helpers.toDegrees(angleRadians);\n\t\t\t\tctx.textAlign = getTextAlignForAngle(angle);\n\t\t\t\tadjustPointPositionForLabelHeight(angle, scale._pointLabelSizes[i], pointLabelPosition);\n\t\t\t\tfillText(ctx, scale.pointLabels[i] || '', pointLabelPosition, plFont.size);\n\t\t\t}\n\t\t}\n\t}\n\n\tfunction drawRadiusLine(scale, gridLineOpts, radius, index) {\n\t\tvar ctx = scale.ctx;\n\t\tctx.strokeStyle = helpers.valueAtIndexOrDefault(gridLineOpts.color, index - 1);\n\t\tctx.lineWidth = helpers.valueAtIndexOrDefault(gridLineOpts.lineWidth, index - 1);\n\n\t\tif (scale.options.gridLines.circular) {\n\t\t\t// Draw circular arcs between the points\n\t\t\tctx.beginPath();\n\t\t\tctx.arc(scale.xCenter, scale.yCenter, radius, 0, Math.PI * 2);\n\t\t\tctx.closePath();\n\t\t\tctx.stroke();\n\t\t} else {\n\t\t\t// Draw straight lines connecting each index\n\t\t\tvar valueCount = getValueCount(scale);\n\n\t\t\tif (valueCount === 0) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tctx.beginPath();\n\t\t\tvar pointPosition = scale.getPointPosition(0, radius);\n\t\t\tctx.moveTo(pointPosition.x, pointPosition.y);\n\n\t\t\tfor (var i = 1; i < valueCount; i++) {\n\t\t\t\tpointPosition = scale.getPointPosition(i, radius);\n\t\t\t\tctx.lineTo(pointPosition.x, pointPosition.y);\n\t\t\t}\n\n\t\t\tctx.closePath();\n\t\t\tctx.stroke();\n\t\t}\n\t}\n\n\tfunction numberOrZero(param) {\n\t\treturn helpers.isNumber(param) ? param : 0;\n\t}\n\n\tvar LinearRadialScale = Chart.LinearScaleBase.extend({\n\t\tsetDimensions: function() {\n\t\t\tvar me = this;\n\t\t\tvar opts = me.options;\n\t\t\tvar tickOpts = opts.ticks;\n\t\t\t// Set the unconstrained dimension before label rotation\n\t\t\tme.width = me.maxWidth;\n\t\t\tme.height = me.maxHeight;\n\t\t\tme.xCenter = Math.round(me.width / 2);\n\t\t\tme.yCenter = Math.round(me.height / 2);\n\n\t\t\tvar minSize = helpers.min([me.height, me.width]);\n\t\t\tvar tickFontSize = helpers.valueOrDefault(tickOpts.fontSize, globalDefaults.defaultFontSize);\n\t\t\tme.drawingArea = opts.display ? (minSize / 2) - (tickFontSize / 2 + tickOpts.backdropPaddingY) : (minSize / 2);\n\t\t},\n\t\tdetermineDataLimits: function() {\n\t\t\tvar me = this;\n\t\t\tvar chart = me.chart;\n\t\t\tvar min = Number.POSITIVE_INFINITY;\n\t\t\tvar max = Number.NEGATIVE_INFINITY;\n\n\t\t\thelpers.each(chart.data.datasets, function(dataset, datasetIndex) {\n\t\t\t\tif (chart.isDatasetVisible(datasetIndex)) {\n\t\t\t\t\tvar meta = chart.getDatasetMeta(datasetIndex);\n\n\t\t\t\t\thelpers.each(dataset.data, function(rawValue, index) {\n\t\t\t\t\t\tvar value = +me.getRightValue(rawValue);\n\t\t\t\t\t\tif (isNaN(value) || meta.data[index].hidden) {\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tmin = Math.min(value, min);\n\t\t\t\t\t\tmax = Math.max(value, max);\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tme.min = (min === Number.POSITIVE_INFINITY ? 0 : min);\n\t\t\tme.max = (max === Number.NEGATIVE_INFINITY ? 0 : max);\n\n\t\t\t// Common base implementation to handle ticks.min, ticks.max, ticks.beginAtZero\n\t\t\tme.handleTickRangeOptions();\n\t\t},\n\t\tgetTickLimit: function() {\n\t\t\tvar tickOpts = this.options.ticks;\n\t\t\tvar tickFontSize = helpers.valueOrDefault(tickOpts.fontSize, globalDefaults.defaultFontSize);\n\t\t\treturn Math.min(tickOpts.maxTicksLimit ? tickOpts.maxTicksLimit : 11, Math.ceil(this.drawingArea / (1.5 * tickFontSize)));\n\t\t},\n\t\tconvertTicksToLabels: function() {\n\t\t\tvar me = this;\n\n\t\t\tChart.LinearScaleBase.prototype.convertTicksToLabels.call(me);\n\n\t\t\t// Point labels\n\t\t\tme.pointLabels = me.chart.data.labels.map(me.options.pointLabels.callback, me);\n\t\t},\n\t\tgetLabelForIndex: function(index, datasetIndex) {\n\t\t\treturn +this.getRightValue(this.chart.data.datasets[datasetIndex].data[index]);\n\t\t},\n\t\tfit: function() {\n\t\t\tif (this.options.pointLabels.display) {\n\t\t\t\tfitWithPointLabels(this);\n\t\t\t} else {\n\t\t\t\tfit(this);\n\t\t\t}\n\t\t},\n\t\t/**\n\t\t * Set radius reductions and determine new radius and center point\n\t\t * @private\n\t\t */\n\t\tsetReductions: function(largestPossibleRadius, furthestLimits, furthestAngles) {\n\t\t\tvar me = this;\n\t\t\tvar radiusReductionLeft = furthestLimits.l / Math.sin(furthestAngles.l);\n\t\t\tvar radiusReductionRight = Math.max(furthestLimits.r - me.width, 0) / Math.sin(furthestAngles.r);\n\t\t\tvar radiusReductionTop = -furthestLimits.t / Math.cos(furthestAngles.t);\n\t\t\tvar radiusReductionBottom = -Math.max(furthestLimits.b - me.height, 0) / Math.cos(furthestAngles.b);\n\n\t\t\tradiusReductionLeft = numberOrZero(radiusReductionLeft);\n\t\t\tradiusReductionRight = numberOrZero(radiusReductionRight);\n\t\t\tradiusReductionTop = numberOrZero(radiusReductionTop);\n\t\t\tradiusReductionBottom = numberOrZero(radiusReductionBottom);\n\n\t\t\tme.drawingArea = Math.min(\n\t\t\t\tMath.round(largestPossibleRadius - (radiusReductionLeft + radiusReductionRight) / 2),\n\t\t\t\tMath.round(largestPossibleRadius - (radiusReductionTop + radiusReductionBottom) / 2));\n\t\t\tme.setCenterPoint(radiusReductionLeft, radiusReductionRight, radiusReductionTop, radiusReductionBottom);\n\t\t},\n\t\tsetCenterPoint: function(leftMovement, rightMovement, topMovement, bottomMovement) {\n\t\t\tvar me = this;\n\t\t\tvar maxRight = me.width - rightMovement - me.drawingArea;\n\t\t\tvar maxLeft = leftMovement + me.drawingArea;\n\t\t\tvar maxTop = topMovement + me.drawingArea;\n\t\t\tvar maxBottom = me.height - bottomMovement - me.drawingArea;\n\n\t\t\tme.xCenter = Math.round(((maxLeft + maxRight) / 2) + me.left);\n\t\t\tme.yCenter = Math.round(((maxTop + maxBottom) / 2) + me.top);\n\t\t},\n\n\t\tgetIndexAngle: function(index) {\n\t\t\tvar angleMultiplier = (Math.PI * 2) / getValueCount(this);\n\t\t\tvar startAngle = this.chart.options && this.chart.options.startAngle ?\n\t\t\t\tthis.chart.options.startAngle :\n\t\t\t\t0;\n\n\t\t\tvar startAngleRadians = startAngle * Math.PI * 2 / 360;\n\n\t\t\t// Start from the top instead of right, so remove a quarter of the circle\n\t\t\treturn index * angleMultiplier + startAngleRadians;\n\t\t},\n\t\tgetDistanceFromCenterForValue: function(value) {\n\t\t\tvar me = this;\n\n\t\t\tif (value === null) {\n\t\t\t\treturn 0; // null always in center\n\t\t\t}\n\n\t\t\t// Take into account half font size + the yPadding of the top value\n\t\t\tvar scalingFactor = me.drawingArea / (me.max - me.min);\n\t\t\tif (me.options.ticks.reverse) {\n\t\t\t\treturn (me.max - value) * scalingFactor;\n\t\t\t}\n\t\t\treturn (value - me.min) * scalingFactor;\n\t\t},\n\t\tgetPointPosition: function(index, distanceFromCenter) {\n\t\t\tvar me = this;\n\t\t\tvar thisAngle = me.getIndexAngle(index) - (Math.PI / 2);\n\t\t\treturn {\n\t\t\t\tx: Math.round(Math.cos(thisAngle) * distanceFromCenter) + me.xCenter,\n\t\t\t\ty: Math.round(Math.sin(thisAngle) * distanceFromCenter) + me.yCenter\n\t\t\t};\n\t\t},\n\t\tgetPointPositionForValue: function(index, value) {\n\t\t\treturn this.getPointPosition(index, this.getDistanceFromCenterForValue(value));\n\t\t},\n\n\t\tgetBasePosition: function() {\n\t\t\tvar me = this;\n\t\t\tvar min = me.min;\n\t\t\tvar max = me.max;\n\n\t\t\treturn me.getPointPositionForValue(0,\n\t\t\t\tme.beginAtZero ? 0 :\n\t\t\t\tmin < 0 && max < 0 ? max :\n\t\t\t\tmin > 0 && max > 0 ? min :\n\t\t\t\t0);\n\t\t},\n\n\t\tdraw: function() {\n\t\t\tvar me = this;\n\t\t\tvar opts = me.options;\n\t\t\tvar gridLineOpts = opts.gridLines;\n\t\t\tvar tickOpts = opts.ticks;\n\t\t\tvar valueOrDefault = helpers.valueOrDefault;\n\n\t\t\tif (opts.display) {\n\t\t\t\tvar ctx = me.ctx;\n\t\t\t\tvar startAngle = this.getIndexAngle(0);\n\n\t\t\t\t// Tick Font\n\t\t\t\tvar tickFontSize = valueOrDefault(tickOpts.fontSize, globalDefaults.defaultFontSize);\n\t\t\t\tvar tickFontStyle = valueOrDefault(tickOpts.fontStyle, globalDefaults.defaultFontStyle);\n\t\t\t\tvar tickFontFamily = valueOrDefault(tickOpts.fontFamily, globalDefaults.defaultFontFamily);\n\t\t\t\tvar tickLabelFont = helpers.fontString(tickFontSize, tickFontStyle, tickFontFamily);\n\n\t\t\t\thelpers.each(me.ticks, function(label, index) {\n\t\t\t\t\t// Don't draw a centre value (if it is minimum)\n\t\t\t\t\tif (index > 0 || tickOpts.reverse) {\n\t\t\t\t\t\tvar yCenterOffset = me.getDistanceFromCenterForValue(me.ticksAsNumbers[index]);\n\n\t\t\t\t\t\t// Draw circular lines around the scale\n\t\t\t\t\t\tif (gridLineOpts.display && index !== 0) {\n\t\t\t\t\t\t\tdrawRadiusLine(me, gridLineOpts, yCenterOffset, index);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (tickOpts.display) {\n\t\t\t\t\t\t\tvar tickFontColor = valueOrDefault(tickOpts.fontColor, globalDefaults.defaultFontColor);\n\t\t\t\t\t\t\tctx.font = tickLabelFont;\n\n\t\t\t\t\t\t\tctx.save();\n\t\t\t\t\t\t\tctx.translate(me.xCenter, me.yCenter);\n\t\t\t\t\t\t\tctx.rotate(startAngle);\n\n\t\t\t\t\t\t\tif (tickOpts.showLabelBackdrop) {\n\t\t\t\t\t\t\t\tvar labelWidth = ctx.measureText(label).width;\n\t\t\t\t\t\t\t\tctx.fillStyle = tickOpts.backdropColor;\n\t\t\t\t\t\t\t\tctx.fillRect(\n\t\t\t\t\t\t\t\t\t-labelWidth / 2 - tickOpts.backdropPaddingX,\n\t\t\t\t\t\t\t\t\t-yCenterOffset - tickFontSize / 2 - tickOpts.backdropPaddingY,\n\t\t\t\t\t\t\t\t\tlabelWidth + tickOpts.backdropPaddingX * 2,\n\t\t\t\t\t\t\t\t\ttickFontSize + tickOpts.backdropPaddingY * 2\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tctx.textAlign = 'center';\n\t\t\t\t\t\t\tctx.textBaseline = 'middle';\n\t\t\t\t\t\t\tctx.fillStyle = tickFontColor;\n\t\t\t\t\t\t\tctx.fillText(label, 0, -yCenterOffset);\n\t\t\t\t\t\t\tctx.restore();\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\t\tif (opts.angleLines.display || opts.pointLabels.display) {\n\t\t\t\t\tdrawPointLabels(me);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t});\n\n\tscaleService.registerScaleType('radialLinear', LinearRadialScale, defaultConfig);\n};\n","'use strict';\n\nvar helpers = require('../helpers/index');\n\n/**\n * Namespace to hold static tick generation functions\n * @namespace Chart.Ticks\n */\nmodule.exports = {\n\t/**\n\t * Namespace to hold formatters for different types of ticks\n\t * @namespace Chart.Ticks.formatters\n\t */\n\tformatters: {\n\t\t/**\n\t\t * Formatter for value labels\n\t\t * @method Chart.Ticks.formatters.values\n\t\t * @param value the value to display\n\t\t * @return {String|Array} the label to display\n\t\t */\n\t\tvalues: function(value) {\n\t\t\treturn helpers.isArray(value) ? value : '' + value;\n\t\t},\n\n\t\t/**\n\t\t * Formatter for linear numeric ticks\n\t\t * @method Chart.Ticks.formatters.linear\n\t\t * @param tickValue {Number} the value to be formatted\n\t\t * @param index {Number} the position of the tickValue parameter in the ticks array\n\t\t * @param ticks {Array<Number>} the list of ticks being converted\n\t\t * @return {String} string representation of the tickValue parameter\n\t\t */\n\t\tlinear: function(tickValue, index, ticks) {\n\t\t\t// If we have lots of ticks, don't use the ones\n\t\t\tvar delta = ticks.length > 3 ? ticks[2] - ticks[1] : ticks[1] - ticks[0];\n\n\t\t\t// If we have a number like 2.5 as the delta, figure out how many decimal places we need\n\t\t\tif (Math.abs(delta) > 1) {\n\t\t\t\tif (tickValue !== Math.floor(tickValue)) {\n\t\t\t\t\t// not an integer\n\t\t\t\t\tdelta = tickValue - Math.floor(tickValue);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tvar logDelta = helpers.log10(Math.abs(delta));\n\t\t\tvar tickString = '';\n\n\t\t\tif (tickValue !== 0) {\n\t\t\t\tvar maxTick = Math.max(Math.abs(ticks[0]), Math.abs(ticks[ticks.length - 1]));\n\t\t\t\tif (maxTick < 1e-4) { // all ticks are small numbers; use scientific notation\n\t\t\t\t\tvar logTick = helpers.log10(Math.abs(tickValue));\n\t\t\t\t\ttickString = tickValue.toExponential(Math.floor(logTick) - Math.floor(logDelta));\n\t\t\t\t} else {\n\t\t\t\t\tvar numDecimal = -1 * Math.floor(logDelta);\n\t\t\t\t\tnumDecimal = Math.max(Math.min(numDecimal, 20), 0); // toFixed has a max of 20 decimal places\n\t\t\t\t\ttickString = tickValue.toFixed(numDecimal);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\ttickString = '0'; // never show decimal places for 0\n\t\t\t}\n\n\t\t\treturn tickString;\n\t\t},\n\n\t\tlogarithmic: function(tickValue, index, ticks) {\n\t\t\tvar remain = tickValue / (Math.pow(10, Math.floor(helpers.log10(tickValue))));\n\n\t\t\tif (tickValue === 0) {\n\t\t\t\treturn '0';\n\t\t\t} else if (remain === 1 || remain === 2 || remain === 5 || index === 0 || index === ticks.length - 1) {\n\t\t\t\treturn tickValue.toExponential();\n\t\t\t}\n\t\t\treturn '';\n\t\t}\n\t}\n};\n","'use strict';\n\nmodule.exports = function(Chart) {\n\n\tChart.Doughnut = function(context, config) {\n\t\tconfig.type = 'doughnut';\n\n\t\treturn new Chart(context, config);\n\t};\n\n};\n","'use strict';\n\nvar defaults = require('./core.defaults');\nvar Element = require('./core.element');\nvar helpers = require('../helpers/index');\n\ndefaults._set('global', {\n\ttooltips: {\n\t\tenabled: true,\n\t\tcustom: null,\n\t\tmode: 'nearest',\n\t\tposition: 'average',\n\t\tintersect: true,\n\t\tbackgroundColor: 'rgba(0,0,0,0.8)',\n\t\ttitleFontStyle: 'bold',\n\t\ttitleSpacing: 2,\n\t\ttitleMarginBottom: 6,\n\t\ttitleFontColor: '#fff',\n\t\ttitleAlign: 'left',\n\t\tbodySpacing: 2,\n\t\tbodyFontColor: '#fff',\n\t\tbodyAlign: 'left',\n\t\tfooterFontStyle: 'bold',\n\t\tfooterSpacing: 2,\n\t\tfooterMarginTop: 6,\n\t\tfooterFontColor: '#fff',\n\t\tfooterAlign: 'left',\n\t\tyPadding: 6,\n\t\txPadding: 6,\n\t\tcaretPadding: 2,\n\t\tcaretSize: 5,\n\t\tcornerRadius: 6,\n\t\tmultiKeyBackground: '#fff',\n\t\tdisplayColors: true,\n\t\tborderColor: 'rgba(0,0,0,0)',\n\t\tborderWidth: 0,\n\t\tcallbacks: {\n\t\t\t// Args are: (tooltipItems, data)\n\t\t\tbeforeTitle: helpers.noop,\n\t\t\ttitle: function(tooltipItems, data) {\n\t\t\t\t// Pick first xLabel for now\n\t\t\t\tvar title = '';\n\t\t\t\tvar labels = data.labels;\n\t\t\t\tvar labelCount = labels ? labels.length : 0;\n\n\t\t\t\tif (tooltipItems.length > 0) {\n\t\t\t\t\tvar item = tooltipItems[0];\n\n\t\t\t\t\tif (item.xLabel) {\n\t\t\t\t\t\ttitle = item.xLabel;\n\t\t\t\t\t} else if (labelCount > 0 && item.index < labelCount) {\n\t\t\t\t\t\ttitle = labels[item.index];\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\treturn title;\n\t\t\t},\n\t\t\tafterTitle: helpers.noop,\n\n\t\t\t// Args are: (tooltipItems, data)\n\t\t\tbeforeBody: helpers.noop,\n\n\t\t\t// Args are: (tooltipItem, data)\n\t\t\tbeforeLabel: helpers.noop,\n\t\t\tlabel: function(tooltipItem, data) {\n\t\t\t\tvar label = data.datasets[tooltipItem.datasetIndex].label || '';\n\n\t\t\t\tif (label) {\n\t\t\t\t\tlabel += ': ';\n\t\t\t\t}\n\t\t\t\tlabel += tooltipItem.yLabel;\n\t\t\t\treturn label;\n\t\t\t},\n\t\t\tlabelColor: function(tooltipItem, chart) {\n\t\t\t\tvar meta = chart.getDatasetMeta(tooltipItem.datasetIndex);\n\t\t\t\tvar activeElement = meta.data[tooltipItem.index];\n\t\t\t\tvar view = activeElement._view;\n\t\t\t\treturn {\n\t\t\t\t\tborderColor: view.borderColor,\n\t\t\t\t\tbackgroundColor: view.backgroundColor\n\t\t\t\t};\n\t\t\t},\n\t\t\tlabelTextColor: function() {\n\t\t\t\treturn this._options.bodyFontColor;\n\t\t\t},\n\t\t\tafterLabel: helpers.noop,\n\n\t\t\t// Args are: (tooltipItems, data)\n\t\t\tafterBody: helpers.noop,\n\n\t\t\t// Args are: (tooltipItems, data)\n\t\t\tbeforeFooter: helpers.noop,\n\t\t\tfooter: helpers.noop,\n\t\t\tafterFooter: helpers.noop\n\t\t}\n\t}\n});\n\nvar positioners = {\n\t/**\n\t * Average mode places the tooltip at the average position of the elements shown\n\t * @function Chart.Tooltip.positioners.average\n\t * @param elements {ChartElement[]} the elements being displayed in the tooltip\n\t * @returns {Point} tooltip position\n\t */\n\taverage: function(elements) {\n\t\tif (!elements.length) {\n\t\t\treturn false;\n\t\t}\n\n\t\tvar i, len;\n\t\tvar x = 0;\n\t\tvar y = 0;\n\t\tvar count = 0;\n\n\t\tfor (i = 0, len = elements.length; i < len; ++i) {\n\t\t\tvar el = elements[i];\n\t\t\tif (el && el.hasValue()) {\n\t\t\t\tvar pos = el.tooltipPosition();\n\t\t\t\tx += pos.x;\n\t\t\t\ty += pos.y;\n\t\t\t\t++count;\n\t\t\t}\n\t\t}\n\n\t\treturn {\n\t\t\tx: Math.round(x / count),\n\t\t\ty: Math.round(y / count)\n\t\t};\n\t},\n\n\t/**\n\t * Gets the tooltip position nearest of the item nearest to the event position\n\t * @function Chart.Tooltip.positioners.nearest\n\t * @param elements {Chart.Element[]} the tooltip elements\n\t * @param eventPosition {Point} the position of the event in canvas coordinates\n\t * @returns {Point} the tooltip position\n\t */\n\tnearest: function(elements, eventPosition) {\n\t\tvar x = eventPosition.x;\n\t\tvar y = eventPosition.y;\n\t\tvar minDistance = Number.POSITIVE_INFINITY;\n\t\tvar i, len, nearestElement;\n\n\t\tfor (i = 0, len = elements.length; i < len; ++i) {\n\t\t\tvar el = elements[i];\n\t\t\tif (el && el.hasValue()) {\n\t\t\t\tvar center = el.getCenterPoint();\n\t\t\t\tvar d = helpers.distanceBetweenPoints(eventPosition, center);\n\n\t\t\t\tif (d < minDistance) {\n\t\t\t\t\tminDistance = d;\n\t\t\t\t\tnearestElement = el;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (nearestElement) {\n\t\t\tvar tp = nearestElement.tooltipPosition();\n\t\t\tx = tp.x;\n\t\t\ty = tp.y;\n\t\t}\n\n\t\treturn {\n\t\t\tx: x,\n\t\t\ty: y\n\t\t};\n\t}\n};\n\n/**\n * Helper method to merge the opacity into a color\n */\nfunction mergeOpacity(colorString, opacity) {\n\tvar color = helpers.color(colorString);\n\treturn color.alpha(opacity * color.alpha()).rgbaString();\n}\n\n// Helper to push or concat based on if the 2nd parameter is an array or not\nfunction pushOrConcat(base, toPush) {\n\tif (toPush) {\n\t\tif (helpers.isArray(toPush)) {\n\t\t\t// base = base.concat(toPush);\n\t\t\tArray.prototype.push.apply(base, toPush);\n\t\t} else {\n\t\t\tbase.push(toPush);\n\t\t}\n\t}\n\n\treturn base;\n}\n\n/**\n * Returns array of strings split by newline\n * @param {String} value - The value to split by newline.\n * @returns {Array} value if newline present - Returned from String split() method\n * @function\n */\nfunction splitNewlines(str) {\n\tif ((typeof str === 'string' || str instanceof String) && str.indexOf('\\n') > -1) {\n\t\treturn str.split('\\n');\n\t}\n\treturn str;\n}\n\n\n// Private helper to create a tooltip item model\n// @param element : the chart element (point, arc, bar) to create the tooltip item for\n// @return : new tooltip item\nfunction createTooltipItem(element) {\n\tvar xScale = element._xScale;\n\tvar yScale = element._yScale || element._scale; // handle radar || polarArea charts\n\tvar index = element._index;\n\tvar datasetIndex = element._datasetIndex;\n\n\treturn {\n\t\txLabel: xScale ? xScale.getLabelForIndex(index, datasetIndex) : '',\n\t\tyLabel: yScale ? yScale.getLabelForIndex(index, datasetIndex) : '',\n\t\tindex: index,\n\t\tdatasetIndex: datasetIndex,\n\t\tx: element._model.x,\n\t\ty: element._model.y\n\t};\n}\n\n/**\n * Helper to get the reset model for the tooltip\n * @param tooltipOpts {Object} the tooltip options\n */\nfunction getBaseModel(tooltipOpts) {\n\tvar globalDefaults = defaults.global;\n\tvar valueOrDefault = helpers.valueOrDefault;\n\n\treturn {\n\t\t// Positioning\n\t\txPadding: tooltipOpts.xPadding,\n\t\tyPadding: tooltipOpts.yPadding,\n\t\txAlign: tooltipOpts.xAlign,\n\t\tyAlign: tooltipOpts.yAlign,\n\n\t\t// Body\n\t\tbodyFontColor: tooltipOpts.bodyFontColor,\n\t\t_bodyFontFamily: valueOrDefault(tooltipOpts.bodyFontFamily, globalDefaults.defaultFontFamily),\n\t\t_bodyFontStyle: valueOrDefault(tooltipOpts.bodyFontStyle, globalDefaults.defaultFontStyle),\n\t\t_bodyAlign: tooltipOpts.bodyAlign,\n\t\tbodyFontSize: valueOrDefault(tooltipOpts.bodyFontSize, globalDefaults.defaultFontSize),\n\t\tbodySpacing: tooltipOpts.bodySpacing,\n\n\t\t// Title\n\t\ttitleFontColor: tooltipOpts.titleFontColor,\n\t\t_titleFontFamily: valueOrDefault(tooltipOpts.titleFontFamily, globalDefaults.defaultFontFamily),\n\t\t_titleFontStyle: valueOrDefault(tooltipOpts.titleFontStyle, globalDefaults.defaultFontStyle),\n\t\ttitleFontSize: valueOrDefault(tooltipOpts.titleFontSize, globalDefaults.defaultFontSize),\n\t\t_titleAlign: tooltipOpts.titleAlign,\n\t\ttitleSpacing: tooltipOpts.titleSpacing,\n\t\ttitleMarginBottom: tooltipOpts.titleMarginBottom,\n\n\t\t// Footer\n\t\tfooterFontColor: tooltipOpts.footerFontColor,\n\t\t_footerFontFamily: valueOrDefault(tooltipOpts.footerFontFamily, globalDefaults.defaultFontFamily),\n\t\t_footerFontStyle: valueOrDefault(tooltipOpts.footerFontStyle, globalDefaults.defaultFontStyle),\n\t\tfooterFontSize: valueOrDefault(tooltipOpts.footerFontSize, globalDefaults.defaultFontSize),\n\t\t_footerAlign: tooltipOpts.footerAlign,\n\t\tfooterSpacing: tooltipOpts.footerSpacing,\n\t\tfooterMarginTop: tooltipOpts.footerMarginTop,\n\n\t\t// Appearance\n\t\tcaretSize: tooltipOpts.caretSize,\n\t\tcornerRadius: tooltipOpts.cornerRadius,\n\t\tbackgroundColor: tooltipOpts.backgroundColor,\n\t\topacity: 0,\n\t\tlegendColorBackground: tooltipOpts.multiKeyBackground,\n\t\tdisplayColors: tooltipOpts.displayColors,\n\t\tborderColor: tooltipOpts.borderColor,\n\t\tborderWidth: tooltipOpts.borderWidth\n\t};\n}\n\n/**\n * Get the size of the tooltip\n */\nfunction getTooltipSize(tooltip, model) {\n\tvar ctx = tooltip._chart.ctx;\n\n\tvar height = model.yPadding * 2; // Tooltip Padding\n\tvar width = 0;\n\n\t// Count of all lines in the body\n\tvar body = model.body;\n\tvar combinedBodyLength = body.reduce(function(count, bodyItem) {\n\t\treturn count + bodyItem.before.length + bodyItem.lines.length + bodyItem.after.length;\n\t}, 0);\n\tcombinedBodyLength += model.beforeBody.length + model.afterBody.length;\n\n\tvar titleLineCount = model.title.length;\n\tvar footerLineCount = model.footer.length;\n\tvar titleFontSize = model.titleFontSize;\n\tvar bodyFontSize = model.bodyFontSize;\n\tvar footerFontSize = model.footerFontSize;\n\n\theight += titleLineCount * titleFontSize; // Title Lines\n\theight += titleLineCount ? (titleLineCount - 1) * model.titleSpacing : 0; // Title Line Spacing\n\theight += titleLineCount ? model.titleMarginBottom : 0; // Title's bottom Margin\n\theight += combinedBodyLength * bodyFontSize; // Body Lines\n\theight += combinedBodyLength ? (combinedBodyLength - 1) * model.bodySpacing : 0; // Body Line Spacing\n\theight += footerLineCount ? model.footerMarginTop : 0; // Footer Margin\n\theight += footerLineCount * (footerFontSize); // Footer Lines\n\theight += footerLineCount ? (footerLineCount - 1) * model.footerSpacing : 0; // Footer Line Spacing\n\n\t// Title width\n\tvar widthPadding = 0;\n\tvar maxLineWidth = function(line) {\n\t\twidth = Math.max(width, ctx.measureText(line).width + widthPadding);\n\t};\n\n\tctx.font = helpers.fontString(titleFontSize, model._titleFontStyle, model._titleFontFamily);\n\thelpers.each(model.title, maxLineWidth);\n\n\t// Body width\n\tctx.font = helpers.fontString(bodyFontSize, model._bodyFontStyle, model._bodyFontFamily);\n\thelpers.each(model.beforeBody.concat(model.afterBody), maxLineWidth);\n\n\t// Body lines may include some extra width due to the color box\n\twidthPadding = model.displayColors ? (bodyFontSize + 2) : 0;\n\thelpers.each(body, function(bodyItem) {\n\t\thelpers.each(bodyItem.before, maxLineWidth);\n\t\thelpers.each(bodyItem.lines, maxLineWidth);\n\t\thelpers.each(bodyItem.after, maxLineWidth);\n\t});\n\n\t// Reset back to 0\n\twidthPadding = 0;\n\n\t// Footer width\n\tctx.font = helpers.fontString(footerFontSize, model._footerFontStyle, model._footerFontFamily);\n\thelpers.each(model.footer, maxLineWidth);\n\n\t// Add padding\n\twidth += 2 * model.xPadding;\n\n\treturn {\n\t\twidth: width,\n\t\theight: height\n\t};\n}\n\n/**\n * Helper to get the alignment of a tooltip given the size\n */\nfunction determineAlignment(tooltip, size) {\n\tvar model = tooltip._model;\n\tvar chart = tooltip._chart;\n\tvar chartArea = tooltip._chart.chartArea;\n\tvar xAlign = 'center';\n\tvar yAlign = 'center';\n\n\tif (model.y < size.height) {\n\t\tyAlign = 'top';\n\t} else if (model.y > (chart.height - size.height)) {\n\t\tyAlign = 'bottom';\n\t}\n\n\tvar lf, rf; // functions to determine left, right alignment\n\tvar olf, orf; // functions to determine if left/right alignment causes tooltip to go outside chart\n\tvar yf; // function to get the y alignment if the tooltip goes outside of the left or right edges\n\tvar midX = (chartArea.left + chartArea.right) / 2;\n\tvar midY = (chartArea.top + chartArea.bottom) / 2;\n\n\tif (yAlign === 'center') {\n\t\tlf = function(x) {\n\t\t\treturn x <= midX;\n\t\t};\n\t\trf = function(x) {\n\t\t\treturn x > midX;\n\t\t};\n\t} else {\n\t\tlf = function(x) {\n\t\t\treturn x <= (size.width / 2);\n\t\t};\n\t\trf = function(x) {\n\t\t\treturn x >= (chart.width - (size.width / 2));\n\t\t};\n\t}\n\n\tolf = function(x) {\n\t\treturn x + size.width + model.caretSize + model.caretPadding > chart.width;\n\t};\n\torf = function(x) {\n\t\treturn x - size.width - model.caretSize - model.caretPadding < 0;\n\t};\n\tyf = function(y) {\n\t\treturn y <= midY ? 'top' : 'bottom';\n\t};\n\n\tif (lf(model.x)) {\n\t\txAlign = 'left';\n\n\t\t// Is tooltip too wide and goes over the right side of the chart.?\n\t\tif (olf(model.x)) {\n\t\t\txAlign = 'center';\n\t\t\tyAlign = yf(model.y);\n\t\t}\n\t} else if (rf(model.x)) {\n\t\txAlign = 'right';\n\n\t\t// Is tooltip too wide and goes outside left edge of canvas?\n\t\tif (orf(model.x)) {\n\t\t\txAlign = 'center';\n\t\t\tyAlign = yf(model.y);\n\t\t}\n\t}\n\n\tvar opts = tooltip._options;\n\treturn {\n\t\txAlign: opts.xAlign ? opts.xAlign : xAlign,\n\t\tyAlign: opts.yAlign ? opts.yAlign : yAlign\n\t};\n}\n\n/**\n * Helper to get the location a tooltip needs to be placed at given the initial position (via the vm) and the size and alignment\n */\nfunction getBackgroundPoint(vm, size, alignment, chart) {\n\t// Background Position\n\tvar x = vm.x;\n\tvar y = vm.y;\n\n\tvar caretSize = vm.caretSize;\n\tvar caretPadding = vm.caretPadding;\n\tvar cornerRadius = vm.cornerRadius;\n\tvar xAlign = alignment.xAlign;\n\tvar yAlign = alignment.yAlign;\n\tvar paddingAndSize = caretSize + caretPadding;\n\tvar radiusAndPadding = cornerRadius + caretPadding;\n\n\tif (xAlign === 'right') {\n\t\tx -= size.width;\n\t} else if (xAlign === 'center') {\n\t\tx -= (size.width / 2);\n\t\tif (x + size.width > chart.width) {\n\t\t\tx = chart.width - size.width;\n\t\t}\n\t\tif (x < 0) {\n\t\t\tx = 0;\n\t\t}\n\t}\n\n\tif (yAlign === 'top') {\n\t\ty += paddingAndSize;\n\t} else if (yAlign === 'bottom') {\n\t\ty -= size.height + paddingAndSize;\n\t} else {\n\t\ty -= (size.height / 2);\n\t}\n\n\tif (yAlign === 'center') {\n\t\tif (xAlign === 'left') {\n\t\t\tx += paddingAndSize;\n\t\t} else if (xAlign === 'right') {\n\t\t\tx -= paddingAndSize;\n\t\t}\n\t} else if (xAlign === 'left') {\n\t\tx -= radiusAndPadding;\n\t} else if (xAlign === 'right') {\n\t\tx += radiusAndPadding;\n\t}\n\n\treturn {\n\t\tx: x,\n\t\ty: y\n\t};\n}\n\n/**\n * Helper to build before and after body lines\n */\nfunction getBeforeAfterBodyLines(callback) {\n\treturn pushOrConcat([], splitNewlines(callback));\n}\n\nvar exports = module.exports = Element.extend({\n\tinitialize: function() {\n\t\tthis._model = getBaseModel(this._options);\n\t\tthis._lastActive = [];\n\t},\n\n\t// Get the title\n\t// Args are: (tooltipItem, data)\n\tgetTitle: function() {\n\t\tvar me = this;\n\t\tvar opts = me._options;\n\t\tvar callbacks = opts.callbacks;\n\n\t\tvar beforeTitle = callbacks.beforeTitle.apply(me, arguments);\n\t\tvar title = callbacks.title.apply(me, arguments);\n\t\tvar afterTitle = callbacks.afterTitle.apply(me, arguments);\n\n\t\tvar lines = [];\n\t\tlines = pushOrConcat(lines, splitNewlines(beforeTitle));\n\t\tlines = pushOrConcat(lines, splitNewlines(title));\n\t\tlines = pushOrConcat(lines, splitNewlines(afterTitle));\n\n\t\treturn lines;\n\t},\n\n\t// Args are: (tooltipItem, data)\n\tgetBeforeBody: function() {\n\t\treturn getBeforeAfterBodyLines(this._options.callbacks.beforeBody.apply(this, arguments));\n\t},\n\n\t// Args are: (tooltipItem, data)\n\tgetBody: function(tooltipItems, data) {\n\t\tvar me = this;\n\t\tvar callbacks = me._options.callbacks;\n\t\tvar bodyItems = [];\n\n\t\thelpers.each(tooltipItems, function(tooltipItem) {\n\t\t\tvar bodyItem = {\n\t\t\t\tbefore: [],\n\t\t\t\tlines: [],\n\t\t\t\tafter: []\n\t\t\t};\n\t\t\tpushOrConcat(bodyItem.before, splitNewlines(callbacks.beforeLabel.call(me, tooltipItem, data)));\n\t\t\tpushOrConcat(bodyItem.lines, callbacks.label.call(me, tooltipItem, data));\n\t\t\tpushOrConcat(bodyItem.after, splitNewlines(callbacks.afterLabel.call(me, tooltipItem, data)));\n\n\t\t\tbodyItems.push(bodyItem);\n\t\t});\n\n\t\treturn bodyItems;\n\t},\n\n\t// Args are: (tooltipItem, data)\n\tgetAfterBody: function() {\n\t\treturn getBeforeAfterBodyLines(this._options.callbacks.afterBody.apply(this, arguments));\n\t},\n\n\t// Get the footer and beforeFooter and afterFooter lines\n\t// Args are: (tooltipItem, data)\n\tgetFooter: function() {\n\t\tvar me = this;\n\t\tvar callbacks = me._options.callbacks;\n\n\t\tvar beforeFooter = callbacks.beforeFooter.apply(me, arguments);\n\t\tvar footer = callbacks.footer.apply(me, arguments);\n\t\tvar afterFooter = callbacks.afterFooter.apply(me, arguments);\n\n\t\tvar lines = [];\n\t\tlines = pushOrConcat(lines, splitNewlines(beforeFooter));\n\t\tlines = pushOrConcat(lines, splitNewlines(footer));\n\t\tlines = pushOrConcat(lines, splitNewlines(afterFooter));\n\n\t\treturn lines;\n\t},\n\n\tupdate: function(changed) {\n\t\tvar me = this;\n\t\tvar opts = me._options;\n\n\t\t// Need to regenerate the model because its faster than using extend and it is necessary due to the optimization in Chart.Element.transition\n\t\t// that does _view = _model if ease === 1. This causes the 2nd tooltip update to set properties in both the view and model at the same time\n\t\t// which breaks any animations.\n\t\tvar existingModel = me._model;\n\t\tvar model = me._model = getBaseModel(opts);\n\t\tvar active = me._active;\n\n\t\tvar data = me._data;\n\n\t\t// In the case where active.length === 0 we need to keep these at existing values for good animations\n\t\tvar alignment = {\n\t\t\txAlign: existingModel.xAlign,\n\t\t\tyAlign: existingModel.yAlign\n\t\t};\n\t\tvar backgroundPoint = {\n\t\t\tx: existingModel.x,\n\t\t\ty: existingModel.y\n\t\t};\n\t\tvar tooltipSize = {\n\t\t\twidth: existingModel.width,\n\t\t\theight: existingModel.height\n\t\t};\n\t\tvar tooltipPosition = {\n\t\t\tx: existingModel.caretX,\n\t\t\ty: existingModel.caretY\n\t\t};\n\n\t\tvar i, len;\n\n\t\tif (active.length) {\n\t\t\tmodel.opacity = 1;\n\n\t\t\tvar labelColors = [];\n\t\t\tvar labelTextColors = [];\n\t\t\ttooltipPosition = positioners[opts.position].call(me, active, me._eventPosition);\n\n\t\t\tvar tooltipItems = [];\n\t\t\tfor (i = 0, len = active.length; i < len; ++i) {\n\t\t\t\ttooltipItems.push(createTooltipItem(active[i]));\n\t\t\t}\n\n\t\t\t// If the user provided a filter function, use it to modify the tooltip items\n\t\t\tif (opts.filter) {\n\t\t\t\ttooltipItems = tooltipItems.filter(function(a) {\n\t\t\t\t\treturn opts.filter(a, data);\n\t\t\t\t});\n\t\t\t}\n\n\t\t\t// If the user provided a sorting function, use it to modify the tooltip items\n\t\t\tif (opts.itemSort) {\n\t\t\t\ttooltipItems = tooltipItems.sort(function(a, b) {\n\t\t\t\t\treturn opts.itemSort(a, b, data);\n\t\t\t\t});\n\t\t\t}\n\n\t\t\t// Determine colors for boxes\n\t\t\thelpers.each(tooltipItems, function(tooltipItem) {\n\t\t\t\tlabelColors.push(opts.callbacks.labelColor.call(me, tooltipItem, me._chart));\n\t\t\t\tlabelTextColors.push(opts.callbacks.labelTextColor.call(me, tooltipItem, me._chart));\n\t\t\t});\n\n\n\t\t\t// Build the Text Lines\n\t\t\tmodel.title = me.getTitle(tooltipItems, data);\n\t\t\tmodel.beforeBody = me.getBeforeBody(tooltipItems, data);\n\t\t\tmodel.body = me.getBody(tooltipItems, data);\n\t\t\tmodel.afterBody = me.getAfterBody(tooltipItems, data);\n\t\t\tmodel.footer = me.getFooter(tooltipItems, data);\n\n\t\t\t// Initial positioning and colors\n\t\t\tmodel.x = Math.round(tooltipPosition.x);\n\t\t\tmodel.y = Math.round(tooltipPosition.y);\n\t\t\tmodel.caretPadding = opts.caretPadding;\n\t\t\tmodel.labelColors = labelColors;\n\t\t\tmodel.labelTextColors = labelTextColors;\n\n\t\t\t// data points\n\t\t\tmodel.dataPoints = tooltipItems;\n\n\t\t\t// We need to determine alignment of the tooltip\n\t\t\ttooltipSize = getTooltipSize(this, model);\n\t\t\talignment = determineAlignment(this, tooltipSize);\n\t\t\t// Final Size and Position\n\t\t\tbackgroundPoint = getBackgroundPoint(model, tooltipSize, alignment, me._chart);\n\t\t} else {\n\t\t\tmodel.opacity = 0;\n\t\t}\n\n\t\tmodel.xAlign = alignment.xAlign;\n\t\tmodel.yAlign = alignment.yAlign;\n\t\tmodel.x = backgroundPoint.x;\n\t\tmodel.y = backgroundPoint.y;\n\t\tmodel.width = tooltipSize.width;\n\t\tmodel.height = tooltipSize.height;\n\n\t\t// Point where the caret on the tooltip points to\n\t\tmodel.caretX = tooltipPosition.x;\n\t\tmodel.caretY = tooltipPosition.y;\n\n\t\tme._model = model;\n\n\t\tif (changed && opts.custom) {\n\t\t\topts.custom.call(me, model);\n\t\t}\n\n\t\treturn me;\n\t},\n\n\tdrawCaret: function(tooltipPoint, size) {\n\t\tvar ctx = this._chart.ctx;\n\t\tvar vm = this._view;\n\t\tvar caretPosition = this.getCaretPosition(tooltipPoint, size, vm);\n\n\t\tctx.lineTo(caretPosition.x1, caretPosition.y1);\n\t\tctx.lineTo(caretPosition.x2, caretPosition.y2);\n\t\tctx.lineTo(caretPosition.x3, caretPosition.y3);\n\t},\n\tgetCaretPosition: function(tooltipPoint, size, vm) {\n\t\tvar x1, x2, x3, y1, y2, y3;\n\t\tvar caretSize = vm.caretSize;\n\t\tvar cornerRadius = vm.cornerRadius;\n\t\tvar xAlign = vm.xAlign;\n\t\tvar yAlign = vm.yAlign;\n\t\tvar ptX = tooltipPoint.x;\n\t\tvar ptY = tooltipPoint.y;\n\t\tvar width = size.width;\n\t\tvar height = size.height;\n\n\t\tif (yAlign === 'center') {\n\t\t\ty2 = ptY + (height / 2);\n\n\t\t\tif (xAlign === 'left') {\n\t\t\t\tx1 = ptX;\n\t\t\t\tx2 = x1 - caretSize;\n\t\t\t\tx3 = x1;\n\n\t\t\t\ty1 = y2 + caretSize;\n\t\t\t\ty3 = y2 - caretSize;\n\t\t\t} else {\n\t\t\t\tx1 = ptX + width;\n\t\t\t\tx2 = x1 + caretSize;\n\t\t\t\tx3 = x1;\n\n\t\t\t\ty1 = y2 - caretSize;\n\t\t\t\ty3 = y2 + caretSize;\n\t\t\t}\n\t\t} else {\n\t\t\tif (xAlign === 'left') {\n\t\t\t\tx2 = ptX + cornerRadius + (caretSize);\n\t\t\t\tx1 = x2 - caretSize;\n\t\t\t\tx3 = x2 + caretSize;\n\t\t\t} else if (xAlign === 'right') {\n\t\t\t\tx2 = ptX + width - cornerRadius - caretSize;\n\t\t\t\tx1 = x2 - caretSize;\n\t\t\t\tx3 = x2 + caretSize;\n\t\t\t} else {\n\t\t\t\tx2 = vm.caretX;\n\t\t\t\tx1 = x2 - caretSize;\n\t\t\t\tx3 = x2 + caretSize;\n\t\t\t}\n\t\t\tif (yAlign === 'top') {\n\t\t\t\ty1 = ptY;\n\t\t\t\ty2 = y1 - caretSize;\n\t\t\t\ty3 = y1;\n\t\t\t} else {\n\t\t\t\ty1 = ptY + height;\n\t\t\t\ty2 = y1 + caretSize;\n\t\t\t\ty3 = y1;\n\t\t\t\t// invert drawing order\n\t\t\t\tvar tmp = x3;\n\t\t\t\tx3 = x1;\n\t\t\t\tx1 = tmp;\n\t\t\t}\n\t\t}\n\t\treturn {x1: x1, x2: x2, x3: x3, y1: y1, y2: y2, y3: y3};\n\t},\n\n\tdrawTitle: function(pt, vm, ctx, opacity) {\n\t\tvar title = vm.title;\n\n\t\tif (title.length) {\n\t\t\tctx.textAlign = vm._titleAlign;\n\t\t\tctx.textBaseline = 'top';\n\n\t\t\tvar titleFontSize = vm.titleFontSize;\n\t\t\tvar titleSpacing = vm.titleSpacing;\n\n\t\t\tctx.fillStyle = mergeOpacity(vm.titleFontColor, opacity);\n\t\t\tctx.font = helpers.fontString(titleFontSize, vm._titleFontStyle, vm._titleFontFamily);\n\n\t\t\tvar i, len;\n\t\t\tfor (i = 0, len = title.length; i < len; ++i) {\n\t\t\t\tctx.fillText(title[i], pt.x, pt.y);\n\t\t\t\tpt.y += titleFontSize + titleSpacing; // Line Height and spacing\n\n\t\t\t\tif (i + 1 === title.length) {\n\t\t\t\t\tpt.y += vm.titleMarginBottom - titleSpacing; // If Last, add margin, remove spacing\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t},\n\n\tdrawBody: function(pt, vm, ctx, opacity) {\n\t\tvar bodyFontSize = vm.bodyFontSize;\n\t\tvar bodySpacing = vm.bodySpacing;\n\t\tvar body = vm.body;\n\n\t\tctx.textAlign = vm._bodyAlign;\n\t\tctx.textBaseline = 'top';\n\t\tctx.font = helpers.fontString(bodyFontSize, vm._bodyFontStyle, vm._bodyFontFamily);\n\n\t\t// Before Body\n\t\tvar xLinePadding = 0;\n\t\tvar fillLineOfText = function(line) {\n\t\t\tctx.fillText(line, pt.x + xLinePadding, pt.y);\n\t\t\tpt.y += bodyFontSize + bodySpacing;\n\t\t};\n\n\t\t// Before body lines\n\t\tctx.fillStyle = mergeOpacity(vm.bodyFontColor, opacity);\n\t\thelpers.each(vm.beforeBody, fillLineOfText);\n\n\t\tvar drawColorBoxes = vm.displayColors;\n\t\txLinePadding = drawColorBoxes ? (bodyFontSize + 2) : 0;\n\n\t\t// Draw body lines now\n\t\thelpers.each(body, function(bodyItem, i) {\n\t\t\tvar textColor = mergeOpacity(vm.labelTextColors[i], opacity);\n\t\t\tctx.fillStyle = textColor;\n\t\t\thelpers.each(bodyItem.before, fillLineOfText);\n\n\t\t\thelpers.each(bodyItem.lines, function(line) {\n\t\t\t\t// Draw Legend-like boxes if needed\n\t\t\t\tif (drawColorBoxes) {\n\t\t\t\t\t// Fill a white rect so that colours merge nicely if the opacity is < 1\n\t\t\t\t\tctx.fillStyle = mergeOpacity(vm.legendColorBackground, opacity);\n\t\t\t\t\tctx.fillRect(pt.x, pt.y, bodyFontSize, bodyFontSize);\n\n\t\t\t\t\t// Border\n\t\t\t\t\tctx.lineWidth = 1;\n\t\t\t\t\tctx.strokeStyle = mergeOpacity(vm.labelColors[i].borderColor, opacity);\n\t\t\t\t\tctx.strokeRect(pt.x, pt.y, bodyFontSize, bodyFontSize);\n\n\t\t\t\t\t// Inner square\n\t\t\t\t\tctx.fillStyle = mergeOpacity(vm.labelColors[i].backgroundColor, opacity);\n\t\t\t\t\tctx.fillRect(pt.x + 1, pt.y + 1, bodyFontSize - 2, bodyFontSize - 2);\n\t\t\t\t\tctx.fillStyle = textColor;\n\t\t\t\t}\n\n\t\t\t\tfillLineOfText(line);\n\t\t\t});\n\n\t\t\thelpers.each(bodyItem.after, fillLineOfText);\n\t\t});\n\n\t\t// Reset back to 0 for after body\n\t\txLinePadding = 0;\n\n\t\t// After body lines\n\t\thelpers.each(vm.afterBody, fillLineOfText);\n\t\tpt.y -= bodySpacing; // Remove last body spacing\n\t},\n\n\tdrawFooter: function(pt, vm, ctx, opacity) {\n\t\tvar footer = vm.footer;\n\n\t\tif (footer.length) {\n\t\t\tpt.y += vm.footerMarginTop;\n\n\t\t\tctx.textAlign = vm._footerAlign;\n\t\t\tctx.textBaseline = 'top';\n\n\t\t\tctx.fillStyle = mergeOpacity(vm.footerFontColor, opacity);\n\t\t\tctx.font = helpers.fontString(vm.footerFontSize, vm._footerFontStyle, vm._footerFontFamily);\n\n\t\t\thelpers.each(footer, function(line) {\n\t\t\t\tctx.fillText(line, pt.x, pt.y);\n\t\t\t\tpt.y += vm.footerFontSize + vm.footerSpacing;\n\t\t\t});\n\t\t}\n\t},\n\n\tdrawBackground: function(pt, vm, ctx, tooltipSize, opacity) {\n\t\tctx.fillStyle = mergeOpacity(vm.backgroundColor, opacity);\n\t\tctx.strokeStyle = mergeOpacity(vm.borderColor, opacity);\n\t\tctx.lineWidth = vm.borderWidth;\n\t\tvar xAlign = vm.xAlign;\n\t\tvar yAlign = vm.yAlign;\n\t\tvar x = pt.x;\n\t\tvar y = pt.y;\n\t\tvar width = tooltipSize.width;\n\t\tvar height = tooltipSize.height;\n\t\tvar radius = vm.cornerRadius;\n\n\t\tctx.beginPath();\n\t\tctx.moveTo(x + radius, y);\n\t\tif (yAlign === 'top') {\n\t\t\tthis.drawCaret(pt, tooltipSize);\n\t\t}\n\t\tctx.lineTo(x + width - radius, y);\n\t\tctx.quadraticCurveTo(x + width, y, x + width, y + radius);\n\t\tif (yAlign === 'center' && xAlign === 'right') {\n\t\t\tthis.drawCaret(pt, tooltipSize);\n\t\t}\n\t\tctx.lineTo(x + width, y + height - radius);\n\t\tctx.quadraticCurveTo(x + width, y + height, x + width - radius, y + height);\n\t\tif (yAlign === 'bottom') {\n\t\t\tthis.drawCaret(pt, tooltipSize);\n\t\t}\n\t\tctx.lineTo(x + radius, y + height);\n\t\tctx.quadraticCurveTo(x, y + height, x, y + height - radius);\n\t\tif (yAlign === 'center' && xAlign === 'left') {\n\t\t\tthis.drawCaret(pt, tooltipSize);\n\t\t}\n\t\tctx.lineTo(x, y + radius);\n\t\tctx.quadraticCurveTo(x, y, x + radius, y);\n\t\tctx.closePath();\n\n\t\tctx.fill();\n\n\t\tif (vm.borderWidth > 0) {\n\t\t\tctx.stroke();\n\t\t}\n\t},\n\n\tdraw: function() {\n\t\tvar ctx = this._chart.ctx;\n\t\tvar vm = this._view;\n\n\t\tif (vm.opacity === 0) {\n\t\t\treturn;\n\t\t}\n\n\t\tvar tooltipSize = {\n\t\t\twidth: vm.width,\n\t\t\theight: vm.height\n\t\t};\n\t\tvar pt = {\n\t\t\tx: vm.x,\n\t\t\ty: vm.y\n\t\t};\n\n\t\t// IE11/Edge does not like very small opacities, so snap to 0\n\t\tvar opacity = Math.abs(vm.opacity < 1e-3) ? 0 : vm.opacity;\n\n\t\t// Truthy/falsey value for empty tooltip\n\t\tvar hasTooltipContent = vm.title.length || vm.beforeBody.length || vm.body.length || vm.afterBody.length || vm.footer.length;\n\n\t\tif (this._options.enabled && hasTooltipContent) {\n\t\t\t// Draw Background\n\t\t\tthis.drawBackground(pt, vm, ctx, tooltipSize, opacity);\n\n\t\t\t// Draw Title, Body, and Footer\n\t\t\tpt.x += vm.xPadding;\n\t\t\tpt.y += vm.yPadding;\n\n\t\t\t// Titles\n\t\t\tthis.drawTitle(pt, vm, ctx, opacity);\n\n\t\t\t// Body\n\t\t\tthis.drawBody(pt, vm, ctx, opacity);\n\n\t\t\t// Footer\n\t\t\tthis.drawFooter(pt, vm, ctx, opacity);\n\t\t}\n\t},\n\n\t/**\n\t * Handle an event\n\t * @private\n\t * @param {IEvent} event - The event to handle\n\t * @returns {Boolean} true if the tooltip changed\n\t */\n\thandleEvent: function(e) {\n\t\tvar me = this;\n\t\tvar options = me._options;\n\t\tvar changed = false;\n\n\t\tme._lastActive = me._lastActive || [];\n\n\t\t// Find Active Elements for tooltips\n\t\tif (e.type === 'mouseout') {\n\t\t\tme._active = [];\n\t\t} else {\n\t\t\tme._active = me._chart.getElementsAtEventForMode(e, options.mode, options);\n\t\t}\n\n\t\t// Remember Last Actives\n\t\tchanged = !helpers.arrayEquals(me._active, me._lastActive);\n\n\t\t// Only handle target event on tooltip change\n\t\tif (changed) {\n\t\t\tme._lastActive = me._active;\n\n\t\t\tif (options.enabled || options.custom) {\n\t\t\t\tme._eventPosition = {\n\t\t\t\t\tx: e.x,\n\t\t\t\t\ty: e.y\n\t\t\t\t};\n\n\t\t\t\tme.update(true);\n\t\t\t\tme.pivot();\n\t\t\t}\n\t\t}\n\n\t\treturn changed;\n\t}\n});\n\n/**\n * @namespace Chart.Tooltip.positioners\n */\nexports.positioners = positioners;\n\n","'use strict';\n\nvar defaults = require('../core/core.defaults');\nvar Element = require('../core/core.element');\nvar helpers = require('../helpers/index');\n\nvar defaultColor = defaults.global.defaultColor;\n\ndefaults._set('global', {\n\telements: {\n\t\tpoint: {\n\t\t\tradius: 3,\n\t\t\tpointStyle: 'circle',\n\t\t\tbackgroundColor: defaultColor,\n\t\t\tborderColor: defaultColor,\n\t\t\tborderWidth: 1,\n\t\t\t// Hover\n\t\t\thitRadius: 1,\n\t\t\thoverRadius: 4,\n\t\t\thoverBorderWidth: 1\n\t\t}\n\t}\n});\n\nfunction xRange(mouseX) {\n\tvar vm = this._view;\n\treturn vm ? (Math.abs(mouseX - vm.x) < vm.radius + vm.hitRadius) : false;\n}\n\nfunction yRange(mouseY) {\n\tvar vm = this._view;\n\treturn vm ? (Math.abs(mouseY - vm.y) < vm.radius + vm.hitRadius) : false;\n}\n\nmodule.exports = Element.extend({\n\tinRange: function(mouseX, mouseY) {\n\t\tvar vm = this._view;\n\t\treturn vm ? ((Math.pow(mouseX - vm.x, 2) + Math.pow(mouseY - vm.y, 2)) < Math.pow(vm.hitRadius + vm.radius, 2)) : false;\n\t},\n\n\tinLabelRange: xRange,\n\tinXRange: xRange,\n\tinYRange: yRange,\n\n\tgetCenterPoint: function() {\n\t\tvar vm = this._view;\n\t\treturn {\n\t\t\tx: vm.x,\n\t\t\ty: vm.y\n\t\t};\n\t},\n\n\tgetArea: function() {\n\t\treturn Math.PI * Math.pow(this._view.radius, 2);\n\t},\n\n\ttooltipPosition: function() {\n\t\tvar vm = this._view;\n\t\treturn {\n\t\t\tx: vm.x,\n\t\t\ty: vm.y,\n\t\t\tpadding: vm.radius + vm.borderWidth\n\t\t};\n\t},\n\n\tdraw: function(chartArea) {\n\t\tvar vm = this._view;\n\t\tvar model = this._model;\n\t\tvar ctx = this._chart.ctx;\n\t\tvar pointStyle = vm.pointStyle;\n\t\tvar rotation = vm.rotation;\n\t\tvar radius = vm.radius;\n\t\tvar x = vm.x;\n\t\tvar y = vm.y;\n\t\tvar errMargin = 1.01; // 1.01 is margin for Accumulated error. (Especially Edge, IE.)\n\n\t\tif (vm.skip) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Clipping for Points.\n\t\tif (chartArea === undefined || (model.x >= chartArea.left && chartArea.right * errMargin >= model.x && model.y >= chartArea.top && chartArea.bottom * errMargin >= model.y)) {\n\t\t\tctx.strokeStyle = vm.borderColor || defaultColor;\n\t\t\tctx.lineWidth = helpers.valueOrDefault(vm.borderWidth, defaults.global.elements.point.borderWidth);\n\t\t\tctx.fillStyle = vm.backgroundColor || defaultColor;\n\t\t\thelpers.canvas.drawPoint(ctx, pointStyle, radius, x, y, rotation);\n\t\t}\n\t}\n});\n","'use strict';\n\nvar defaults = require('../core/core.defaults');\nvar elements = require('../elements/index');\nvar helpers = require('../helpers/index');\n\ndefaults._set('doughnut', {\n\tanimation: {\n\t\t// Boolean - Whether we animate the rotation of the Doughnut\n\t\tanimateRotate: true,\n\t\t// Boolean - Whether we animate scaling the Doughnut from the centre\n\t\tanimateScale: false\n\t},\n\thover: {\n\t\tmode: 'single'\n\t},\n\tlegendCallback: function(chart) {\n\t\tvar text = [];\n\t\ttext.push('<ul class=\"' + chart.id + '-legend\">');\n\n\t\tvar data = chart.data;\n\t\tvar datasets = data.datasets;\n\t\tvar labels = data.labels;\n\n\t\tif (datasets.length) {\n\t\t\tfor (var i = 0; i < datasets[0].data.length; ++i) {\n\t\t\t\ttext.push('<li><span style=\"background-color:' + datasets[0].backgroundColor[i] + '\"></span>');\n\t\t\t\tif (labels[i]) {\n\t\t\t\t\ttext.push(labels[i]);\n\t\t\t\t}\n\t\t\t\ttext.push('</li>');\n\t\t\t}\n\t\t}\n\n\t\ttext.push('</ul>');\n\t\treturn text.join('');\n\t},\n\tlegend: {\n\t\tlabels: {\n\t\t\tgenerateLabels: function(chart) {\n\t\t\t\tvar data = chart.data;\n\t\t\t\tif (data.labels.length && data.datasets.length) {\n\t\t\t\t\treturn data.labels.map(function(label, i) {\n\t\t\t\t\t\tvar meta = chart.getDatasetMeta(0);\n\t\t\t\t\t\tvar ds = data.datasets[0];\n\t\t\t\t\t\tvar arc = meta.data[i];\n\t\t\t\t\t\tvar custom = arc && arc.custom || {};\n\t\t\t\t\t\tvar valueAtIndexOrDefault = helpers.valueAtIndexOrDefault;\n\t\t\t\t\t\tvar arcOpts = chart.options.elements.arc;\n\t\t\t\t\t\tvar fill = custom.backgroundColor ? custom.backgroundColor : valueAtIndexOrDefault(ds.backgroundColor, i, arcOpts.backgroundColor);\n\t\t\t\t\t\tvar stroke = custom.borderColor ? custom.borderColor : valueAtIndexOrDefault(ds.borderColor, i, arcOpts.borderColor);\n\t\t\t\t\t\tvar bw = custom.borderWidth ? custom.borderWidth : valueAtIndexOrDefault(ds.borderWidth, i, arcOpts.borderWidth);\n\n\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\ttext: label,\n\t\t\t\t\t\t\tfillStyle: fill,\n\t\t\t\t\t\t\tstrokeStyle: stroke,\n\t\t\t\t\t\t\tlineWidth: bw,\n\t\t\t\t\t\t\thidden: isNaN(ds.data[i]) || meta.data[i].hidden,\n\n\t\t\t\t\t\t\t// Extra data used for toggling the correct item\n\t\t\t\t\t\t\tindex: i\n\t\t\t\t\t\t};\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\treturn [];\n\t\t\t}\n\t\t},\n\n\t\tonClick: function(e, legendItem) {\n\t\t\tvar index = legendItem.index;\n\t\t\tvar chart = this.chart;\n\t\t\tvar i, ilen, meta;\n\n\t\t\tfor (i = 0, ilen = (chart.data.datasets || []).length; i < ilen; ++i) {\n\t\t\t\tmeta = chart.getDatasetMeta(i);\n\t\t\t\t// toggle visibility of index if exists\n\t\t\t\tif (meta.data[index]) {\n\t\t\t\t\tmeta.data[index].hidden = !meta.data[index].hidden;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tchart.update();\n\t\t}\n\t},\n\n\t// The percentage of the chart that we cut out of the middle.\n\tcutoutPercentage: 50,\n\n\t// The rotation of the chart, where the first data arc begins.\n\trotation: Math.PI * -0.5,\n\n\t// The total circumference of the chart.\n\tcircumference: Math.PI * 2.0,\n\n\t// Need to override these to give a nice default\n\ttooltips: {\n\t\tcallbacks: {\n\t\t\ttitle: function() {\n\t\t\t\treturn '';\n\t\t\t},\n\t\t\tlabel: function(tooltipItem, data) {\n\t\t\t\tvar dataLabel = data.labels[tooltipItem.index];\n\t\t\t\tvar value = ': ' + data.datasets[tooltipItem.datasetIndex].data[tooltipItem.index];\n\n\t\t\t\tif (helpers.isArray(dataLabel)) {\n\t\t\t\t\t// show value on first line of multiline label\n\t\t\t\t\t// need to clone because we are changing the value\n\t\t\t\t\tdataLabel = dataLabel.slice();\n\t\t\t\t\tdataLabel[0] += value;\n\t\t\t\t} else {\n\t\t\t\t\tdataLabel += value;\n\t\t\t\t}\n\n\t\t\t\treturn dataLabel;\n\t\t\t}\n\t\t}\n\t}\n});\n\ndefaults._set('pie', helpers.clone(defaults.doughnut));\ndefaults._set('pie', {\n\tcutoutPercentage: 0\n});\n\nmodule.exports = function(Chart) {\n\n\tChart.controllers.doughnut = Chart.controllers.pie = Chart.DatasetController.extend({\n\n\t\tdataElementType: elements.Arc,\n\n\t\tlinkScales: helpers.noop,\n\n\t\t// Get index of the dataset in relation to the visible datasets. This allows determining the inner and outer radius correctly\n\t\tgetRingIndex: function(datasetIndex) {\n\t\t\tvar ringIndex = 0;\n\n\t\t\tfor (var j = 0; j < datasetIndex; ++j) {\n\t\t\t\tif (this.chart.isDatasetVisible(j)) {\n\t\t\t\t\t++ringIndex;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn ringIndex;\n\t\t},\n\n\t\tupdate: function(reset) {\n\t\t\tvar me = this;\n\t\t\tvar chart = me.chart;\n\t\t\tvar chartArea = chart.chartArea;\n\t\t\tvar opts = chart.options;\n\t\t\tvar arcOpts = opts.elements.arc;\n\t\t\tvar availableWidth = chartArea.right - chartArea.left - arcOpts.borderWidth;\n\t\t\tvar availableHeight = chartArea.bottom - chartArea.top - arcOpts.borderWidth;\n\t\t\tvar minSize = Math.min(availableWidth, availableHeight);\n\t\t\tvar offset = {x: 0, y: 0};\n\t\t\tvar meta = me.getMeta();\n\t\t\tvar cutoutPercentage = opts.cutoutPercentage;\n\t\t\tvar circumference = opts.circumference;\n\n\t\t\t// If the chart's circumference isn't a full circle, calculate minSize as a ratio of the width/height of the arc\n\t\t\tif (circumference < Math.PI * 2.0) {\n\t\t\t\tvar startAngle = opts.rotation % (Math.PI * 2.0);\n\t\t\t\tstartAngle += Math.PI * 2.0 * (startAngle >= Math.PI ? -1 : startAngle < -Math.PI ? 1 : 0);\n\t\t\t\tvar endAngle = startAngle + circumference;\n\t\t\t\tvar start = {x: Math.cos(startAngle), y: Math.sin(startAngle)};\n\t\t\t\tvar end = {x: Math.cos(endAngle), y: Math.sin(endAngle)};\n\t\t\t\tvar contains0 = (startAngle <= 0 && endAngle >= 0) || (startAngle <= Math.PI * 2.0 && Math.PI * 2.0 <= endAngle);\n\t\t\t\tvar contains90 = (startAngle <= Math.PI * 0.5 && Math.PI * 0.5 <= endAngle) || (startAngle <= Math.PI * 2.5 && Math.PI * 2.5 <= endAngle);\n\t\t\t\tvar contains180 = (startAngle <= -Math.PI && -Math.PI <= endAngle) || (startAngle <= Math.PI && Math.PI <= endAngle);\n\t\t\t\tvar contains270 = (startAngle <= -Math.PI * 0.5 && -Math.PI * 0.5 <= endAngle) || (startAngle <= Math.PI * 1.5 && Math.PI * 1.5 <= endAngle);\n\t\t\t\tvar cutout = cutoutPercentage / 100.0;\n\t\t\t\tvar min = {x: contains180 ? -1 : Math.min(start.x * (start.x < 0 ? 1 : cutout), end.x * (end.x < 0 ? 1 : cutout)), y: contains270 ? -1 : Math.min(start.y * (start.y < 0 ? 1 : cutout), end.y * (end.y < 0 ? 1 : cutout))};\n\t\t\t\tvar max = {x: contains0 ? 1 : Math.max(start.x * (start.x > 0 ? 1 : cutout), end.x * (end.x > 0 ? 1 : cutout)), y: contains90 ? 1 : Math.max(start.y * (start.y > 0 ? 1 : cutout), end.y * (end.y > 0 ? 1 : cutout))};\n\t\t\t\tvar size = {width: (max.x - min.x) * 0.5, height: (max.y - min.y) * 0.5};\n\t\t\t\tminSize = Math.min(availableWidth / size.width, availableHeight / size.height);\n\t\t\t\toffset = {x: (max.x + min.x) * -0.5, y: (max.y + min.y) * -0.5};\n\t\t\t}\n\n\t\t\tchart.borderWidth = me.getMaxBorderWidth(meta.data);\n\t\t\tchart.outerRadius = Math.max((minSize - chart.borderWidth) / 2, 0);\n\t\t\tchart.innerRadius = Math.max(cutoutPercentage ? (chart.outerRadius / 100) * (cutoutPercentage) : 0, 0);\n\t\t\tchart.radiusLength = (chart.outerRadius - chart.innerRadius) / chart.getVisibleDatasetCount();\n\t\t\tchart.offsetX = offset.x * chart.outerRadius;\n\t\t\tchart.offsetY = offset.y * chart.outerRadius;\n\n\t\t\tmeta.total = me.calculateTotal();\n\n\t\t\tme.outerRadius = chart.outerRadius - (chart.radiusLength * me.getRingIndex(me.index));\n\t\t\tme.innerRadius = Math.max(me.outerRadius - chart.radiusLength, 0);\n\n\t\t\thelpers.each(meta.data, function(arc, index) {\n\t\t\t\tme.updateElement(arc, index, reset);\n\t\t\t});\n\t\t},\n\n\t\tupdateElement: function(arc, index, reset) {\n\t\t\tvar me = this;\n\t\t\tvar chart = me.chart;\n\t\t\tvar chartArea = chart.chartArea;\n\t\t\tvar opts = chart.options;\n\t\t\tvar animationOpts = opts.animation;\n\t\t\tvar centerX = (chartArea.left + chartArea.right) / 2;\n\t\t\tvar centerY = (chartArea.top + chartArea.bottom) / 2;\n\t\t\tvar startAngle = opts.rotation; // non reset case handled later\n\t\t\tvar endAngle = opts.rotation; // non reset case handled later\n\t\t\tvar dataset = me.getDataset();\n\t\t\tvar circumference = reset && animationOpts.animateRotate ? 0 : arc.hidden ? 0 : me.calculateCircumference(dataset.data[index]) * (opts.circumference / (2.0 * Math.PI));\n\t\t\tvar innerRadius = reset && animationOpts.animateScale ? 0 : me.innerRadius;\n\t\t\tvar outerRadius = reset && animationOpts.animateScale ? 0 : me.outerRadius;\n\t\t\tvar valueAtIndexOrDefault = helpers.valueAtIndexOrDefault;\n\n\t\t\thelpers.extend(arc, {\n\t\t\t\t// Utility\n\t\t\t\t_datasetIndex: me.index,\n\t\t\t\t_index: index,\n\n\t\t\t\t// Desired view properties\n\t\t\t\t_model: {\n\t\t\t\t\tx: centerX + chart.offsetX,\n\t\t\t\t\ty: centerY + chart.offsetY,\n\t\t\t\t\tstartAngle: startAngle,\n\t\t\t\t\tendAngle: endAngle,\n\t\t\t\t\tcircumference: circumference,\n\t\t\t\t\touterRadius: outerRadius,\n\t\t\t\t\tinnerRadius: innerRadius,\n\t\t\t\t\tlabel: valueAtIndexOrDefault(dataset.label, index, chart.data.labels[index])\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tvar model = arc._model;\n\n\t\t\t// Resets the visual styles\n\t\t\tvar custom = arc.custom || {};\n\t\t\tvar valueOrDefault = helpers.valueAtIndexOrDefault;\n\t\t\tvar elementOpts = this.chart.options.elements.arc;\n\t\t\tmodel.backgroundColor = custom.backgroundColor ? custom.backgroundColor : valueOrDefault(dataset.backgroundColor, index, elementOpts.backgroundColor);\n\t\t\tmodel.borderColor = custom.borderColor ? custom.borderColor : valueOrDefault(dataset.borderColor, index, elementOpts.borderColor);\n\t\t\tmodel.borderWidth = custom.borderWidth ? custom.borderWidth : valueOrDefault(dataset.borderWidth, index, elementOpts.borderWidth);\n\n\t\t\t// Set correct angles if not resetting\n\t\t\tif (!reset || !animationOpts.animateRotate) {\n\t\t\t\tif (index === 0) {\n\t\t\t\t\tmodel.startAngle = opts.rotation;\n\t\t\t\t} else {\n\t\t\t\t\tmodel.startAngle = me.getMeta().data[index - 1]._model.endAngle;\n\t\t\t\t}\n\n\t\t\t\tmodel.endAngle = model.startAngle + model.circumference;\n\t\t\t}\n\n\t\t\tarc.pivot();\n\t\t},\n\n\t\tcalculateTotal: function() {\n\t\t\tvar dataset = this.getDataset();\n\t\t\tvar meta = this.getMeta();\n\t\t\tvar total = 0;\n\t\t\tvar value;\n\n\t\t\thelpers.each(meta.data, function(element, index) {\n\t\t\t\tvalue = dataset.data[index];\n\t\t\t\tif (!isNaN(value) && !element.hidden) {\n\t\t\t\t\ttotal += Math.abs(value);\n\t\t\t\t}\n\t\t\t});\n\n\t\t\t/* if (total === 0) {\n\t\t\t\ttotal = NaN;\n\t\t\t}*/\n\n\t\t\treturn total;\n\t\t},\n\n\t\tcalculateCircumference: function(value) {\n\t\t\tvar total = this.getMeta().total;\n\t\t\tif (total > 0 && !isNaN(value)) {\n\t\t\t\treturn (Math.PI * 2.0) * (Math.abs(value) / total);\n\t\t\t}\n\t\t\treturn 0;\n\t\t},\n\n\t\t// gets the max border or hover width to properly scale pie charts\n\t\tgetMaxBorderWidth: function(arcs) {\n\t\t\tvar max = 0;\n\t\t\tvar index = this.index;\n\t\t\tvar length = arcs.length;\n\t\t\tvar borderWidth;\n\t\t\tvar hoverWidth;\n\n\t\t\tfor (var i = 0; i < length; i++) {\n\t\t\t\tborderWidth = arcs[i]._model ? arcs[i]._model.borderWidth : 0;\n\t\t\t\thoverWidth = arcs[i]._chart ? arcs[i]._chart.config.data.datasets[index].hoverBorderWidth : 0;\n\n\t\t\t\tmax = borderWidth > max ? borderWidth : max;\n\t\t\t\tmax = hoverWidth > max ? hoverWidth : max;\n\t\t\t}\n\t\t\treturn max;\n\t\t}\n\t});\n};\n","'use strict';\n\nmodule.exports = require('./helpers.core');\nmodule.exports.easing = require('./helpers.easing');\nmodule.exports.canvas = require('./helpers.canvas');\nmodule.exports.options = require('./helpers.options');\n","/* MIT license */\n\nmodule.exports = {\n  rgb2hsl: rgb2hsl,\n  rgb2hsv: rgb2hsv,\n  rgb2hwb: rgb2hwb,\n  rgb2cmyk: rgb2cmyk,\n  rgb2keyword: rgb2keyword,\n  rgb2xyz: rgb2xyz,\n  rgb2lab: rgb2lab,\n  rgb2lch: rgb2lch,\n\n  hsl2rgb: hsl2rgb,\n  hsl2hsv: hsl2hsv,\n  hsl2hwb: hsl2hwb,\n  hsl2cmyk: hsl2cmyk,\n  hsl2keyword: hsl2keyword,\n\n  hsv2rgb: hsv2rgb,\n  hsv2hsl: hsv2hsl,\n  hsv2hwb: hsv2hwb,\n  hsv2cmyk: hsv2cmyk,\n  hsv2keyword: hsv2keyword,\n\n  hwb2rgb: hwb2rgb,\n  hwb2hsl: hwb2hsl,\n  hwb2hsv: hwb2hsv,\n  hwb2cmyk: hwb2cmyk,\n  hwb2keyword: hwb2keyword,\n\n  cmyk2rgb: cmyk2rgb,\n  cmyk2hsl: cmyk2hsl,\n  cmyk2hsv: cmyk2hsv,\n  cmyk2hwb: cmyk2hwb,\n  cmyk2keyword: cmyk2keyword,\n\n  keyword2rgb: keyword2rgb,\n  keyword2hsl: keyword2hsl,\n  keyword2hsv: keyword2hsv,\n  keyword2hwb: keyword2hwb,\n  keyword2cmyk: keyword2cmyk,\n  keyword2lab: keyword2lab,\n  keyword2xyz: keyword2xyz,\n\n  xyz2rgb: xyz2rgb,\n  xyz2lab: xyz2lab,\n  xyz2lch: xyz2lch,\n\n  lab2xyz: lab2xyz,\n  lab2rgb: lab2rgb,\n  lab2lch: lab2lch,\n\n  lch2lab: lch2lab,\n  lch2xyz: lch2xyz,\n  lch2rgb: lch2rgb\n}\n\n\nfunction rgb2hsl(rgb) {\n  var r = rgb[0]/255,\n      g = rgb[1]/255,\n      b = rgb[2]/255,\n      min = Math.min(r, g, b),\n      max = Math.max(r, g, b),\n      delta = max - min,\n      h, s, l;\n\n  if (max == min)\n    h = 0;\n  else if (r == max)\n    h = (g - b) / delta;\n  else if (g == max)\n    h = 2 + (b - r) / delta;\n  else if (b == max)\n    h = 4 + (r - g)/ delta;\n\n  h = Math.min(h * 60, 360);\n\n  if (h < 0)\n    h += 360;\n\n  l = (min + max) / 2;\n\n  if (max == min)\n    s = 0;\n  else if (l <= 0.5)\n    s = delta / (max + min);\n  else\n    s = delta / (2 - max - min);\n\n  return [h, s * 100, l * 100];\n}\n\nfunction rgb2hsv(rgb) {\n  var r = rgb[0],\n      g = rgb[1],\n      b = rgb[2],\n      min = Math.min(r, g, b),\n      max = Math.max(r, g, b),\n      delta = max - min,\n      h, s, v;\n\n  if (max == 0)\n    s = 0;\n  else\n    s = (delta/max * 1000)/10;\n\n  if (max == min)\n    h = 0;\n  else if (r == max)\n    h = (g - b) / delta;\n  else if (g == max)\n    h = 2 + (b - r) / delta;\n  else if (b == max)\n    h = 4 + (r - g) / delta;\n\n  h = Math.min(h * 60, 360);\n\n  if (h < 0)\n    h += 360;\n\n  v = ((max / 255) * 1000) / 10;\n\n  return [h, s, v];\n}\n\nfunction rgb2hwb(rgb) {\n  var r = rgb[0],\n      g = rgb[1],\n      b = rgb[2],\n      h = rgb2hsl(rgb)[0],\n      w = 1/255 * Math.min(r, Math.min(g, b)),\n      b = 1 - 1/255 * Math.max(r, Math.max(g, b));\n\n  return [h, w * 100, b * 100];\n}\n\nfunction rgb2cmyk(rgb) {\n  var r = rgb[0] / 255,\n      g = rgb[1] / 255,\n      b = rgb[2] / 255,\n      c, m, y, k;\n\n  k = Math.min(1 - r, 1 - g, 1 - b);\n  c = (1 - r - k) / (1 - k) || 0;\n  m = (1 - g - k) / (1 - k) || 0;\n  y = (1 - b - k) / (1 - k) || 0;\n  return [c * 100, m * 100, y * 100, k * 100];\n}\n\nfunction rgb2keyword(rgb) {\n  return reverseKeywords[JSON.stringify(rgb)];\n}\n\nfunction rgb2xyz(rgb) {\n  var r = rgb[0] / 255,\n      g = rgb[1] / 255,\n      b = rgb[2] / 255;\n\n  // assume sRGB\n  r = r > 0.04045 ? Math.pow(((r + 0.055) / 1.055), 2.4) : (r / 12.92);\n  g = g > 0.04045 ? Math.pow(((g + 0.055) / 1.055), 2.4) : (g / 12.92);\n  b = b > 0.04045 ? Math.pow(((b + 0.055) / 1.055), 2.4) : (b / 12.92);\n\n  var x = (r * 0.4124) + (g * 0.3576) + (b * 0.1805);\n  var y = (r * 0.2126) + (g * 0.7152) + (b * 0.0722);\n  var z = (r * 0.0193) + (g * 0.1192) + (b * 0.9505);\n\n  return [x * 100, y *100, z * 100];\n}\n\nfunction rgb2lab(rgb) {\n  var xyz = rgb2xyz(rgb),\n        x = xyz[0],\n        y = xyz[1],\n        z = xyz[2],\n        l, a, b;\n\n  x /= 95.047;\n  y /= 100;\n  z /= 108.883;\n\n  x = x > 0.008856 ? Math.pow(x, 1/3) : (7.787 * x) + (16 / 116);\n  y = y > 0.008856 ? Math.pow(y, 1/3) : (7.787 * y) + (16 / 116);\n  z = z > 0.008856 ? Math.pow(z, 1/3) : (7.787 * z) + (16 / 116);\n\n  l = (116 * y) - 16;\n  a = 500 * (x - y);\n  b = 200 * (y - z);\n\n  return [l, a, b];\n}\n\nfunction rgb2lch(args) {\n  return lab2lch(rgb2lab(args));\n}\n\nfunction hsl2rgb(hsl) {\n  var h = hsl[0] / 360,\n      s = hsl[1] / 100,\n      l = hsl[2] / 100,\n      t1, t2, t3, rgb, val;\n\n  if (s == 0) {\n    val = l * 255;\n    return [val, val, val];\n  }\n\n  if (l < 0.5)\n    t2 = l * (1 + s);\n  else\n    t2 = l + s - l * s;\n  t1 = 2 * l - t2;\n\n  rgb = [0, 0, 0];\n  for (var i = 0; i < 3; i++) {\n    t3 = h + 1 / 3 * - (i - 1);\n    t3 < 0 && t3++;\n    t3 > 1 && t3--;\n\n    if (6 * t3 < 1)\n      val = t1 + (t2 - t1) * 6 * t3;\n    else if (2 * t3 < 1)\n      val = t2;\n    else if (3 * t3 < 2)\n      val = t1 + (t2 - t1) * (2 / 3 - t3) * 6;\n    else\n      val = t1;\n\n    rgb[i] = val * 255;\n  }\n\n  return rgb;\n}\n\nfunction hsl2hsv(hsl) {\n  var h = hsl[0],\n      s = hsl[1] / 100,\n      l = hsl[2] / 100,\n      sv, v;\n\n  if(l === 0) {\n      // no need to do calc on black\n      // also avoids divide by 0 error\n      return [0, 0, 0];\n  }\n\n  l *= 2;\n  s *= (l <= 1) ? l : 2 - l;\n  v = (l + s) / 2;\n  sv = (2 * s) / (l + s);\n  return [h, sv * 100, v * 100];\n}\n\nfunction hsl2hwb(args) {\n  return rgb2hwb(hsl2rgb(args));\n}\n\nfunction hsl2cmyk(args) {\n  return rgb2cmyk(hsl2rgb(args));\n}\n\nfunction hsl2keyword(args) {\n  return rgb2keyword(hsl2rgb(args));\n}\n\n\nfunction hsv2rgb(hsv) {\n  var h = hsv[0] / 60,\n      s = hsv[1] / 100,\n      v = hsv[2] / 100,\n      hi = Math.floor(h) % 6;\n\n  var f = h - Math.floor(h),\n      p = 255 * v * (1 - s),\n      q = 255 * v * (1 - (s * f)),\n      t = 255 * v * (1 - (s * (1 - f))),\n      v = 255 * v;\n\n  switch(hi) {\n    case 0:\n      return [v, t, p];\n    case 1:\n      return [q, v, p];\n    case 2:\n      return [p, v, t];\n    case 3:\n      return [p, q, v];\n    case 4:\n      return [t, p, v];\n    case 5:\n      return [v, p, q];\n  }\n}\n\nfunction hsv2hsl(hsv) {\n  var h = hsv[0],\n      s = hsv[1] / 100,\n      v = hsv[2] / 100,\n      sl, l;\n\n  l = (2 - s) * v;\n  sl = s * v;\n  sl /= (l <= 1) ? l : 2 - l;\n  sl = sl || 0;\n  l /= 2;\n  return [h, sl * 100, l * 100];\n}\n\nfunction hsv2hwb(args) {\n  return rgb2hwb(hsv2rgb(args))\n}\n\nfunction hsv2cmyk(args) {\n  return rgb2cmyk(hsv2rgb(args));\n}\n\nfunction hsv2keyword(args) {\n  return rgb2keyword(hsv2rgb(args));\n}\n\n// http://dev.w3.org/csswg/css-color/#hwb-to-rgb\nfunction hwb2rgb(hwb) {\n  var h = hwb[0] / 360,\n      wh = hwb[1] / 100,\n      bl = hwb[2] / 100,\n      ratio = wh + bl,\n      i, v, f, n;\n\n  // wh + bl cant be > 1\n  if (ratio > 1) {\n    wh /= ratio;\n    bl /= ratio;\n  }\n\n  i = Math.floor(6 * h);\n  v = 1 - bl;\n  f = 6 * h - i;\n  if ((i & 0x01) != 0) {\n    f = 1 - f;\n  }\n  n = wh + f * (v - wh);  // linear interpolation\n\n  switch (i) {\n    default:\n    case 6:\n    case 0: r = v; g = n; b = wh; break;\n    case 1: r = n; g = v; b = wh; break;\n    case 2: r = wh; g = v; b = n; break;\n    case 3: r = wh; g = n; b = v; break;\n    case 4: r = n; g = wh; b = v; break;\n    case 5: r = v; g = wh; b = n; break;\n  }\n\n  return [r * 255, g * 255, b * 255];\n}\n\nfunction hwb2hsl(args) {\n  return rgb2hsl(hwb2rgb(args));\n}\n\nfunction hwb2hsv(args) {\n  return rgb2hsv(hwb2rgb(args));\n}\n\nfunction hwb2cmyk(args) {\n  return rgb2cmyk(hwb2rgb(args));\n}\n\nfunction hwb2keyword(args) {\n  return rgb2keyword(hwb2rgb(args));\n}\n\nfunction cmyk2rgb(cmyk) {\n  var c = cmyk[0] / 100,\n      m = cmyk[1] / 100,\n      y = cmyk[2] / 100,\n      k = cmyk[3] / 100,\n      r, g, b;\n\n  r = 1 - Math.min(1, c * (1 - k) + k);\n  g = 1 - Math.min(1, m * (1 - k) + k);\n  b = 1 - Math.min(1, y * (1 - k) + k);\n  return [r * 255, g * 255, b * 255];\n}\n\nfunction cmyk2hsl(args) {\n  return rgb2hsl(cmyk2rgb(args));\n}\n\nfunction cmyk2hsv(args) {\n  return rgb2hsv(cmyk2rgb(args));\n}\n\nfunction cmyk2hwb(args) {\n  return rgb2hwb(cmyk2rgb(args));\n}\n\nfunction cmyk2keyword(args) {\n  return rgb2keyword(cmyk2rgb(args));\n}\n\n\nfunction xyz2rgb(xyz) {\n  var x = xyz[0] / 100,\n      y = xyz[1] / 100,\n      z = xyz[2] / 100,\n      r, g, b;\n\n  r = (x * 3.2406) + (y * -1.5372) + (z * -0.4986);\n  g = (x * -0.9689) + (y * 1.8758) + (z * 0.0415);\n  b = (x * 0.0557) + (y * -0.2040) + (z * 1.0570);\n\n  // assume sRGB\n  r = r > 0.0031308 ? ((1.055 * Math.pow(r, 1.0 / 2.4)) - 0.055)\n    : r = (r * 12.92);\n\n  g = g > 0.0031308 ? ((1.055 * Math.pow(g, 1.0 / 2.4)) - 0.055)\n    : g = (g * 12.92);\n\n  b = b > 0.0031308 ? ((1.055 * Math.pow(b, 1.0 / 2.4)) - 0.055)\n    : b = (b * 12.92);\n\n  r = Math.min(Math.max(0, r), 1);\n  g = Math.min(Math.max(0, g), 1);\n  b = Math.min(Math.max(0, b), 1);\n\n  return [r * 255, g * 255, b * 255];\n}\n\nfunction xyz2lab(xyz) {\n  var x = xyz[0],\n      y = xyz[1],\n      z = xyz[2],\n      l, a, b;\n\n  x /= 95.047;\n  y /= 100;\n  z /= 108.883;\n\n  x = x > 0.008856 ? Math.pow(x, 1/3) : (7.787 * x) + (16 / 116);\n  y = y > 0.008856 ? Math.pow(y, 1/3) : (7.787 * y) + (16 / 116);\n  z = z > 0.008856 ? Math.pow(z, 1/3) : (7.787 * z) + (16 / 116);\n\n  l = (116 * y) - 16;\n  a = 500 * (x - y);\n  b = 200 * (y - z);\n\n  return [l, a, b];\n}\n\nfunction xyz2lch(args) {\n  return lab2lch(xyz2lab(args));\n}\n\nfunction lab2xyz(lab) {\n  var l = lab[0],\n      a = lab[1],\n      b = lab[2],\n      x, y, z, y2;\n\n  if (l <= 8) {\n    y = (l * 100) / 903.3;\n    y2 = (7.787 * (y / 100)) + (16 / 116);\n  } else {\n    y = 100 * Math.pow((l + 16) / 116, 3);\n    y2 = Math.pow(y / 100, 1/3);\n  }\n\n  x = x / 95.047 <= 0.008856 ? x = (95.047 * ((a / 500) + y2 - (16 / 116))) / 7.787 : 95.047 * Math.pow((a / 500) + y2, 3);\n\n  z = z / 108.883 <= 0.008859 ? z = (108.883 * (y2 - (b / 200) - (16 / 116))) / 7.787 : 108.883 * Math.pow(y2 - (b / 200), 3);\n\n  return [x, y, z];\n}\n\nfunction lab2lch(lab) {\n  var l = lab[0],\n      a = lab[1],\n      b = lab[2],\n      hr, h, c;\n\n  hr = Math.atan2(b, a);\n  h = hr * 360 / 2 / Math.PI;\n  if (h < 0) {\n    h += 360;\n  }\n  c = Math.sqrt(a * a + b * b);\n  return [l, c, h];\n}\n\nfunction lab2rgb(args) {\n  return xyz2rgb(lab2xyz(args));\n}\n\nfunction lch2lab(lch) {\n  var l = lch[0],\n      c = lch[1],\n      h = lch[2],\n      a, b, hr;\n\n  hr = h / 360 * 2 * Math.PI;\n  a = c * Math.cos(hr);\n  b = c * Math.sin(hr);\n  return [l, a, b];\n}\n\nfunction lch2xyz(args) {\n  return lab2xyz(lch2lab(args));\n}\n\nfunction lch2rgb(args) {\n  return lab2rgb(lch2lab(args));\n}\n\nfunction keyword2rgb(keyword) {\n  return cssKeywords[keyword];\n}\n\nfunction keyword2hsl(args) {\n  return rgb2hsl(keyword2rgb(args));\n}\n\nfunction keyword2hsv(args) {\n  return rgb2hsv(keyword2rgb(args));\n}\n\nfunction keyword2hwb(args) {\n  return rgb2hwb(keyword2rgb(args));\n}\n\nfunction keyword2cmyk(args) {\n  return rgb2cmyk(keyword2rgb(args));\n}\n\nfunction keyword2lab(args) {\n  return rgb2lab(keyword2rgb(args));\n}\n\nfunction keyword2xyz(args) {\n  return rgb2xyz(keyword2rgb(args));\n}\n\nvar cssKeywords = {\n  aliceblue:  [240,248,255],\n  antiquewhite: [250,235,215],\n  aqua: [0,255,255],\n  aquamarine: [127,255,212],\n  azure:  [240,255,255],\n  beige:  [245,245,220],\n  bisque: [255,228,196],\n  black:  [0,0,0],\n  blanchedalmond: [255,235,205],\n  blue: [0,0,255],\n  blueviolet: [138,43,226],\n  brown:  [165,42,42],\n  burlywood:  [222,184,135],\n  cadetblue:  [95,158,160],\n  chartreuse: [127,255,0],\n  chocolate:  [210,105,30],\n  coral:  [255,127,80],\n  cornflowerblue: [100,149,237],\n  cornsilk: [255,248,220],\n  crimson:  [220,20,60],\n  cyan: [0,255,255],\n  darkblue: [0,0,139],\n  darkcyan: [0,139,139],\n  darkgoldenrod:  [184,134,11],\n  darkgray: [169,169,169],\n  darkgreen:  [0,100,0],\n  darkgrey: [169,169,169],\n  darkkhaki:  [189,183,107],\n  darkmagenta:  [139,0,139],\n  darkolivegreen: [85,107,47],\n  darkorange: [255,140,0],\n  darkorchid: [153,50,204],\n  darkred:  [139,0,0],\n  darksalmon: [233,150,122],\n  darkseagreen: [143,188,143],\n  darkslateblue:  [72,61,139],\n  darkslategray:  [47,79,79],\n  darkslategrey:  [47,79,79],\n  darkturquoise:  [0,206,209],\n  darkviolet: [148,0,211],\n  deeppink: [255,20,147],\n  deepskyblue:  [0,191,255],\n  dimgray:  [105,105,105],\n  dimgrey:  [105,105,105],\n  dodgerblue: [30,144,255],\n  firebrick:  [178,34,34],\n  floralwhite:  [255,250,240],\n  forestgreen:  [34,139,34],\n  fuchsia:  [255,0,255],\n  gainsboro:  [220,220,220],\n  ghostwhite: [248,248,255],\n  gold: [255,215,0],\n  goldenrod:  [218,165,32],\n  gray: [128,128,128],\n  green:  [0,128,0],\n  greenyellow:  [173,255,47],\n  grey: [128,128,128],\n  honeydew: [240,255,240],\n  hotpink:  [255,105,180],\n  indianred:  [205,92,92],\n  indigo: [75,0,130],\n  ivory:  [255,255,240],\n  khaki:  [240,230,140],\n  lavender: [230,230,250],\n  lavenderblush:  [255,240,245],\n  lawngreen:  [124,252,0],\n  lemonchiffon: [255,250,205],\n  lightblue:  [173,216,230],\n  lightcoral: [240,128,128],\n  lightcyan:  [224,255,255],\n  lightgoldenrodyellow: [250,250,210],\n  lightgray:  [211,211,211],\n  lightgreen: [144,238,144],\n  lightgrey:  [211,211,211],\n  lightpink:  [255,182,193],\n  lightsalmon:  [255,160,122],\n  lightseagreen:  [32,178,170],\n  lightskyblue: [135,206,250],\n  lightslategray: [119,136,153],\n  lightslategrey: [119,136,153],\n  lightsteelblue: [176,196,222],\n  lightyellow:  [255,255,224],\n  lime: [0,255,0],\n  limegreen:  [50,205,50],\n  linen:  [250,240,230],\n  magenta:  [255,0,255],\n  maroon: [128,0,0],\n  mediumaquamarine: [102,205,170],\n  mediumblue: [0,0,205],\n  mediumorchid: [186,85,211],\n  mediumpurple: [147,112,219],\n  mediumseagreen: [60,179,113],\n  mediumslateblue:  [123,104,238],\n  mediumspringgreen:  [0,250,154],\n  mediumturquoise:  [72,209,204],\n  mediumvioletred:  [199,21,133],\n  midnightblue: [25,25,112],\n  mintcream:  [245,255,250],\n  mistyrose:  [255,228,225],\n  moccasin: [255,228,181],\n  navajowhite:  [255,222,173],\n  navy: [0,0,128],\n  oldlace:  [253,245,230],\n  olive:  [128,128,0],\n  olivedrab:  [107,142,35],\n  orange: [255,165,0],\n  orangered:  [255,69,0],\n  orchid: [218,112,214],\n  palegoldenrod:  [238,232,170],\n  palegreen:  [152,251,152],\n  paleturquoise:  [175,238,238],\n  palevioletred:  [219,112,147],\n  papayawhip: [255,239,213],\n  peachpuff:  [255,218,185],\n  peru: [205,133,63],\n  pink: [255,192,203],\n  plum: [221,160,221],\n  powderblue: [176,224,230],\n  purple: [128,0,128],\n  rebeccapurple: [102, 51, 153],\n  red:  [255,0,0],\n  rosybrown:  [188,143,143],\n  royalblue:  [65,105,225],\n  saddlebrown:  [139,69,19],\n  salmon: [250,128,114],\n  sandybrown: [244,164,96],\n  seagreen: [46,139,87],\n  seashell: [255,245,238],\n  sienna: [160,82,45],\n  silver: [192,192,192],\n  skyblue:  [135,206,235],\n  slateblue:  [106,90,205],\n  slategray:  [112,128,144],\n  slategrey:  [112,128,144],\n  snow: [255,250,250],\n  springgreen:  [0,255,127],\n  steelblue:  [70,130,180],\n  tan:  [210,180,140],\n  teal: [0,128,128],\n  thistle:  [216,191,216],\n  tomato: [255,99,71],\n  turquoise:  [64,224,208],\n  violet: [238,130,238],\n  wheat:  [245,222,179],\n  white:  [255,255,255],\n  whitesmoke: [245,245,245],\n  yellow: [255,255,0],\n  yellowgreen:  [154,205,50]\n};\n\nvar reverseKeywords = {};\nfor (var key in cssKeywords) {\n  reverseKeywords[JSON.stringify(cssKeywords[key])] = key;\n}\n","'use strict';\n\nvar helpers = require('../helpers/index');\nvar basic = require('./platform.basic');\nvar dom = require('./platform.dom');\n\n// @TODO Make possible to select another platform at build time.\nvar implementation = dom._enabled ? dom : basic;\n\n/**\n * @namespace Chart.platform\n * @see https://chartjs.gitbooks.io/proposals/content/Platform.html\n * @since 2.4.0\n */\nmodule.exports = helpers.extend({\n\t/**\n\t * @since 2.7.0\n\t */\n\tinitialize: function() {},\n\n\t/**\n\t * Called at chart construction time, returns a context2d instance implementing\n\t * the [W3C Canvas 2D Context API standard]{@link https://www.w3.org/TR/2dcontext/}.\n\t * @param {*} item - The native item from which to acquire context (platform specific)\n\t * @param {Object} options - The chart options\n\t * @returns {CanvasRenderingContext2D} context2d instance\n\t */\n\tacquireContext: function() {},\n\n\t/**\n\t * Called at chart destruction time, releases any resources associated to the context\n\t * previously returned by the acquireContext() method.\n\t * @param {CanvasRenderingContext2D} context - The context2d instance\n\t * @returns {Boolean} true if the method succeeded, else false\n\t */\n\treleaseContext: function() {},\n\n\t/**\n\t * Registers the specified listener on the given chart.\n\t * @param {Chart} chart - Chart from which to listen for event\n\t * @param {String} type - The ({@link IEvent}) type to listen for\n\t * @param {Function} listener - Receives a notification (an object that implements\n\t * the {@link IEvent} interface) when an event of the specified type occurs.\n\t */\n\taddEventListener: function() {},\n\n\t/**\n\t * Removes the specified listener previously registered with addEventListener.\n\t * @param {Chart} chart -Chart from which to remove the listener\n\t * @param {String} type - The ({@link IEvent}) type to remove\n\t * @param {Function} listener - The listener function to remove from the event target.\n\t */\n\tremoveEventListener: function() {}\n\n}, implementation);\n\n/**\n * @interface IPlatform\n * Allows abstracting platform dependencies away from the chart\n * @borrows Chart.platform.acquireContext as acquireContext\n * @borrows Chart.platform.releaseContext as releaseContext\n * @borrows Chart.platform.addEventListener as addEventListener\n * @borrows Chart.platform.removeEventListener as removeEventListener\n */\n\n/**\n * @interface IEvent\n * @prop {String} type - The event type name, possible values are:\n * 'contextmenu', 'mouseenter', 'mousedown', 'mousemove', 'mouseup', 'mouseout',\n * 'click', 'dblclick', 'keydown', 'keypress', 'keyup' and 'resize'\n * @prop {*} native - The original native event (null for emulated events, e.g. 'resize')\n * @prop {Number} x - The mouse x position, relative to the canvas (null for incompatible events)\n * @prop {Number} y - The mouse y position, relative to the canvas (null for incompatible events)\n */\n","'use strict';\n\nmodule.exports = {};\nmodule.exports.filler = require('./plugin.filler');\nmodule.exports.legend = require('./plugin.legend');\nmodule.exports.title = require('./plugin.title');\n","'use strict';\n\nvar helpers = require('./helpers.core');\n\n/**\n * @alias Chart.helpers.options\n * @namespace\n */\nmodule.exports = {\n\t/**\n\t * Converts the given line height `value` in pixels for a specific font `size`.\n\t * @param {Number|String} value - The lineHeight to parse (eg. 1.6, '14px', '75%', '1.6em').\n\t * @param {Number} size - The font size (in pixels) used to resolve relative `value`.\n\t * @returns {Number} The effective line height in pixels (size * 1.2 if value is invalid).\n\t * @see https://developer.mozilla.org/en-US/docs/Web/CSS/line-height\n\t * @since 2.7.0\n\t */\n\ttoLineHeight: function(value, size) {\n\t\tvar matches = ('' + value).match(/^(normal|(\\d+(?:\\.\\d+)?)(px|em|%)?)$/);\n\t\tif (!matches || matches[1] === 'normal') {\n\t\t\treturn size * 1.2;\n\t\t}\n\n\t\tvalue = +matches[2];\n\n\t\tswitch (matches[3]) {\n\t\tcase 'px':\n\t\t\treturn value;\n\t\tcase '%':\n\t\t\tvalue /= 100;\n\t\t\tbreak;\n\t\tdefault:\n\t\t\tbreak;\n\t\t}\n\n\t\treturn size * value;\n\t},\n\n\t/**\n\t * Converts the given value into a padding object with pre-computed width/height.\n\t * @param {Number|Object} value - If a number, set the value to all TRBL component,\n\t *  else, if and object, use defined properties and sets undefined ones to 0.\n\t * @returns {Object} The padding values (top, right, bottom, left, width, height)\n\t * @since 2.7.0\n\t */\n\ttoPadding: function(value) {\n\t\tvar t, r, b, l;\n\n\t\tif (helpers.isObject(value)) {\n\t\t\tt = +value.top || 0;\n\t\t\tr = +value.right || 0;\n\t\t\tb = +value.bottom || 0;\n\t\t\tl = +value.left || 0;\n\t\t} else {\n\t\t\tt = r = b = l = +value || 0;\n\t\t}\n\n\t\treturn {\n\t\t\ttop: t,\n\t\t\tright: r,\n\t\t\tbottom: b,\n\t\t\tleft: l,\n\t\t\theight: t + b,\n\t\t\twidth: l + r\n\t\t};\n\t},\n\n\t/**\n\t * Evaluates the given `inputs` sequentially and returns the first defined value.\n\t * @param {Array[]} inputs - An array of values, falling back to the last value.\n\t * @param {Object} [context] - If defined and the current value is a function, the value\n\t * is called with `context` as first argument and the result becomes the new input.\n\t * @param {Number} [index] - If defined and the current value is an array, the value\n\t * at `index` become the new input.\n\t * @since 2.7.0\n\t */\n\tresolve: function(inputs, context, index) {\n\t\tvar i, ilen, value;\n\n\t\tfor (i = 0, ilen = inputs.length; i < ilen; ++i) {\n\t\t\tvalue = inputs[i];\n\t\t\tif (value === undefined) {\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tif (context !== undefined && typeof value === 'function') {\n\t\t\t\tvalue = value(context);\n\t\t\t}\n\t\t\tif (index !== undefined && helpers.isArray(value)) {\n\t\t\t\tvalue = value[index];\n\t\t\t}\n\t\t\tif (value !== undefined) {\n\t\t\t\treturn value;\n\t\t\t}\n\t\t}\n\t}\n};\n","'use strict';\n\nvar Scale = require('../core/core.scale');\nvar scaleService = require('../core/core.scaleService');\n\nmodule.exports = function() {\n\n\t// Default config for a category scale\n\tvar defaultConfig = {\n\t\tposition: 'bottom'\n\t};\n\n\tvar DatasetScale = Scale.extend({\n\t\t/**\n\t\t* Internal function to get the correct labels. If data.xLabels or data.yLabels are defined, use those\n\t\t* else fall back to data.labels\n\t\t* @private\n\t\t*/\n\t\tgetLabels: function() {\n\t\t\tvar data = this.chart.data;\n\t\t\treturn this.options.labels || (this.isHorizontal() ? data.xLabels : data.yLabels) || data.labels;\n\t\t},\n\n\t\tdetermineDataLimits: function() {\n\t\t\tvar me = this;\n\t\t\tvar labels = me.getLabels();\n\t\t\tme.minIndex = 0;\n\t\t\tme.maxIndex = labels.length - 1;\n\t\t\tvar findIndex;\n\n\t\t\tif (me.options.ticks.min !== undefined) {\n\t\t\t\t// user specified min value\n\t\t\t\tfindIndex = labels.indexOf(me.options.ticks.min);\n\t\t\t\tme.minIndex = findIndex !== -1 ? findIndex : me.minIndex;\n\t\t\t}\n\n\t\t\tif (me.options.ticks.max !== undefined) {\n\t\t\t\t// user specified max value\n\t\t\t\tfindIndex = labels.indexOf(me.options.ticks.max);\n\t\t\t\tme.maxIndex = findIndex !== -1 ? findIndex : me.maxIndex;\n\t\t\t}\n\n\t\t\tme.min = labels[me.minIndex];\n\t\t\tme.max = labels[me.maxIndex];\n\t\t},\n\n\t\tbuildTicks: function() {\n\t\t\tvar me = this;\n\t\t\tvar labels = me.getLabels();\n\t\t\t// If we are viewing some subset of labels, slice the original array\n\t\t\tme.ticks = (me.minIndex === 0 && me.maxIndex === labels.length - 1) ? labels : labels.slice(me.minIndex, me.maxIndex + 1);\n\t\t},\n\n\t\tgetLabelForIndex: function(index, datasetIndex) {\n\t\t\tvar me = this;\n\t\t\tvar data = me.chart.data;\n\t\t\tvar isHorizontal = me.isHorizontal();\n\n\t\t\tif (data.yLabels && !isHorizontal) {\n\t\t\t\treturn me.getRightValue(data.datasets[datasetIndex].data[index]);\n\t\t\t}\n\t\t\treturn me.ticks[index - me.minIndex];\n\t\t},\n\n\t\t// Used to get data value locations.  Value can either be an index or a numerical value\n\t\tgetPixelForValue: function(value, index) {\n\t\t\tvar me = this;\n\t\t\tvar offset = me.options.offset;\n\t\t\t// 1 is added because we need the length but we have the indexes\n\t\t\tvar offsetAmt = Math.max((me.maxIndex + 1 - me.minIndex - (offset ? 0 : 1)), 1);\n\n\t\t\t// If value is a data object, then index is the index in the data array,\n\t\t\t// not the index of the scale. We need to change that.\n\t\t\tvar valueCategory;\n\t\t\tif (value !== undefined && value !== null) {\n\t\t\t\tvalueCategory = me.isHorizontal() ? value.x : value.y;\n\t\t\t}\n\t\t\tif (valueCategory !== undefined || (value !== undefined && isNaN(index))) {\n\t\t\t\tvar labels = me.getLabels();\n\t\t\t\tvalue = valueCategory || value;\n\t\t\t\tvar idx = labels.indexOf(value);\n\t\t\t\tindex = idx !== -1 ? idx : index;\n\t\t\t}\n\n\t\t\tif (me.isHorizontal()) {\n\t\t\t\tvar valueWidth = me.width / offsetAmt;\n\t\t\t\tvar widthOffset = (valueWidth * (index - me.minIndex));\n\n\t\t\t\tif (offset) {\n\t\t\t\t\twidthOffset += (valueWidth / 2);\n\t\t\t\t}\n\n\t\t\t\treturn me.left + Math.round(widthOffset);\n\t\t\t}\n\t\t\tvar valueHeight = me.height / offsetAmt;\n\t\t\tvar heightOffset = (valueHeight * (index - me.minIndex));\n\n\t\t\tif (offset) {\n\t\t\t\theightOffset += (valueHeight / 2);\n\t\t\t}\n\n\t\t\treturn me.top + Math.round(heightOffset);\n\t\t},\n\t\tgetPixelForTick: function(index) {\n\t\t\treturn this.getPixelForValue(this.ticks[index], index + this.minIndex, null);\n\t\t},\n\t\tgetValueForPixel: function(pixel) {\n\t\t\tvar me = this;\n\t\t\tvar offset = me.options.offset;\n\t\t\tvar value;\n\t\t\tvar offsetAmt = Math.max((me._ticks.length - (offset ? 0 : 1)), 1);\n\t\t\tvar horz = me.isHorizontal();\n\t\t\tvar valueDimension = (horz ? me.width : me.height) / offsetAmt;\n\n\t\t\tpixel -= horz ? me.left : me.top;\n\n\t\t\tif (offset) {\n\t\t\t\tpixel -= (valueDimension / 2);\n\t\t\t}\n\n\t\t\tif (pixel <= 0) {\n\t\t\t\tvalue = 0;\n\t\t\t} else {\n\t\t\t\tvalue = Math.round(pixel / valueDimension);\n\t\t\t}\n\n\t\t\treturn value + me.minIndex;\n\t\t},\n\t\tgetBasePixel: function() {\n\t\t\treturn this.bottom;\n\t\t}\n\t});\n\n\tscaleService.registerScaleType('category', DatasetScale, defaultConfig);\n};\n","/**\n * Plugin based on discussion from the following Chart.js issues:\n * @see https://github.com/chartjs/Chart.js/issues/2380#issuecomment-279961569\n * @see https://github.com/chartjs/Chart.js/issues/2440#issuecomment-256461897\n */\n\n'use strict';\n\nvar defaults = require('../core/core.defaults');\nvar elements = require('../elements/index');\nvar helpers = require('../helpers/index');\n\ndefaults._set('global', {\n\tplugins: {\n\t\tfiller: {\n\t\t\tpropagate: true\n\t\t}\n\t}\n});\n\nvar mappers = {\n\tdataset: function(source) {\n\t\tvar index = source.fill;\n\t\tvar chart = source.chart;\n\t\tvar meta = chart.getDatasetMeta(index);\n\t\tvar visible = meta && chart.isDatasetVisible(index);\n\t\tvar points = (visible && meta.dataset._children) || [];\n\t\tvar length = points.length || 0;\n\n\t\treturn !length ? null : function(point, i) {\n\t\t\treturn (i < length && points[i]._view) || null;\n\t\t};\n\t},\n\n\tboundary: function(source) {\n\t\tvar boundary = source.boundary;\n\t\tvar x = boundary ? boundary.x : null;\n\t\tvar y = boundary ? boundary.y : null;\n\n\t\treturn function(point) {\n\t\t\treturn {\n\t\t\t\tx: x === null ? point.x : x,\n\t\t\t\ty: y === null ? point.y : y,\n\t\t\t};\n\t\t};\n\t}\n};\n\n// @todo if (fill[0] === '#')\nfunction decodeFill(el, index, count) {\n\tvar model = el._model || {};\n\tvar fill = model.fill;\n\tvar target;\n\n\tif (fill === undefined) {\n\t\tfill = !!model.backgroundColor;\n\t}\n\n\tif (fill === false || fill === null) {\n\t\treturn false;\n\t}\n\n\tif (fill === true) {\n\t\treturn 'origin';\n\t}\n\n\ttarget = parseFloat(fill, 10);\n\tif (isFinite(target) && Math.floor(target) === target) {\n\t\tif (fill[0] === '-' || fill[0] === '+') {\n\t\t\ttarget = index + target;\n\t\t}\n\n\t\tif (target === index || target < 0 || target >= count) {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn target;\n\t}\n\n\tswitch (fill) {\n\t// compatibility\n\tcase 'bottom':\n\t\treturn 'start';\n\tcase 'top':\n\t\treturn 'end';\n\tcase 'zero':\n\t\treturn 'origin';\n\t// supported boundaries\n\tcase 'origin':\n\tcase 'start':\n\tcase 'end':\n\t\treturn fill;\n\t// invalid fill values\n\tdefault:\n\t\treturn false;\n\t}\n}\n\nfunction computeBoundary(source) {\n\tvar model = source.el._model || {};\n\tvar scale = source.el._scale || {};\n\tvar fill = source.fill;\n\tvar target = null;\n\tvar horizontal;\n\n\tif (isFinite(fill)) {\n\t\treturn null;\n\t}\n\n\t// Backward compatibility: until v3, we still need to support boundary values set on\n\t// the model (scaleTop, scaleBottom and scaleZero) because some external plugins and\n\t// controllers might still use it (e.g. the Smith chart).\n\n\tif (fill === 'start') {\n\t\ttarget = model.scaleBottom === undefined ? scale.bottom : model.scaleBottom;\n\t} else if (fill === 'end') {\n\t\ttarget = model.scaleTop === undefined ? scale.top : model.scaleTop;\n\t} else if (model.scaleZero !== undefined) {\n\t\ttarget = model.scaleZero;\n\t} else if (scale.getBasePosition) {\n\t\ttarget = scale.getBasePosition();\n\t} else if (scale.getBasePixel) {\n\t\ttarget = scale.getBasePixel();\n\t}\n\n\tif (target !== undefined && target !== null) {\n\t\tif (target.x !== undefined && target.y !== undefined) {\n\t\t\treturn target;\n\t\t}\n\n\t\tif (typeof target === 'number' && isFinite(target)) {\n\t\t\thorizontal = scale.isHorizontal();\n\t\t\treturn {\n\t\t\t\tx: horizontal ? target : null,\n\t\t\t\ty: horizontal ? null : target\n\t\t\t};\n\t\t}\n\t}\n\n\treturn null;\n}\n\nfunction resolveTarget(sources, index, propagate) {\n\tvar source = sources[index];\n\tvar fill = source.fill;\n\tvar visited = [index];\n\tvar target;\n\n\tif (!propagate) {\n\t\treturn fill;\n\t}\n\n\twhile (fill !== false && visited.indexOf(fill) === -1) {\n\t\tif (!isFinite(fill)) {\n\t\t\treturn fill;\n\t\t}\n\n\t\ttarget = sources[fill];\n\t\tif (!target) {\n\t\t\treturn false;\n\t\t}\n\n\t\tif (target.visible) {\n\t\t\treturn fill;\n\t\t}\n\n\t\tvisited.push(fill);\n\t\tfill = target.fill;\n\t}\n\n\treturn false;\n}\n\nfunction createMapper(source) {\n\tvar fill = source.fill;\n\tvar type = 'dataset';\n\n\tif (fill === false) {\n\t\treturn null;\n\t}\n\n\tif (!isFinite(fill)) {\n\t\ttype = 'boundary';\n\t}\n\n\treturn mappers[type](source);\n}\n\nfunction isDrawable(point) {\n\treturn point && !point.skip;\n}\n\nfunction drawArea(ctx, curve0, curve1, len0, len1) {\n\tvar i;\n\n\tif (!len0 || !len1) {\n\t\treturn;\n\t}\n\n\t// building first area curve (normal)\n\tctx.moveTo(curve0[0].x, curve0[0].y);\n\tfor (i = 1; i < len0; ++i) {\n\t\thelpers.canvas.lineTo(ctx, curve0[i - 1], curve0[i]);\n\t}\n\n\t// joining the two area curves\n\tctx.lineTo(curve1[len1 - 1].x, curve1[len1 - 1].y);\n\n\t// building opposite area curve (reverse)\n\tfor (i = len1 - 1; i > 0; --i) {\n\t\thelpers.canvas.lineTo(ctx, curve1[i], curve1[i - 1], true);\n\t}\n}\n\nfunction doFill(ctx, points, mapper, view, color, loop) {\n\tvar count = points.length;\n\tvar span = view.spanGaps;\n\tvar curve0 = [];\n\tvar curve1 = [];\n\tvar len0 = 0;\n\tvar len1 = 0;\n\tvar i, ilen, index, p0, p1, d0, d1;\n\n\tctx.beginPath();\n\n\tfor (i = 0, ilen = (count + !!loop); i < ilen; ++i) {\n\t\tindex = i % count;\n\t\tp0 = points[index]._view;\n\t\tp1 = mapper(p0, index, view);\n\t\td0 = isDrawable(p0);\n\t\td1 = isDrawable(p1);\n\n\t\tif (d0 && d1) {\n\t\t\tlen0 = curve0.push(p0);\n\t\t\tlen1 = curve1.push(p1);\n\t\t} else if (len0 && len1) {\n\t\t\tif (!span) {\n\t\t\t\tdrawArea(ctx, curve0, curve1, len0, len1);\n\t\t\t\tlen0 = len1 = 0;\n\t\t\t\tcurve0 = [];\n\t\t\t\tcurve1 = [];\n\t\t\t} else {\n\t\t\t\tif (d0) {\n\t\t\t\t\tcurve0.push(p0);\n\t\t\t\t}\n\t\t\t\tif (d1) {\n\t\t\t\t\tcurve1.push(p1);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tdrawArea(ctx, curve0, curve1, len0, len1);\n\n\tctx.closePath();\n\tctx.fillStyle = color;\n\tctx.fill();\n}\n\nmodule.exports = {\n\tid: 'filler',\n\n\tafterDatasetsUpdate: function(chart, options) {\n\t\tvar count = (chart.data.datasets || []).length;\n\t\tvar propagate = options.propagate;\n\t\tvar sources = [];\n\t\tvar meta, i, el, source;\n\n\t\tfor (i = 0; i < count; ++i) {\n\t\t\tmeta = chart.getDatasetMeta(i);\n\t\t\tel = meta.dataset;\n\t\t\tsource = null;\n\n\t\t\tif (el && el._model && el instanceof elements.Line) {\n\t\t\t\tsource = {\n\t\t\t\t\tvisible: chart.isDatasetVisible(i),\n\t\t\t\t\tfill: decodeFill(el, i, count),\n\t\t\t\t\tchart: chart,\n\t\t\t\t\tel: el\n\t\t\t\t};\n\t\t\t}\n\n\t\t\tmeta.$filler = source;\n\t\t\tsources.push(source);\n\t\t}\n\n\t\tfor (i = 0; i < count; ++i) {\n\t\t\tsource = sources[i];\n\t\t\tif (!source) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tsource.fill = resolveTarget(sources, i, propagate);\n\t\t\tsource.boundary = computeBoundary(source);\n\t\t\tsource.mapper = createMapper(source);\n\t\t}\n\t},\n\n\tbeforeDatasetDraw: function(chart, args) {\n\t\tvar meta = args.meta.$filler;\n\t\tif (!meta) {\n\t\t\treturn;\n\t\t}\n\n\t\tvar ctx = chart.ctx;\n\t\tvar el = meta.el;\n\t\tvar view = el._view;\n\t\tvar points = el._children || [];\n\t\tvar mapper = meta.mapper;\n\t\tvar color = view.backgroundColor || defaults.global.defaultColor;\n\n\t\tif (mapper && color && points.length) {\n\t\t\thelpers.canvas.clipArea(ctx, chart.chartArea);\n\t\t\tdoFill(ctx, points, mapper, view, color, el._loop);\n\t\t\thelpers.canvas.unclipArea(ctx);\n\t\t}\n\t}\n};\n","'use strict';\n\nvar defaults = require('./core.defaults');\nvar Element = require('./core.element');\nvar helpers = require('../helpers/index');\nvar Ticks = require('./core.ticks');\n\ndefaults._set('scale', {\n\tdisplay: true,\n\tposition: 'left',\n\toffset: false,\n\n\t// grid line settings\n\tgridLines: {\n\t\tdisplay: true,\n\t\tcolor: 'rgba(0, 0, 0, 0.1)',\n\t\tlineWidth: 1,\n\t\tdrawBorder: true,\n\t\tdrawOnChartArea: true,\n\t\tdrawTicks: true,\n\t\ttickMarkLength: 10,\n\t\tzeroLineWidth: 1,\n\t\tzeroLineColor: 'rgba(0,0,0,0.25)',\n\t\tzeroLineBorderDash: [],\n\t\tzeroLineBorderDashOffset: 0.0,\n\t\toffsetGridLines: false,\n\t\tborderDash: [],\n\t\tborderDashOffset: 0.0\n\t},\n\n\t// scale label\n\tscaleLabel: {\n\t\t// display property\n\t\tdisplay: false,\n\n\t\t// actual label\n\t\tlabelString: '',\n\n\t\t// line height\n\t\tlineHeight: 1.2,\n\n\t\t// top/bottom padding\n\t\tpadding: {\n\t\t\ttop: 4,\n\t\t\tbottom: 4\n\t\t}\n\t},\n\n\t// label settings\n\tticks: {\n\t\tbeginAtZero: false,\n\t\tminRotation: 0,\n\t\tmaxRotation: 50,\n\t\tmirror: false,\n\t\tpadding: 0,\n\t\treverse: false,\n\t\tdisplay: true,\n\t\tautoSkip: true,\n\t\tautoSkipPadding: 0,\n\t\tlabelOffset: 0,\n\t\t// We pass through arrays to be rendered as multiline labels, we convert Others to strings here.\n\t\tcallback: Ticks.formatters.values,\n\t\tminor: {},\n\t\tmajor: {}\n\t}\n});\n\nfunction labelsFromTicks(ticks) {\n\tvar labels = [];\n\tvar i, ilen;\n\n\tfor (i = 0, ilen = ticks.length; i < ilen; ++i) {\n\t\tlabels.push(ticks[i].label);\n\t}\n\n\treturn labels;\n}\n\nfunction getLineValue(scale, index, offsetGridLines) {\n\tvar lineValue = scale.getPixelForTick(index);\n\n\tif (offsetGridLines) {\n\t\tif (index === 0) {\n\t\t\tlineValue -= (scale.getPixelForTick(1) - lineValue) / 2;\n\t\t} else {\n\t\t\tlineValue -= (lineValue - scale.getPixelForTick(index - 1)) / 2;\n\t\t}\n\t}\n\treturn lineValue;\n}\n\nfunction computeTextSize(context, tick, font) {\n\treturn helpers.isArray(tick) ?\n\t\thelpers.longestText(context, font, tick) :\n\t\tcontext.measureText(tick).width;\n}\n\nfunction parseFontOptions(options) {\n\tvar valueOrDefault = helpers.valueOrDefault;\n\tvar globalDefaults = defaults.global;\n\tvar size = valueOrDefault(options.fontSize, globalDefaults.defaultFontSize);\n\tvar style = valueOrDefault(options.fontStyle, globalDefaults.defaultFontStyle);\n\tvar family = valueOrDefault(options.fontFamily, globalDefaults.defaultFontFamily);\n\n\treturn {\n\t\tsize: size,\n\t\tstyle: style,\n\t\tfamily: family,\n\t\tfont: helpers.fontString(size, style, family)\n\t};\n}\n\nfunction parseLineHeight(options) {\n\treturn helpers.options.toLineHeight(\n\t\thelpers.valueOrDefault(options.lineHeight, 1.2),\n\t\thelpers.valueOrDefault(options.fontSize, defaults.global.defaultFontSize));\n}\n\nmodule.exports = Element.extend({\n\t/**\n\t * Get the padding needed for the scale\n\t * @method getPadding\n\t * @private\n\t * @returns {Padding} the necessary padding\n\t */\n\tgetPadding: function() {\n\t\tvar me = this;\n\t\treturn {\n\t\t\tleft: me.paddingLeft || 0,\n\t\t\ttop: me.paddingTop || 0,\n\t\t\tright: me.paddingRight || 0,\n\t\t\tbottom: me.paddingBottom || 0\n\t\t};\n\t},\n\n\t/**\n\t * Returns the scale tick objects ({label, major})\n\t * @since 2.7\n\t */\n\tgetTicks: function() {\n\t\treturn this._ticks;\n\t},\n\n\t// These methods are ordered by lifecyle. Utilities then follow.\n\t// Any function defined here is inherited by all scale types.\n\t// Any function can be extended by the scale type\n\n\tmergeTicksOptions: function() {\n\t\tvar ticks = this.options.ticks;\n\t\tif (ticks.minor === false) {\n\t\t\tticks.minor = {\n\t\t\t\tdisplay: false\n\t\t\t};\n\t\t}\n\t\tif (ticks.major === false) {\n\t\t\tticks.major = {\n\t\t\t\tdisplay: false\n\t\t\t};\n\t\t}\n\t\tfor (var key in ticks) {\n\t\t\tif (key !== 'major' && key !== 'minor') {\n\t\t\t\tif (typeof ticks.minor[key] === 'undefined') {\n\t\t\t\t\tticks.minor[key] = ticks[key];\n\t\t\t\t}\n\t\t\t\tif (typeof ticks.major[key] === 'undefined') {\n\t\t\t\t\tticks.major[key] = ticks[key];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t},\n\tbeforeUpdate: function() {\n\t\thelpers.callback(this.options.beforeUpdate, [this]);\n\t},\n\n\tupdate: function(maxWidth, maxHeight, margins) {\n\t\tvar me = this;\n\t\tvar i, ilen, labels, label, ticks, tick;\n\n\t\t// Update Lifecycle - Probably don't want to ever extend or overwrite this function ;)\n\t\tme.beforeUpdate();\n\n\t\t// Absorb the master measurements\n\t\tme.maxWidth = maxWidth;\n\t\tme.maxHeight = maxHeight;\n\t\tme.margins = helpers.extend({\n\t\t\tleft: 0,\n\t\t\tright: 0,\n\t\t\ttop: 0,\n\t\t\tbottom: 0\n\t\t}, margins);\n\t\tme.longestTextCache = me.longestTextCache || {};\n\n\t\t// Dimensions\n\t\tme.beforeSetDimensions();\n\t\tme.setDimensions();\n\t\tme.afterSetDimensions();\n\n\t\t// Data min/max\n\t\tme.beforeDataLimits();\n\t\tme.determineDataLimits();\n\t\tme.afterDataLimits();\n\n\t\t// Ticks - `this.ticks` is now DEPRECATED!\n\t\t// Internal ticks are now stored as objects in the PRIVATE `this._ticks` member\n\t\t// and must not be accessed directly from outside this class. `this.ticks` being\n\t\t// around for long time and not marked as private, we can't change its structure\n\t\t// without unexpected breaking changes. If you need to access the scale ticks,\n\t\t// use scale.getTicks() instead.\n\n\t\tme.beforeBuildTicks();\n\n\t\t// New implementations should return an array of objects but for BACKWARD COMPAT,\n\t\t// we still support no return (`this.ticks` internally set by calling this method).\n\t\tticks = me.buildTicks() || [];\n\n\t\tme.afterBuildTicks();\n\n\t\tme.beforeTickToLabelConversion();\n\n\t\t// New implementations should return the formatted tick labels but for BACKWARD\n\t\t// COMPAT, we still support no return (`this.ticks` internally changed by calling\n\t\t// this method and supposed to contain only string values).\n\t\tlabels = me.convertTicksToLabels(ticks) || me.ticks;\n\n\t\tme.afterTickToLabelConversion();\n\n\t\tme.ticks = labels;   // BACKWARD COMPATIBILITY\n\n\t\t// IMPORTANT: from this point, we consider that `this.ticks` will NEVER change!\n\n\t\t// BACKWARD COMPAT: synchronize `_ticks` with labels (so potentially `this.ticks`)\n\t\tfor (i = 0, ilen = labels.length; i < ilen; ++i) {\n\t\t\tlabel = labels[i];\n\t\t\ttick = ticks[i];\n\t\t\tif (!tick) {\n\t\t\t\tticks.push(tick = {\n\t\t\t\t\tlabel: label,\n\t\t\t\t\tmajor: false\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\ttick.label = label;\n\t\t\t}\n\t\t}\n\n\t\tme._ticks = ticks;\n\n\t\t// Tick Rotation\n\t\tme.beforeCalculateTickRotation();\n\t\tme.calculateTickRotation();\n\t\tme.afterCalculateTickRotation();\n\t\t// Fit\n\t\tme.beforeFit();\n\t\tme.fit();\n\t\tme.afterFit();\n\t\t//\n\t\tme.afterUpdate();\n\n\t\treturn me.minSize;\n\n\t},\n\tafterUpdate: function() {\n\t\thelpers.callback(this.options.afterUpdate, [this]);\n\t},\n\n\t//\n\n\tbeforeSetDimensions: function() {\n\t\thelpers.callback(this.options.beforeSetDimensions, [this]);\n\t},\n\tsetDimensions: function() {\n\t\tvar me = this;\n\t\t// Set the unconstrained dimension before label rotation\n\t\tif (me.isHorizontal()) {\n\t\t\t// Reset position before calculating rotation\n\t\t\tme.width = me.maxWidth;\n\t\t\tme.left = 0;\n\t\t\tme.right = me.width;\n\t\t} else {\n\t\t\tme.height = me.maxHeight;\n\n\t\t\t// Reset position before calculating rotation\n\t\t\tme.top = 0;\n\t\t\tme.bottom = me.height;\n\t\t}\n\n\t\t// Reset padding\n\t\tme.paddingLeft = 0;\n\t\tme.paddingTop = 0;\n\t\tme.paddingRight = 0;\n\t\tme.paddingBottom = 0;\n\t},\n\tafterSetDimensions: function() {\n\t\thelpers.callback(this.options.afterSetDimensions, [this]);\n\t},\n\n\t// Data limits\n\tbeforeDataLimits: function() {\n\t\thelpers.callback(this.options.beforeDataLimits, [this]);\n\t},\n\tdetermineDataLimits: helpers.noop,\n\tafterDataLimits: function() {\n\t\thelpers.callback(this.options.afterDataLimits, [this]);\n\t},\n\n\t//\n\tbeforeBuildTicks: function() {\n\t\thelpers.callback(this.options.beforeBuildTicks, [this]);\n\t},\n\tbuildTicks: helpers.noop,\n\tafterBuildTicks: function() {\n\t\thelpers.callback(this.options.afterBuildTicks, [this]);\n\t},\n\n\tbeforeTickToLabelConversion: function() {\n\t\thelpers.callback(this.options.beforeTickToLabelConversion, [this]);\n\t},\n\tconvertTicksToLabels: function() {\n\t\tvar me = this;\n\t\t// Convert ticks to strings\n\t\tvar tickOpts = me.options.ticks;\n\t\tme.ticks = me.ticks.map(tickOpts.userCallback || tickOpts.callback, this);\n\t},\n\tafterTickToLabelConversion: function() {\n\t\thelpers.callback(this.options.afterTickToLabelConversion, [this]);\n\t},\n\n\t//\n\n\tbeforeCalculateTickRotation: function() {\n\t\thelpers.callback(this.options.beforeCalculateTickRotation, [this]);\n\t},\n\tcalculateTickRotation: function() {\n\t\tvar me = this;\n\t\tvar context = me.ctx;\n\t\tvar tickOpts = me.options.ticks;\n\t\tvar labels = labelsFromTicks(me._ticks);\n\n\t\t// Get the width of each grid by calculating the difference\n\t\t// between x offsets between 0 and 1.\n\t\tvar tickFont = parseFontOptions(tickOpts);\n\t\tcontext.font = tickFont.font;\n\n\t\tvar labelRotation = tickOpts.minRotation || 0;\n\n\t\tif (labels.length && me.options.display && me.isHorizontal()) {\n\t\t\tvar originalLabelWidth = helpers.longestText(context, tickFont.font, labels, me.longestTextCache);\n\t\t\tvar labelWidth = originalLabelWidth;\n\t\t\tvar cosRotation, sinRotation;\n\n\t\t\t// Allow 3 pixels x2 padding either side for label readability\n\t\t\tvar tickWidth = me.getPixelForTick(1) - me.getPixelForTick(0) - 6;\n\n\t\t\t// Max label rotation can be set or default to 90 - also act as a loop counter\n\t\t\twhile (labelWidth > tickWidth && labelRotation < tickOpts.maxRotation) {\n\t\t\t\tvar angleRadians = helpers.toRadians(labelRotation);\n\t\t\t\tcosRotation = Math.cos(angleRadians);\n\t\t\t\tsinRotation = Math.sin(angleRadians);\n\n\t\t\t\tif (sinRotation * originalLabelWidth > me.maxHeight) {\n\t\t\t\t\t// go back one step\n\t\t\t\t\tlabelRotation--;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t\tlabelRotation++;\n\t\t\t\tlabelWidth = cosRotation * originalLabelWidth;\n\t\t\t}\n\t\t}\n\n\t\tme.labelRotation = labelRotation;\n\t},\n\tafterCalculateTickRotation: function() {\n\t\thelpers.callback(this.options.afterCalculateTickRotation, [this]);\n\t},\n\n\t//\n\n\tbeforeFit: function() {\n\t\thelpers.callback(this.options.beforeFit, [this]);\n\t},\n\tfit: function() {\n\t\tvar me = this;\n\t\t// Reset\n\t\tvar minSize = me.minSize = {\n\t\t\twidth: 0,\n\t\t\theight: 0\n\t\t};\n\n\t\tvar labels = labelsFromTicks(me._ticks);\n\n\t\tvar opts = me.options;\n\t\tvar tickOpts = opts.ticks;\n\t\tvar scaleLabelOpts = opts.scaleLabel;\n\t\tvar gridLineOpts = opts.gridLines;\n\t\tvar display = opts.display;\n\t\tvar isHorizontal = me.isHorizontal();\n\n\t\tvar tickFont = parseFontOptions(tickOpts);\n\t\tvar tickMarkLength = opts.gridLines.tickMarkLength;\n\n\t\t// Width\n\t\tif (isHorizontal) {\n\t\t\t// subtract the margins to line up with the chartArea if we are a full width scale\n\t\t\tminSize.width = me.isFullWidth() ? me.maxWidth - me.margins.left - me.margins.right : me.maxWidth;\n\t\t} else {\n\t\t\tminSize.width = display && gridLineOpts.drawTicks ? tickMarkLength : 0;\n\t\t}\n\n\t\t// height\n\t\tif (isHorizontal) {\n\t\t\tminSize.height = display && gridLineOpts.drawTicks ? tickMarkLength : 0;\n\t\t} else {\n\t\t\tminSize.height = me.maxHeight; // fill all the height\n\t\t}\n\n\t\t// Are we showing a title for the scale?\n\t\tif (scaleLabelOpts.display && display) {\n\t\t\tvar scaleLabelLineHeight = parseLineHeight(scaleLabelOpts);\n\t\t\tvar scaleLabelPadding = helpers.options.toPadding(scaleLabelOpts.padding);\n\t\t\tvar deltaHeight = scaleLabelLineHeight + scaleLabelPadding.height;\n\n\t\t\tif (isHorizontal) {\n\t\t\t\tminSize.height += deltaHeight;\n\t\t\t} else {\n\t\t\t\tminSize.width += deltaHeight;\n\t\t\t}\n\t\t}\n\n\t\t// Don't bother fitting the ticks if we are not showing them\n\t\tif (tickOpts.display && display) {\n\t\t\tvar largestTextWidth = helpers.longestText(me.ctx, tickFont.font, labels, me.longestTextCache);\n\t\t\tvar tallestLabelHeightInLines = helpers.numberOfLabelLines(labels);\n\t\t\tvar lineSpace = tickFont.size * 0.5;\n\t\t\tvar tickPadding = me.options.ticks.padding;\n\n\t\t\tif (isHorizontal) {\n\t\t\t\t// A horizontal axis is more constrained by the height.\n\t\t\t\tme.longestLabelWidth = largestTextWidth;\n\n\t\t\t\tvar angleRadians = helpers.toRadians(me.labelRotation);\n\t\t\t\tvar cosRotation = Math.cos(angleRadians);\n\t\t\t\tvar sinRotation = Math.sin(angleRadians);\n\n\t\t\t\t// TODO - improve this calculation\n\t\t\t\tvar labelHeight = (sinRotation * largestTextWidth)\n\t\t\t\t\t+ (tickFont.size * tallestLabelHeightInLines)\n\t\t\t\t\t+ (lineSpace * (tallestLabelHeightInLines - 1))\n\t\t\t\t\t+ lineSpace; // padding\n\n\t\t\t\tminSize.height = Math.min(me.maxHeight, minSize.height + labelHeight + tickPadding);\n\n\t\t\t\tme.ctx.font = tickFont.font;\n\t\t\t\tvar firstLabelWidth = computeTextSize(me.ctx, labels[0], tickFont.font);\n\t\t\t\tvar lastLabelWidth = computeTextSize(me.ctx, labels[labels.length - 1], tickFont.font);\n\n\t\t\t\t// Ensure that our ticks are always inside the canvas. When rotated, ticks are right aligned\n\t\t\t\t// which means that the right padding is dominated by the font height\n\t\t\t\tif (me.labelRotation !== 0) {\n\t\t\t\t\tme.paddingLeft = opts.position === 'bottom' ? (cosRotation * firstLabelWidth) + 3 : (cosRotation * lineSpace) + 3; // add 3 px to move away from canvas edges\n\t\t\t\t\tme.paddingRight = opts.position === 'bottom' ? (cosRotation * lineSpace) + 3 : (cosRotation * lastLabelWidth) + 3;\n\t\t\t\t} else {\n\t\t\t\t\tme.paddingLeft = firstLabelWidth / 2 + 3; // add 3 px to move away from canvas edges\n\t\t\t\t\tme.paddingRight = lastLabelWidth / 2 + 3;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t// A vertical axis is more constrained by the width. Labels are the\n\t\t\t\t// dominant factor here, so get that length first and account for padding\n\t\t\t\tif (tickOpts.mirror) {\n\t\t\t\t\tlargestTextWidth = 0;\n\t\t\t\t} else {\n\t\t\t\t\t// use lineSpace for consistency with horizontal axis\n\t\t\t\t\t// tickPadding is not implemented for horizontal\n\t\t\t\t\tlargestTextWidth += tickPadding + lineSpace;\n\t\t\t\t}\n\n\t\t\t\tminSize.width = Math.min(me.maxWidth, minSize.width + largestTextWidth);\n\n\t\t\t\tme.paddingTop = tickFont.size / 2;\n\t\t\t\tme.paddingBottom = tickFont.size / 2;\n\t\t\t}\n\t\t}\n\n\t\tme.handleMargins();\n\n\t\tme.width = minSize.width;\n\t\tme.height = minSize.height;\n\t},\n\n\t/**\n\t * Handle margins and padding interactions\n\t * @private\n\t */\n\thandleMargins: function() {\n\t\tvar me = this;\n\t\tif (me.margins) {\n\t\t\tme.paddingLeft = Math.max(me.paddingLeft - me.margins.left, 0);\n\t\t\tme.paddingTop = Math.max(me.paddingTop - me.margins.top, 0);\n\t\t\tme.paddingRight = Math.max(me.paddingRight - me.margins.right, 0);\n\t\t\tme.paddingBottom = Math.max(me.paddingBottom - me.margins.bottom, 0);\n\t\t}\n\t},\n\n\tafterFit: function() {\n\t\thelpers.callback(this.options.afterFit, [this]);\n\t},\n\n\t// Shared Methods\n\tisHorizontal: function() {\n\t\treturn this.options.position === 'top' || this.options.position === 'bottom';\n\t},\n\tisFullWidth: function() {\n\t\treturn (this.options.fullWidth);\n\t},\n\n\t// Get the correct value. NaN bad inputs, If the value type is object get the x or y based on whether we are horizontal or not\n\tgetRightValue: function(rawValue) {\n\t\t// Null and undefined values first\n\t\tif (helpers.isNullOrUndef(rawValue)) {\n\t\t\treturn NaN;\n\t\t}\n\t\t// isNaN(object) returns true, so make sure NaN is checking for a number; Discard Infinite values\n\t\tif (typeof rawValue === 'number' && !isFinite(rawValue)) {\n\t\t\treturn NaN;\n\t\t}\n\t\t// If it is in fact an object, dive in one more level\n\t\tif (rawValue) {\n\t\t\tif (this.isHorizontal()) {\n\t\t\t\tif (rawValue.x !== undefined) {\n\t\t\t\t\treturn this.getRightValue(rawValue.x);\n\t\t\t\t}\n\t\t\t} else if (rawValue.y !== undefined) {\n\t\t\t\treturn this.getRightValue(rawValue.y);\n\t\t\t}\n\t\t}\n\n\t\t// Value is good, return it\n\t\treturn rawValue;\n\t},\n\n\t/**\n\t * Used to get the value to display in the tooltip for the data at the given index\n\t * @param index\n\t * @param datasetIndex\n\t */\n\tgetLabelForIndex: helpers.noop,\n\n\t/**\n\t * Returns the location of the given data point. Value can either be an index or a numerical value\n\t * The coordinate (0, 0) is at the upper-left corner of the canvas\n\t * @param value\n\t * @param index\n\t * @param datasetIndex\n\t */\n\tgetPixelForValue: helpers.noop,\n\n\t/**\n\t * Used to get the data value from a given pixel. This is the inverse of getPixelForValue\n\t * The coordinate (0, 0) is at the upper-left corner of the canvas\n\t * @param pixel\n\t */\n\tgetValueForPixel: helpers.noop,\n\n\t/**\n\t * Returns the location of the tick at the given index\n\t * The coordinate (0, 0) is at the upper-left corner of the canvas\n\t */\n\tgetPixelForTick: function(index) {\n\t\tvar me = this;\n\t\tvar offset = me.options.offset;\n\t\tif (me.isHorizontal()) {\n\t\t\tvar innerWidth = me.width - (me.paddingLeft + me.paddingRight);\n\t\t\tvar tickWidth = innerWidth / Math.max((me._ticks.length - (offset ? 0 : 1)), 1);\n\t\t\tvar pixel = (tickWidth * index) + me.paddingLeft;\n\n\t\t\tif (offset) {\n\t\t\t\tpixel += tickWidth / 2;\n\t\t\t}\n\n\t\t\tvar finalVal = me.left + Math.round(pixel);\n\t\t\tfinalVal += me.isFullWidth() ? me.margins.left : 0;\n\t\t\treturn finalVal;\n\t\t}\n\t\tvar innerHeight = me.height - (me.paddingTop + me.paddingBottom);\n\t\treturn me.top + (index * (innerHeight / (me._ticks.length - 1)));\n\t},\n\n\t/**\n\t * Utility for getting the pixel location of a percentage of scale\n\t * The coordinate (0, 0) is at the upper-left corner of the canvas\n\t */\n\tgetPixelForDecimal: function(decimal) {\n\t\tvar me = this;\n\t\tif (me.isHorizontal()) {\n\t\t\tvar innerWidth = me.width - (me.paddingLeft + me.paddingRight);\n\t\t\tvar valueOffset = (innerWidth * decimal) + me.paddingLeft;\n\n\t\t\tvar finalVal = me.left + Math.round(valueOffset);\n\t\t\tfinalVal += me.isFullWidth() ? me.margins.left : 0;\n\t\t\treturn finalVal;\n\t\t}\n\t\treturn me.top + (decimal * me.height);\n\t},\n\n\t/**\n\t * Returns the pixel for the minimum chart value\n\t * The coordinate (0, 0) is at the upper-left corner of the canvas\n\t */\n\tgetBasePixel: function() {\n\t\treturn this.getPixelForValue(this.getBaseValue());\n\t},\n\n\tgetBaseValue: function() {\n\t\tvar me = this;\n\t\tvar min = me.min;\n\t\tvar max = me.max;\n\n\t\treturn me.beginAtZero ? 0 :\n\t\t\tmin < 0 && max < 0 ? max :\n\t\t\tmin > 0 && max > 0 ? min :\n\t\t\t0;\n\t},\n\n\t/**\n\t * Returns a subset of ticks to be plotted to avoid overlapping labels.\n\t * @private\n\t */\n\t_autoSkip: function(ticks) {\n\t\tvar skipRatio;\n\t\tvar me = this;\n\t\tvar isHorizontal = me.isHorizontal();\n\t\tvar optionTicks = me.options.ticks.minor;\n\t\tvar tickCount = ticks.length;\n\t\tvar labelRotationRadians = helpers.toRadians(me.labelRotation);\n\t\tvar cosRotation = Math.cos(labelRotationRadians);\n\t\tvar longestRotatedLabel = me.longestLabelWidth * cosRotation;\n\t\tvar result = [];\n\t\tvar i, tick, shouldSkip;\n\n\t\t// figure out the maximum number of gridlines to show\n\t\tvar maxTicks;\n\t\tif (optionTicks.maxTicksLimit) {\n\t\t\tmaxTicks = optionTicks.maxTicksLimit;\n\t\t}\n\n\t\tif (isHorizontal) {\n\t\t\tskipRatio = false;\n\n\t\t\tif ((longestRotatedLabel + optionTicks.autoSkipPadding) * tickCount > (me.width - (me.paddingLeft + me.paddingRight))) {\n\t\t\t\tskipRatio = 1 + Math.floor(((longestRotatedLabel + optionTicks.autoSkipPadding) * tickCount) / (me.width - (me.paddingLeft + me.paddingRight)));\n\t\t\t}\n\n\t\t\t// if they defined a max number of optionTicks,\n\t\t\t// increase skipRatio until that number is met\n\t\t\tif (maxTicks && tickCount > maxTicks) {\n\t\t\t\tskipRatio = Math.max(skipRatio, Math.floor(tickCount / maxTicks));\n\t\t\t}\n\t\t}\n\n\t\tfor (i = 0; i < tickCount; i++) {\n\t\t\ttick = ticks[i];\n\n\t\t\t// Since we always show the last tick,we need may need to hide the last shown one before\n\t\t\tshouldSkip = (skipRatio > 1 && i % skipRatio > 0) || (i % skipRatio === 0 && i + skipRatio >= tickCount);\n\t\t\tif (shouldSkip && i !== tickCount - 1) {\n\t\t\t\t// leave tick in place but make sure it's not displayed (#4635)\n\t\t\t\tdelete tick.label;\n\t\t\t}\n\t\t\tresult.push(tick);\n\t\t}\n\t\treturn result;\n\t},\n\n\t// Actually draw the scale on the canvas\n\t// @param {rectangle} chartArea : the area of the chart to draw full grid lines on\n\tdraw: function(chartArea) {\n\t\tvar me = this;\n\t\tvar options = me.options;\n\t\tif (!options.display) {\n\t\t\treturn;\n\t\t}\n\n\t\tvar context = me.ctx;\n\t\tvar globalDefaults = defaults.global;\n\t\tvar optionTicks = options.ticks.minor;\n\t\tvar optionMajorTicks = options.ticks.major || optionTicks;\n\t\tvar gridLines = options.gridLines;\n\t\tvar scaleLabel = options.scaleLabel;\n\n\t\tvar isRotated = me.labelRotation !== 0;\n\t\tvar isHorizontal = me.isHorizontal();\n\n\t\tvar ticks = optionTicks.autoSkip ? me._autoSkip(me.getTicks()) : me.getTicks();\n\t\tvar tickFontColor = helpers.valueOrDefault(optionTicks.fontColor, globalDefaults.defaultFontColor);\n\t\tvar tickFont = parseFontOptions(optionTicks);\n\t\tvar majorTickFontColor = helpers.valueOrDefault(optionMajorTicks.fontColor, globalDefaults.defaultFontColor);\n\t\tvar majorTickFont = parseFontOptions(optionMajorTicks);\n\n\t\tvar tl = gridLines.drawTicks ? gridLines.tickMarkLength : 0;\n\n\t\tvar scaleLabelFontColor = helpers.valueOrDefault(scaleLabel.fontColor, globalDefaults.defaultFontColor);\n\t\tvar scaleLabelFont = parseFontOptions(scaleLabel);\n\t\tvar scaleLabelPadding = helpers.options.toPadding(scaleLabel.padding);\n\t\tvar labelRotationRadians = helpers.toRadians(me.labelRotation);\n\n\t\tvar itemsToDraw = [];\n\n\t\tvar axisWidth = me.options.gridLines.lineWidth;\n\t\tvar xTickStart = options.position === 'right' ? me.left : me.right - axisWidth - tl;\n\t\tvar xTickEnd = options.position === 'right' ? me.left + tl : me.right;\n\t\tvar yTickStart = options.position === 'bottom' ? me.top + axisWidth : me.bottom - tl - axisWidth;\n\t\tvar yTickEnd = options.position === 'bottom' ? me.top + axisWidth + tl : me.bottom + axisWidth;\n\n\t\thelpers.each(ticks, function(tick, index) {\n\t\t\t// autoskipper skipped this tick (#4635)\n\t\t\tif (helpers.isNullOrUndef(tick.label)) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tvar label = tick.label;\n\t\t\tvar lineWidth, lineColor, borderDash, borderDashOffset;\n\t\t\tif (index === me.zeroLineIndex && options.offset === gridLines.offsetGridLines) {\n\t\t\t\t// Draw the first index specially\n\t\t\t\tlineWidth = gridLines.zeroLineWidth;\n\t\t\t\tlineColor = gridLines.zeroLineColor;\n\t\t\t\tborderDash = gridLines.zeroLineBorderDash;\n\t\t\t\tborderDashOffset = gridLines.zeroLineBorderDashOffset;\n\t\t\t} else {\n\t\t\t\tlineWidth = helpers.valueAtIndexOrDefault(gridLines.lineWidth, index);\n\t\t\t\tlineColor = helpers.valueAtIndexOrDefault(gridLines.color, index);\n\t\t\t\tborderDash = helpers.valueOrDefault(gridLines.borderDash, globalDefaults.borderDash);\n\t\t\t\tborderDashOffset = helpers.valueOrDefault(gridLines.borderDashOffset, globalDefaults.borderDashOffset);\n\t\t\t}\n\n\t\t\t// Common properties\n\t\t\tvar tx1, ty1, tx2, ty2, x1, y1, x2, y2, labelX, labelY;\n\t\t\tvar textAlign = 'middle';\n\t\t\tvar textBaseline = 'middle';\n\t\t\tvar tickPadding = optionTicks.padding;\n\n\t\t\tif (isHorizontal) {\n\t\t\t\tvar labelYOffset = tl + tickPadding;\n\n\t\t\t\tif (options.position === 'bottom') {\n\t\t\t\t\t// bottom\n\t\t\t\t\ttextBaseline = !isRotated ? 'top' : 'middle';\n\t\t\t\t\ttextAlign = !isRotated ? 'center' : 'right';\n\t\t\t\t\tlabelY = me.top + labelYOffset;\n\t\t\t\t} else {\n\t\t\t\t\t// top\n\t\t\t\t\ttextBaseline = !isRotated ? 'bottom' : 'middle';\n\t\t\t\t\ttextAlign = !isRotated ? 'center' : 'left';\n\t\t\t\t\tlabelY = me.bottom - labelYOffset;\n\t\t\t\t}\n\n\t\t\t\tvar xLineValue = getLineValue(me, index, gridLines.offsetGridLines && ticks.length > 1);\n\t\t\t\tif (xLineValue < me.left) {\n\t\t\t\t\tlineColor = 'rgba(0,0,0,0)';\n\t\t\t\t}\n\t\t\t\txLineValue += helpers.aliasPixel(lineWidth);\n\n\t\t\t\tlabelX = me.getPixelForTick(index) + optionTicks.labelOffset; // x values for optionTicks (need to consider offsetLabel option)\n\n\t\t\t\ttx1 = tx2 = x1 = x2 = xLineValue;\n\t\t\t\tty1 = yTickStart;\n\t\t\t\tty2 = yTickEnd;\n\t\t\t\ty1 = chartArea.top;\n\t\t\t\ty2 = chartArea.bottom + axisWidth;\n\t\t\t} else {\n\t\t\t\tvar isLeft = options.position === 'left';\n\t\t\t\tvar labelXOffset;\n\n\t\t\t\tif (optionTicks.mirror) {\n\t\t\t\t\ttextAlign = isLeft ? 'left' : 'right';\n\t\t\t\t\tlabelXOffset = tickPadding;\n\t\t\t\t} else {\n\t\t\t\t\ttextAlign = isLeft ? 'right' : 'left';\n\t\t\t\t\tlabelXOffset = tl + tickPadding;\n\t\t\t\t}\n\n\t\t\t\tlabelX = isLeft ? me.right - labelXOffset : me.left + labelXOffset;\n\n\t\t\t\tvar yLineValue = getLineValue(me, index, gridLines.offsetGridLines && ticks.length > 1);\n\t\t\t\tif (yLineValue < me.top) {\n\t\t\t\t\tlineColor = 'rgba(0,0,0,0)';\n\t\t\t\t}\n\t\t\t\tyLineValue += helpers.aliasPixel(lineWidth);\n\n\t\t\t\tlabelY = me.getPixelForTick(index) + optionTicks.labelOffset;\n\n\t\t\t\ttx1 = xTickStart;\n\t\t\t\ttx2 = xTickEnd;\n\t\t\t\tx1 = chartArea.left;\n\t\t\t\tx2 = chartArea.right + axisWidth;\n\t\t\t\tty1 = ty2 = y1 = y2 = yLineValue;\n\t\t\t}\n\n\t\t\titemsToDraw.push({\n\t\t\t\ttx1: tx1,\n\t\t\t\tty1: ty1,\n\t\t\t\ttx2: tx2,\n\t\t\t\tty2: ty2,\n\t\t\t\tx1: x1,\n\t\t\t\ty1: y1,\n\t\t\t\tx2: x2,\n\t\t\t\ty2: y2,\n\t\t\t\tlabelX: labelX,\n\t\t\t\tlabelY: labelY,\n\t\t\t\tglWidth: lineWidth,\n\t\t\t\tglColor: lineColor,\n\t\t\t\tglBorderDash: borderDash,\n\t\t\t\tglBorderDashOffset: borderDashOffset,\n\t\t\t\trotation: -1 * labelRotationRadians,\n\t\t\t\tlabel: label,\n\t\t\t\tmajor: tick.major,\n\t\t\t\ttextBaseline: textBaseline,\n\t\t\t\ttextAlign: textAlign\n\t\t\t});\n\t\t});\n\n\t\t// Draw all of the tick labels, tick marks, and grid lines at the correct places\n\t\thelpers.each(itemsToDraw, function(itemToDraw) {\n\t\t\tif (gridLines.display) {\n\t\t\t\tcontext.save();\n\t\t\t\tcontext.lineWidth = itemToDraw.glWidth;\n\t\t\t\tcontext.strokeStyle = itemToDraw.glColor;\n\t\t\t\tif (context.setLineDash) {\n\t\t\t\t\tcontext.setLineDash(itemToDraw.glBorderDash);\n\t\t\t\t\tcontext.lineDashOffset = itemToDraw.glBorderDashOffset;\n\t\t\t\t}\n\n\t\t\t\tcontext.beginPath();\n\n\t\t\t\tif (gridLines.drawTicks) {\n\t\t\t\t\tcontext.moveTo(itemToDraw.tx1, itemToDraw.ty1);\n\t\t\t\t\tcontext.lineTo(itemToDraw.tx2, itemToDraw.ty2);\n\t\t\t\t}\n\n\t\t\t\tif (gridLines.drawOnChartArea) {\n\t\t\t\t\tcontext.moveTo(itemToDraw.x1, itemToDraw.y1);\n\t\t\t\t\tcontext.lineTo(itemToDraw.x2, itemToDraw.y2);\n\t\t\t\t}\n\n\t\t\t\tcontext.stroke();\n\t\t\t\tcontext.restore();\n\t\t\t}\n\n\t\t\tif (optionTicks.display) {\n\t\t\t\t// Make sure we draw text in the correct color and font\n\t\t\t\tcontext.save();\n\t\t\t\tcontext.translate(itemToDraw.labelX, itemToDraw.labelY);\n\t\t\t\tcontext.rotate(itemToDraw.rotation);\n\t\t\t\tcontext.font = itemToDraw.major ? majorTickFont.font : tickFont.font;\n\t\t\t\tcontext.fillStyle = itemToDraw.major ? majorTickFontColor : tickFontColor;\n\t\t\t\tcontext.textBaseline = itemToDraw.textBaseline;\n\t\t\t\tcontext.textAlign = itemToDraw.textAlign;\n\n\t\t\t\tvar label = itemToDraw.label;\n\t\t\t\tif (helpers.isArray(label)) {\n\t\t\t\t\tvar lineCount = label.length;\n\t\t\t\t\tvar lineHeight = tickFont.size * 1.5;\n\t\t\t\t\tvar y = me.isHorizontal() ? 0 : -lineHeight * (lineCount - 1) / 2;\n\n\t\t\t\t\tfor (var i = 0; i < lineCount; ++i) {\n\t\t\t\t\t\t// We just make sure the multiline element is a string here..\n\t\t\t\t\t\tcontext.fillText('' + label[i], 0, y);\n\t\t\t\t\t\t// apply same lineSpacing as calculated @ L#320\n\t\t\t\t\t\ty += lineHeight;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tcontext.fillText(label, 0, 0);\n\t\t\t\t}\n\t\t\t\tcontext.restore();\n\t\t\t}\n\t\t});\n\n\t\tif (scaleLabel.display) {\n\t\t\t// Draw the scale label\n\t\t\tvar scaleLabelX;\n\t\t\tvar scaleLabelY;\n\t\t\tvar rotation = 0;\n\t\t\tvar halfLineHeight = parseLineHeight(scaleLabel) / 2;\n\n\t\t\tif (isHorizontal) {\n\t\t\t\tscaleLabelX = me.left + ((me.right - me.left) / 2); // midpoint of the width\n\t\t\t\tscaleLabelY = options.position === 'bottom'\n\t\t\t\t\t? me.bottom - halfLineHeight - scaleLabelPadding.bottom\n\t\t\t\t\t: me.top + halfLineHeight + scaleLabelPadding.top;\n\t\t\t} else {\n\t\t\t\tvar isLeft = options.position === 'left';\n\t\t\t\tscaleLabelX = isLeft\n\t\t\t\t\t? me.left + halfLineHeight + scaleLabelPadding.top\n\t\t\t\t\t: me.right - halfLineHeight - scaleLabelPadding.top;\n\t\t\t\tscaleLabelY = me.top + ((me.bottom - me.top) / 2);\n\t\t\t\trotation = isLeft ? -0.5 * Math.PI : 0.5 * Math.PI;\n\t\t\t}\n\n\t\t\tcontext.save();\n\t\t\tcontext.translate(scaleLabelX, scaleLabelY);\n\t\t\tcontext.rotate(rotation);\n\t\t\tcontext.textAlign = 'center';\n\t\t\tcontext.textBaseline = 'middle';\n\t\t\tcontext.fillStyle = scaleLabelFontColor; // render in correct colour\n\t\t\tcontext.font = scaleLabelFont.font;\n\t\t\tcontext.fillText(scaleLabel.labelString, 0, 0);\n\t\t\tcontext.restore();\n\t\t}\n\n\t\tif (gridLines.drawBorder) {\n\t\t\t// Draw the line at the edge of the axis\n\t\t\tcontext.lineWidth = helpers.valueAtIndexOrDefault(gridLines.lineWidth, 0);\n\t\t\tcontext.strokeStyle = helpers.valueAtIndexOrDefault(gridLines.color, 0);\n\t\t\tvar x1 = me.left;\n\t\t\tvar x2 = me.right + axisWidth;\n\t\t\tvar y1 = me.top;\n\t\t\tvar y2 = me.bottom + axisWidth;\n\n\t\t\tvar aliasPixel = helpers.aliasPixel(context.lineWidth);\n\t\t\tif (isHorizontal) {\n\t\t\t\ty1 = y2 = options.position === 'top' ? me.bottom : me.top;\n\t\t\t\ty1 += aliasPixel;\n\t\t\t\ty2 += aliasPixel;\n\t\t\t} else {\n\t\t\t\tx1 = x2 = options.position === 'left' ? me.right : me.left;\n\t\t\t\tx1 += aliasPixel;\n\t\t\t\tx2 += aliasPixel;\n\t\t\t}\n\n\t\t\tcontext.beginPath();\n\t\t\tcontext.moveTo(x1, y1);\n\t\t\tcontext.lineTo(x2, y2);\n\t\t\tcontext.stroke();\n\t\t}\n\t}\n});\n","/* MIT license */\nvar colorNames = require('color-name');\n\nmodule.exports = {\n   getRgba: getRgba,\n   getHsla: getHsla,\n   getRgb: getRgb,\n   getHsl: getHsl,\n   getHwb: getHwb,\n   getAlpha: getAlpha,\n\n   hexString: hexString,\n   rgbString: rgbString,\n   rgbaString: rgbaString,\n   percentString: percentString,\n   percentaString: percentaString,\n   hslString: hslString,\n   hslaString: hslaString,\n   hwbString: hwbString,\n   keyword: keyword\n}\n\nfunction getRgba(string) {\n   if (!string) {\n      return;\n   }\n   var abbr =  /^#([a-fA-F0-9]{3})$/i,\n       hex =  /^#([a-fA-F0-9]{6})$/i,\n       rgba = /^rgba?\\(\\s*([+-]?\\d+)\\s*,\\s*([+-]?\\d+)\\s*,\\s*([+-]?\\d+)\\s*(?:,\\s*([+-]?[\\d\\.]+)\\s*)?\\)$/i,\n       per = /^rgba?\\(\\s*([+-]?[\\d\\.]+)\\%\\s*,\\s*([+-]?[\\d\\.]+)\\%\\s*,\\s*([+-]?[\\d\\.]+)\\%\\s*(?:,\\s*([+-]?[\\d\\.]+)\\s*)?\\)$/i,\n       keyword = /(\\w+)/;\n\n   var rgb = [0, 0, 0],\n       a = 1,\n       match = string.match(abbr);\n   if (match) {\n      match = match[1];\n      for (var i = 0; i < rgb.length; i++) {\n         rgb[i] = parseInt(match[i] + match[i], 16);\n      }\n   }\n   else if (match = string.match(hex)) {\n      match = match[1];\n      for (var i = 0; i < rgb.length; i++) {\n         rgb[i] = parseInt(match.slice(i * 2, i * 2 + 2), 16);\n      }\n   }\n   else if (match = string.match(rgba)) {\n      for (var i = 0; i < rgb.length; i++) {\n         rgb[i] = parseInt(match[i + 1]);\n      }\n      a = parseFloat(match[4]);\n   }\n   else if (match = string.match(per)) {\n      for (var i = 0; i < rgb.length; i++) {\n         rgb[i] = Math.round(parseFloat(match[i + 1]) * 2.55);\n      }\n      a = parseFloat(match[4]);\n   }\n   else if (match = string.match(keyword)) {\n      if (match[1] == \"transparent\") {\n         return [0, 0, 0, 0];\n      }\n      rgb = colorNames[match[1]];\n      if (!rgb) {\n         return;\n      }\n   }\n\n   for (var i = 0; i < rgb.length; i++) {\n      rgb[i] = scale(rgb[i], 0, 255);\n   }\n   if (!a && a != 0) {\n      a = 1;\n   }\n   else {\n      a = scale(a, 0, 1);\n   }\n   rgb[3] = a;\n   return rgb;\n}\n\nfunction getHsla(string) {\n   if (!string) {\n      return;\n   }\n   var hsl = /^hsla?\\(\\s*([+-]?\\d+)(?:deg)?\\s*,\\s*([+-]?[\\d\\.]+)%\\s*,\\s*([+-]?[\\d\\.]+)%\\s*(?:,\\s*([+-]?[\\d\\.]+)\\s*)?\\)/;\n   var match = string.match(hsl);\n   if (match) {\n      var alpha = parseFloat(match[4]);\n      var h = scale(parseInt(match[1]), 0, 360),\n          s = scale(parseFloat(match[2]), 0, 100),\n          l = scale(parseFloat(match[3]), 0, 100),\n          a = scale(isNaN(alpha) ? 1 : alpha, 0, 1);\n      return [h, s, l, a];\n   }\n}\n\nfunction getHwb(string) {\n   if (!string) {\n      return;\n   }\n   var hwb = /^hwb\\(\\s*([+-]?\\d+)(?:deg)?\\s*,\\s*([+-]?[\\d\\.]+)%\\s*,\\s*([+-]?[\\d\\.]+)%\\s*(?:,\\s*([+-]?[\\d\\.]+)\\s*)?\\)/;\n   var match = string.match(hwb);\n   if (match) {\n    var alpha = parseFloat(match[4]);\n      var h = scale(parseInt(match[1]), 0, 360),\n          w = scale(parseFloat(match[2]), 0, 100),\n          b = scale(parseFloat(match[3]), 0, 100),\n          a = scale(isNaN(alpha) ? 1 : alpha, 0, 1);\n      return [h, w, b, a];\n   }\n}\n\nfunction getRgb(string) {\n   var rgba = getRgba(string);\n   return rgba && rgba.slice(0, 3);\n}\n\nfunction getHsl(string) {\n  var hsla = getHsla(string);\n  return hsla && hsla.slice(0, 3);\n}\n\nfunction getAlpha(string) {\n   var vals = getRgba(string);\n   if (vals) {\n      return vals[3];\n   }\n   else if (vals = getHsla(string)) {\n      return vals[3];\n   }\n   else if (vals = getHwb(string)) {\n      return vals[3];\n   }\n}\n\n// generators\nfunction hexString(rgb) {\n   return \"#\" + hexDouble(rgb[0]) + hexDouble(rgb[1])\n              + hexDouble(rgb[2]);\n}\n\nfunction rgbString(rgba, alpha) {\n   if (alpha < 1 || (rgba[3] && rgba[3] < 1)) {\n      return rgbaString(rgba, alpha);\n   }\n   return \"rgb(\" + rgba[0] + \", \" + rgba[1] + \", \" + rgba[2] + \")\";\n}\n\nfunction rgbaString(rgba, alpha) {\n   if (alpha === undefined) {\n      alpha = (rgba[3] !== undefined ? rgba[3] : 1);\n   }\n   return \"rgba(\" + rgba[0] + \", \" + rgba[1] + \", \" + rgba[2]\n           + \", \" + alpha + \")\";\n}\n\nfunction percentString(rgba, alpha) {\n   if (alpha < 1 || (rgba[3] && rgba[3] < 1)) {\n      return percentaString(rgba, alpha);\n   }\n   var r = Math.round(rgba[0]/255 * 100),\n       g = Math.round(rgba[1]/255 * 100),\n       b = Math.round(rgba[2]/255 * 100);\n\n   return \"rgb(\" + r + \"%, \" + g + \"%, \" + b + \"%)\";\n}\n\nfunction percentaString(rgba, alpha) {\n   var r = Math.round(rgba[0]/255 * 100),\n       g = Math.round(rgba[1]/255 * 100),\n       b = Math.round(rgba[2]/255 * 100);\n   return \"rgba(\" + r + \"%, \" + g + \"%, \" + b + \"%, \" + (alpha || rgba[3] || 1) + \")\";\n}\n\nfunction hslString(hsla, alpha) {\n   if (alpha < 1 || (hsla[3] && hsla[3] < 1)) {\n      return hslaString(hsla, alpha);\n   }\n   return \"hsl(\" + hsla[0] + \", \" + hsla[1] + \"%, \" + hsla[2] + \"%)\";\n}\n\nfunction hslaString(hsla, alpha) {\n   if (alpha === undefined) {\n      alpha = (hsla[3] !== undefined ? hsla[3] : 1);\n   }\n   return \"hsla(\" + hsla[0] + \", \" + hsla[1] + \"%, \" + hsla[2] + \"%, \"\n           + alpha + \")\";\n}\n\n// hwb is a bit different than rgb(a) & hsl(a) since there is no alpha specific syntax\n// (hwb have alpha optional & 1 is default value)\nfunction hwbString(hwb, alpha) {\n   if (alpha === undefined) {\n      alpha = (hwb[3] !== undefined ? hwb[3] : 1);\n   }\n   return \"hwb(\" + hwb[0] + \", \" + hwb[1] + \"%, \" + hwb[2] + \"%\"\n           + (alpha !== undefined && alpha !== 1 ? \", \" + alpha : \"\") + \")\";\n}\n\nfunction keyword(rgb) {\n  return reverseNames[rgb.slice(0, 3)];\n}\n\n// helpers\nfunction scale(num, min, max) {\n   return Math.min(Math.max(min, num), max);\n}\n\nfunction hexDouble(num) {\n  var str = num.toString(16).toUpperCase();\n  return (str.length < 2) ? \"0\" + str : str;\n}\n\n\n//create a list of reverse color names\nvar reverseNames = {};\nfor (var name in colorNames) {\n   reverseNames[colorNames[name]] = name;\n}\n","/**\n * @namespace Chart\n */\nvar Chart = require('./core/core')();\n\nChart.helpers = require('./helpers/index');\n\n// @todo dispatch these helpers into appropriated helpers/helpers.* file and write unit tests!\nrequire('./core/core.helpers')(Chart);\n\nChart.Animation = require('./core/core.animation');\nChart.animationService = require('./core/core.animations');\nChart.defaults = require('./core/core.defaults');\nChart.Element = require('./core/core.element');\nChart.elements = require('./elements/index');\nChart.Interaction = require('./core/core.interaction');\nChart.layouts = require('./core/core.layouts');\nChart.platform = require('./platforms/platform');\nChart.plugins = require('./core/core.plugins');\nChart.Scale = require('./core/core.scale');\nChart.scaleService = require('./core/core.scaleService');\nChart.Ticks = require('./core/core.ticks');\nChart.Tooltip = require('./core/core.tooltip');\n\nrequire('./core/core.controller')(Chart);\nrequire('./core/core.datasetController')(Chart);\n\nrequire('./scales/scale.linearbase')(Chart);\nrequire('./scales/scale.category')(Chart);\nrequire('./scales/scale.linear')(Chart);\nrequire('./scales/scale.logarithmic')(Chart);\nrequire('./scales/scale.radialLinear')(Chart);\nrequire('./scales/scale.time')(Chart);\n\n// Controllers must be loaded after elements\n// See Chart.core.datasetController.dataElementType\nrequire('./controllers/controller.bar')(Chart);\nrequire('./controllers/controller.bubble')(Chart);\nrequire('./controllers/controller.doughnut')(Chart);\nrequire('./controllers/controller.line')(Chart);\nrequire('./controllers/controller.polarArea')(Chart);\nrequire('./controllers/controller.radar')(Chart);\nrequire('./controllers/controller.scatter')(Chart);\n\nrequire('./charts/Chart.Bar')(Chart);\nrequire('./charts/Chart.Bubble')(Chart);\nrequire('./charts/Chart.Doughnut')(Chart);\nrequire('./charts/Chart.Line')(Chart);\nrequire('./charts/Chart.PolarArea')(Chart);\nrequire('./charts/Chart.Radar')(Chart);\nrequire('./charts/Chart.Scatter')(Chart);\n\n// Loading built-in plugins\nvar plugins = require('./plugins');\nfor (var k in plugins) {\n\tif (plugins.hasOwnProperty(k)) {\n\t\tChart.plugins.register(plugins[k]);\n\t}\n}\n\nChart.platform.initialize();\n\nmodule.exports = Chart;\nif (typeof window !== 'undefined') {\n\twindow.Chart = Chart;\n}\n\n// DEPRECATIONS\n\n/**\n * Provided for backward compatibility, not available anymore\n * @namespace Chart.Legend\n * @deprecated since version 2.1.5\n * @todo remove at version 3\n * @private\n */\nChart.Legend = plugins.legend._element;\n\n/**\n * Provided for backward compatibility, not available anymore\n * @namespace Chart.Title\n * @deprecated since version 2.1.5\n * @todo remove at version 3\n * @private\n */\nChart.Title = plugins.title._element;\n\n/**\n * Provided for backward compatibility, use Chart.plugins instead\n * @namespace Chart.pluginService\n * @deprecated since version 2.1.5\n * @todo remove at version 3\n * @private\n */\nChart.pluginService = Chart.plugins;\n\n/**\n * Provided for backward compatibility, inheriting from Chart.PlugingBase has no\n * effect, instead simply create/register plugins via plain JavaScript objects.\n * @interface Chart.PluginBase\n * @deprecated since version 2.5.0\n * @todo remove at version 3\n * @private\n */\nChart.PluginBase = Chart.Element.extend({});\n\n/**\n * Provided for backward compatibility, use Chart.helpers.canvas instead.\n * @namespace Chart.canvasHelpers\n * @deprecated since version 2.6.0\n * @todo remove at version 3\n * @private\n */\nChart.canvasHelpers = Chart.helpers.canvas;\n\n/**\n * Provided for backward compatibility, use Chart.layouts instead.\n * @namespace Chart.layoutService\n * @deprecated since version 2.8.0\n * @todo remove at version 3\n * @private\n */\nChart.layoutService = Chart.layouts;\n","/* global window: false */\n/* global document: false */\n'use strict';\n\nvar color = require('chartjs-color');\nvar defaults = require('./core.defaults');\nvar helpers = require('../helpers/index');\nvar scaleService = require('../core/core.scaleService');\n\nmodule.exports = function() {\n\n\t// -- Basic js utility methods\n\n\thelpers.configMerge = function(/* objects ... */) {\n\t\treturn helpers.merge(helpers.clone(arguments[0]), [].slice.call(arguments, 1), {\n\t\t\tmerger: function(key, target, source, options) {\n\t\t\t\tvar tval = target[key] || {};\n\t\t\t\tvar sval = source[key];\n\n\t\t\t\tif (key === 'scales') {\n\t\t\t\t\t// scale config merging is complex. Add our own function here for that\n\t\t\t\t\ttarget[key] = helpers.scaleMerge(tval, sval);\n\t\t\t\t} else if (key === 'scale') {\n\t\t\t\t\t// used in polar area & radar charts since there is only one scale\n\t\t\t\t\ttarget[key] = helpers.merge(tval, [scaleService.getScaleDefaults(sval.type), sval]);\n\t\t\t\t} else {\n\t\t\t\t\thelpers._merger(key, target, source, options);\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t};\n\n\thelpers.scaleMerge = function(/* objects ... */) {\n\t\treturn helpers.merge(helpers.clone(arguments[0]), [].slice.call(arguments, 1), {\n\t\t\tmerger: function(key, target, source, options) {\n\t\t\t\tif (key === 'xAxes' || key === 'yAxes') {\n\t\t\t\t\tvar slen = source[key].length;\n\t\t\t\t\tvar i, type, scale;\n\n\t\t\t\t\tif (!target[key]) {\n\t\t\t\t\t\ttarget[key] = [];\n\t\t\t\t\t}\n\n\t\t\t\t\tfor (i = 0; i < slen; ++i) {\n\t\t\t\t\t\tscale = source[key][i];\n\t\t\t\t\t\ttype = helpers.valueOrDefault(scale.type, key === 'xAxes' ? 'category' : 'linear');\n\n\t\t\t\t\t\tif (i >= target[key].length) {\n\t\t\t\t\t\t\ttarget[key].push({});\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (!target[key][i].type || (scale.type && scale.type !== target[key][i].type)) {\n\t\t\t\t\t\t\t// new/untyped scale or type changed: let's apply the new defaults\n\t\t\t\t\t\t\t// then merge source scale to correctly overwrite the defaults.\n\t\t\t\t\t\t\thelpers.merge(target[key][i], [scaleService.getScaleDefaults(type), scale]);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t// scales type are the same\n\t\t\t\t\t\t\thelpers.merge(target[key][i], scale);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\thelpers._merger(key, target, source, options);\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t};\n\n\thelpers.where = function(collection, filterCallback) {\n\t\tif (helpers.isArray(collection) && Array.prototype.filter) {\n\t\t\treturn collection.filter(filterCallback);\n\t\t}\n\t\tvar filtered = [];\n\n\t\thelpers.each(collection, function(item) {\n\t\t\tif (filterCallback(item)) {\n\t\t\t\tfiltered.push(item);\n\t\t\t}\n\t\t});\n\n\t\treturn filtered;\n\t};\n\thelpers.findIndex = Array.prototype.findIndex ?\n\t\tfunction(array, callback, scope) {\n\t\t\treturn array.findIndex(callback, scope);\n\t\t} :\n\t\tfunction(array, callback, scope) {\n\t\t\tscope = scope === undefined ? array : scope;\n\t\t\tfor (var i = 0, ilen = array.length; i < ilen; ++i) {\n\t\t\t\tif (callback.call(scope, array[i], i, array)) {\n\t\t\t\t\treturn i;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn -1;\n\t\t};\n\thelpers.findNextWhere = function(arrayToSearch, filterCallback, startIndex) {\n\t\t// Default to start of the array\n\t\tif (helpers.isNullOrUndef(startIndex)) {\n\t\t\tstartIndex = -1;\n\t\t}\n\t\tfor (var i = startIndex + 1; i < arrayToSearch.length; i++) {\n\t\t\tvar currentItem = arrayToSearch[i];\n\t\t\tif (filterCallback(currentItem)) {\n\t\t\t\treturn currentItem;\n\t\t\t}\n\t\t}\n\t};\n\thelpers.findPreviousWhere = function(arrayToSearch, filterCallback, startIndex) {\n\t\t// Default to end of the array\n\t\tif (helpers.isNullOrUndef(startIndex)) {\n\t\t\tstartIndex = arrayToSearch.length;\n\t\t}\n\t\tfor (var i = startIndex - 1; i >= 0; i--) {\n\t\t\tvar currentItem = arrayToSearch[i];\n\t\t\tif (filterCallback(currentItem)) {\n\t\t\t\treturn currentItem;\n\t\t\t}\n\t\t}\n\t};\n\n\t// -- Math methods\n\thelpers.isNumber = function(n) {\n\t\treturn !isNaN(parseFloat(n)) && isFinite(n);\n\t};\n\thelpers.almostEquals = function(x, y, epsilon) {\n\t\treturn Math.abs(x - y) < epsilon;\n\t};\n\thelpers.almostWhole = function(x, epsilon) {\n\t\tvar rounded = Math.round(x);\n\t\treturn (((rounded - epsilon) < x) && ((rounded + epsilon) > x));\n\t};\n\thelpers.max = function(array) {\n\t\treturn array.reduce(function(max, value) {\n\t\t\tif (!isNaN(value)) {\n\t\t\t\treturn Math.max(max, value);\n\t\t\t}\n\t\t\treturn max;\n\t\t}, Number.NEGATIVE_INFINITY);\n\t};\n\thelpers.min = function(array) {\n\t\treturn array.reduce(function(min, value) {\n\t\t\tif (!isNaN(value)) {\n\t\t\t\treturn Math.min(min, value);\n\t\t\t}\n\t\t\treturn min;\n\t\t}, Number.POSITIVE_INFINITY);\n\t};\n\thelpers.sign = Math.sign ?\n\t\tfunction(x) {\n\t\t\treturn Math.sign(x);\n\t\t} :\n\t\tfunction(x) {\n\t\t\tx = +x; // convert to a number\n\t\t\tif (x === 0 || isNaN(x)) {\n\t\t\t\treturn x;\n\t\t\t}\n\t\t\treturn x > 0 ? 1 : -1;\n\t\t};\n\thelpers.log10 = Math.log10 ?\n\t\tfunction(x) {\n\t\t\treturn Math.log10(x);\n\t\t} :\n\t\tfunction(x) {\n\t\t\tvar exponent = Math.log(x) * Math.LOG10E; // Math.LOG10E = 1 / Math.LN10.\n\t\t\t// Check for whole powers of 10,\n\t\t\t// which due to floating point rounding error should be corrected.\n\t\t\tvar powerOf10 = Math.round(exponent);\n\t\t\tvar isPowerOf10 = x === Math.pow(10, powerOf10);\n\n\t\t\treturn isPowerOf10 ? powerOf10 : exponent;\n\t\t};\n\thelpers.toRadians = function(degrees) {\n\t\treturn degrees * (Math.PI / 180);\n\t};\n\thelpers.toDegrees = function(radians) {\n\t\treturn radians * (180 / Math.PI);\n\t};\n\t// Gets the angle from vertical upright to the point about a centre.\n\thelpers.getAngleFromPoint = function(centrePoint, anglePoint) {\n\t\tvar distanceFromXCenter = anglePoint.x - centrePoint.x;\n\t\tvar distanceFromYCenter = anglePoint.y - centrePoint.y;\n\t\tvar radialDistanceFromCenter = Math.sqrt(distanceFromXCenter * distanceFromXCenter + distanceFromYCenter * distanceFromYCenter);\n\n\t\tvar angle = Math.atan2(distanceFromYCenter, distanceFromXCenter);\n\n\t\tif (angle < (-0.5 * Math.PI)) {\n\t\t\tangle += 2.0 * Math.PI; // make sure the returned angle is in the range of (-PI/2, 3PI/2]\n\t\t}\n\n\t\treturn {\n\t\t\tangle: angle,\n\t\t\tdistance: radialDistanceFromCenter\n\t\t};\n\t};\n\thelpers.distanceBetweenPoints = function(pt1, pt2) {\n\t\treturn Math.sqrt(Math.pow(pt2.x - pt1.x, 2) + Math.pow(pt2.y - pt1.y, 2));\n\t};\n\thelpers.aliasPixel = function(pixelWidth) {\n\t\treturn (pixelWidth % 2 === 0) ? 0 : 0.5;\n\t};\n\thelpers.splineCurve = function(firstPoint, middlePoint, afterPoint, t) {\n\t\t// Props to Rob Spencer at scaled innovation for his post on splining between points\n\t\t// http://scaledinnovation.com/analytics/splines/aboutSplines.html\n\n\t\t// This function must also respect \"skipped\" points\n\n\t\tvar previous = firstPoint.skip ? middlePoint : firstPoint;\n\t\tvar current = middlePoint;\n\t\tvar next = afterPoint.skip ? middlePoint : afterPoint;\n\n\t\tvar d01 = Math.sqrt(Math.pow(current.x - previous.x, 2) + Math.pow(current.y - previous.y, 2));\n\t\tvar d12 = Math.sqrt(Math.pow(next.x - current.x, 2) + Math.pow(next.y - current.y, 2));\n\n\t\tvar s01 = d01 / (d01 + d12);\n\t\tvar s12 = d12 / (d01 + d12);\n\n\t\t// If all points are the same, s01 & s02 will be inf\n\t\ts01 = isNaN(s01) ? 0 : s01;\n\t\ts12 = isNaN(s12) ? 0 : s12;\n\n\t\tvar fa = t * s01; // scaling factor for triangle Ta\n\t\tvar fb = t * s12;\n\n\t\treturn {\n\t\t\tprevious: {\n\t\t\t\tx: current.x - fa * (next.x - previous.x),\n\t\t\t\ty: current.y - fa * (next.y - previous.y)\n\t\t\t},\n\t\t\tnext: {\n\t\t\t\tx: current.x + fb * (next.x - previous.x),\n\t\t\t\ty: current.y + fb * (next.y - previous.y)\n\t\t\t}\n\t\t};\n\t};\n\thelpers.EPSILON = Number.EPSILON || 1e-14;\n\thelpers.splineCurveMonotone = function(points) {\n\t\t// This function calculates Bézier control points in a similar way than |splineCurve|,\n\t\t// but preserves monotonicity of the provided data and ensures no local extremums are added\n\t\t// between the dataset discrete points due to the interpolation.\n\t\t// See : https://en.wikipedia.org/wiki/Monotone_cubic_interpolation\n\n\t\tvar pointsWithTangents = (points || []).map(function(point) {\n\t\t\treturn {\n\t\t\t\tmodel: point._model,\n\t\t\t\tdeltaK: 0,\n\t\t\t\tmK: 0\n\t\t\t};\n\t\t});\n\n\t\t// Calculate slopes (deltaK) and initialize tangents (mK)\n\t\tvar pointsLen = pointsWithTangents.length;\n\t\tvar i, pointBefore, pointCurrent, pointAfter;\n\t\tfor (i = 0; i < pointsLen; ++i) {\n\t\t\tpointCurrent = pointsWithTangents[i];\n\t\t\tif (pointCurrent.model.skip) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tpointBefore = i > 0 ? pointsWithTangents[i - 1] : null;\n\t\t\tpointAfter = i < pointsLen - 1 ? pointsWithTangents[i + 1] : null;\n\t\t\tif (pointAfter && !pointAfter.model.skip) {\n\t\t\t\tvar slopeDeltaX = (pointAfter.model.x - pointCurrent.model.x);\n\n\t\t\t\t// In the case of two points that appear at the same x pixel, slopeDeltaX is 0\n\t\t\t\tpointCurrent.deltaK = slopeDeltaX !== 0 ? (pointAfter.model.y - pointCurrent.model.y) / slopeDeltaX : 0;\n\t\t\t}\n\n\t\t\tif (!pointBefore || pointBefore.model.skip) {\n\t\t\t\tpointCurrent.mK = pointCurrent.deltaK;\n\t\t\t} else if (!pointAfter || pointAfter.model.skip) {\n\t\t\t\tpointCurrent.mK = pointBefore.deltaK;\n\t\t\t} else if (this.sign(pointBefore.deltaK) !== this.sign(pointCurrent.deltaK)) {\n\t\t\t\tpointCurrent.mK = 0;\n\t\t\t} else {\n\t\t\t\tpointCurrent.mK = (pointBefore.deltaK + pointCurrent.deltaK) / 2;\n\t\t\t}\n\t\t}\n\n\t\t// Adjust tangents to ensure monotonic properties\n\t\tvar alphaK, betaK, tauK, squaredMagnitude;\n\t\tfor (i = 0; i < pointsLen - 1; ++i) {\n\t\t\tpointCurrent = pointsWithTangents[i];\n\t\t\tpointAfter = pointsWithTangents[i + 1];\n\t\t\tif (pointCurrent.model.skip || pointAfter.model.skip) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tif (helpers.almostEquals(pointCurrent.deltaK, 0, this.EPSILON)) {\n\t\t\t\tpointCurrent.mK = pointAfter.mK = 0;\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\talphaK = pointCurrent.mK / pointCurrent.deltaK;\n\t\t\tbetaK = pointAfter.mK / pointCurrent.deltaK;\n\t\t\tsquaredMagnitude = Math.pow(alphaK, 2) + Math.pow(betaK, 2);\n\t\t\tif (squaredMagnitude <= 9) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\ttauK = 3 / Math.sqrt(squaredMagnitude);\n\t\t\tpointCurrent.mK = alphaK * tauK * pointCurrent.deltaK;\n\t\t\tpointAfter.mK = betaK * tauK * pointCurrent.deltaK;\n\t\t}\n\n\t\t// Compute control points\n\t\tvar deltaX;\n\t\tfor (i = 0; i < pointsLen; ++i) {\n\t\t\tpointCurrent = pointsWithTangents[i];\n\t\t\tif (pointCurrent.model.skip) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tpointBefore = i > 0 ? pointsWithTangents[i - 1] : null;\n\t\t\tpointAfter = i < pointsLen - 1 ? pointsWithTangents[i + 1] : null;\n\t\t\tif (pointBefore && !pointBefore.model.skip) {\n\t\t\t\tdeltaX = (pointCurrent.model.x - pointBefore.model.x) / 3;\n\t\t\t\tpointCurrent.model.controlPointPreviousX = pointCurrent.model.x - deltaX;\n\t\t\t\tpointCurrent.model.controlPointPreviousY = pointCurrent.model.y - deltaX * pointCurrent.mK;\n\t\t\t}\n\t\t\tif (pointAfter && !pointAfter.model.skip) {\n\t\t\t\tdeltaX = (pointAfter.model.x - pointCurrent.model.x) / 3;\n\t\t\t\tpointCurrent.model.controlPointNextX = pointCurrent.model.x + deltaX;\n\t\t\t\tpointCurrent.model.controlPointNextY = pointCurrent.model.y + deltaX * pointCurrent.mK;\n\t\t\t}\n\t\t}\n\t};\n\thelpers.nextItem = function(collection, index, loop) {\n\t\tif (loop) {\n\t\t\treturn index >= collection.length - 1 ? collection[0] : collection[index + 1];\n\t\t}\n\t\treturn index >= collection.length - 1 ? collection[collection.length - 1] : collection[index + 1];\n\t};\n\thelpers.previousItem = function(collection, index, loop) {\n\t\tif (loop) {\n\t\t\treturn index <= 0 ? collection[collection.length - 1] : collection[index - 1];\n\t\t}\n\t\treturn index <= 0 ? collection[0] : collection[index - 1];\n\t};\n\t// Implementation of the nice number algorithm used in determining where axis labels will go\n\thelpers.niceNum = function(range, round) {\n\t\tvar exponent = Math.floor(helpers.log10(range));\n\t\tvar fraction = range / Math.pow(10, exponent);\n\t\tvar niceFraction;\n\n\t\tif (round) {\n\t\t\tif (fraction < 1.5) {\n\t\t\t\tniceFraction = 1;\n\t\t\t} else if (fraction < 3) {\n\t\t\t\tniceFraction = 2;\n\t\t\t} else if (fraction < 7) {\n\t\t\t\tniceFraction = 5;\n\t\t\t} else {\n\t\t\t\tniceFraction = 10;\n\t\t\t}\n\t\t} else if (fraction <= 1.0) {\n\t\t\tniceFraction = 1;\n\t\t} else if (fraction <= 2) {\n\t\t\tniceFraction = 2;\n\t\t} else if (fraction <= 5) {\n\t\t\tniceFraction = 5;\n\t\t} else {\n\t\t\tniceFraction = 10;\n\t\t}\n\n\t\treturn niceFraction * Math.pow(10, exponent);\n\t};\n\t// Request animation polyfill - http://www.paulirish.com/2011/requestanimationframe-for-smart-animating/\n\thelpers.requestAnimFrame = (function() {\n\t\tif (typeof window === 'undefined') {\n\t\t\treturn function(callback) {\n\t\t\t\tcallback();\n\t\t\t};\n\t\t}\n\t\treturn window.requestAnimationFrame ||\n\t\t\twindow.webkitRequestAnimationFrame ||\n\t\t\twindow.mozRequestAnimationFrame ||\n\t\t\twindow.oRequestAnimationFrame ||\n\t\t\twindow.msRequestAnimationFrame ||\n\t\t\tfunction(callback) {\n\t\t\t\treturn window.setTimeout(callback, 1000 / 60);\n\t\t\t};\n\t}());\n\t// -- DOM methods\n\thelpers.getRelativePosition = function(evt, chart) {\n\t\tvar mouseX, mouseY;\n\t\tvar e = evt.originalEvent || evt;\n\t\tvar canvas = evt.target || evt.srcElement;\n\t\tvar boundingRect = canvas.getBoundingClientRect();\n\n\t\tvar touches = e.touches;\n\t\tif (touches && touches.length > 0) {\n\t\t\tmouseX = touches[0].clientX;\n\t\t\tmouseY = touches[0].clientY;\n\n\t\t} else {\n\t\t\tmouseX = e.clientX;\n\t\t\tmouseY = e.clientY;\n\t\t}\n\n\t\t// Scale mouse coordinates into canvas coordinates\n\t\t// by following the pattern laid out by 'jerryj' in the comments of\n\t\t// http://www.html5canvastutorials.com/advanced/html5-canvas-mouse-coordinates/\n\t\tvar paddingLeft = parseFloat(helpers.getStyle(canvas, 'padding-left'));\n\t\tvar paddingTop = parseFloat(helpers.getStyle(canvas, 'padding-top'));\n\t\tvar paddingRight = parseFloat(helpers.getStyle(canvas, 'padding-right'));\n\t\tvar paddingBottom = parseFloat(helpers.getStyle(canvas, 'padding-bottom'));\n\t\tvar width = boundingRect.right - boundingRect.left - paddingLeft - paddingRight;\n\t\tvar height = boundingRect.bottom - boundingRect.top - paddingTop - paddingBottom;\n\n\t\t// We divide by the current device pixel ratio, because the canvas is scaled up by that amount in each direction. However\n\t\t// the backend model is in unscaled coordinates. Since we are going to deal with our model coordinates, we go back here\n\t\tmouseX = Math.round((mouseX - boundingRect.left - paddingLeft) / (width) * canvas.width / chart.currentDevicePixelRatio);\n\t\tmouseY = Math.round((mouseY - boundingRect.top - paddingTop) / (height) * canvas.height / chart.currentDevicePixelRatio);\n\n\t\treturn {\n\t\t\tx: mouseX,\n\t\t\ty: mouseY\n\t\t};\n\n\t};\n\n\t// Private helper function to convert max-width/max-height values that may be percentages into a number\n\tfunction parseMaxStyle(styleValue, node, parentProperty) {\n\t\tvar valueInPixels;\n\t\tif (typeof styleValue === 'string') {\n\t\t\tvalueInPixels = parseInt(styleValue, 10);\n\n\t\t\tif (styleValue.indexOf('%') !== -1) {\n\t\t\t\t// percentage * size in dimension\n\t\t\t\tvalueInPixels = valueInPixels / 100 * node.parentNode[parentProperty];\n\t\t\t}\n\t\t} else {\n\t\t\tvalueInPixels = styleValue;\n\t\t}\n\n\t\treturn valueInPixels;\n\t}\n\n\t/**\n\t * Returns if the given value contains an effective constraint.\n\t * @private\n\t */\n\tfunction isConstrainedValue(value) {\n\t\treturn value !== undefined && value !== null && value !== 'none';\n\t}\n\n\t// Private helper to get a constraint dimension\n\t// @param domNode : the node to check the constraint on\n\t// @param maxStyle : the style that defines the maximum for the direction we are using (maxWidth / maxHeight)\n\t// @param percentageProperty : property of parent to use when calculating width as a percentage\n\t// @see http://www.nathanaeljones.com/blog/2013/reading-max-width-cross-browser\n\tfunction getConstraintDimension(domNode, maxStyle, percentageProperty) {\n\t\tvar view = document.defaultView;\n\t\tvar parentNode = helpers._getParentNode(domNode);\n\t\tvar constrainedNode = view.getComputedStyle(domNode)[maxStyle];\n\t\tvar constrainedContainer = view.getComputedStyle(parentNode)[maxStyle];\n\t\tvar hasCNode = isConstrainedValue(constrainedNode);\n\t\tvar hasCContainer = isConstrainedValue(constrainedContainer);\n\t\tvar infinity = Number.POSITIVE_INFINITY;\n\n\t\tif (hasCNode || hasCContainer) {\n\t\t\treturn Math.min(\n\t\t\t\thasCNode ? parseMaxStyle(constrainedNode, domNode, percentageProperty) : infinity,\n\t\t\t\thasCContainer ? parseMaxStyle(constrainedContainer, parentNode, percentageProperty) : infinity);\n\t\t}\n\n\t\treturn 'none';\n\t}\n\t// returns Number or undefined if no constraint\n\thelpers.getConstraintWidth = function(domNode) {\n\t\treturn getConstraintDimension(domNode, 'max-width', 'clientWidth');\n\t};\n\t// returns Number or undefined if no constraint\n\thelpers.getConstraintHeight = function(domNode) {\n\t\treturn getConstraintDimension(domNode, 'max-height', 'clientHeight');\n\t};\n\t/**\n\t * @private\n \t */\n\thelpers._calculatePadding = function(container, padding, parentDimension) {\n\t\tpadding = helpers.getStyle(container, padding);\n\n\t\treturn padding.indexOf('%') > -1 ? parentDimension / parseInt(padding, 10) : parseInt(padding, 10);\n\t};\n\t/**\n\t * @private\n\t */\n\thelpers._getParentNode = function(domNode) {\n\t\tvar parent = domNode.parentNode;\n\t\tif (parent && parent.host) {\n\t\t\tparent = parent.host;\n\t\t}\n\t\treturn parent;\n\t};\n\thelpers.getMaximumWidth = function(domNode) {\n\t\tvar container = helpers._getParentNode(domNode);\n\t\tif (!container) {\n\t\t\treturn domNode.clientWidth;\n\t\t}\n\n\t\tvar clientWidth = container.clientWidth;\n\t\tvar paddingLeft = helpers._calculatePadding(container, 'padding-left', clientWidth);\n\t\tvar paddingRight = helpers._calculatePadding(container, 'padding-right', clientWidth);\n\n\t\tvar w = clientWidth - paddingLeft - paddingRight;\n\t\tvar cw = helpers.getConstraintWidth(domNode);\n\t\treturn isNaN(cw) ? w : Math.min(w, cw);\n\t};\n\thelpers.getMaximumHeight = function(domNode) {\n\t\tvar container = helpers._getParentNode(domNode);\n\t\tif (!container) {\n\t\t\treturn domNode.clientHeight;\n\t\t}\n\n\t\tvar clientHeight = container.clientHeight;\n\t\tvar paddingTop = helpers._calculatePadding(container, 'padding-top', clientHeight);\n\t\tvar paddingBottom = helpers._calculatePadding(container, 'padding-bottom', clientHeight);\n\n\t\tvar h = clientHeight - paddingTop - paddingBottom;\n\t\tvar ch = helpers.getConstraintHeight(domNode);\n\t\treturn isNaN(ch) ? h : Math.min(h, ch);\n\t};\n\thelpers.getStyle = function(el, property) {\n\t\treturn el.currentStyle ?\n\t\t\tel.currentStyle[property] :\n\t\t\tdocument.defaultView.getComputedStyle(el, null).getPropertyValue(property);\n\t};\n\thelpers.retinaScale = function(chart, forceRatio) {\n\t\tvar pixelRatio = chart.currentDevicePixelRatio = forceRatio || (typeof window !== 'undefined' && window.devicePixelRatio) || 1;\n\t\tif (pixelRatio === 1) {\n\t\t\treturn;\n\t\t}\n\n\t\tvar canvas = chart.canvas;\n\t\tvar height = chart.height;\n\t\tvar width = chart.width;\n\n\t\tcanvas.height = height * pixelRatio;\n\t\tcanvas.width = width * pixelRatio;\n\t\tchart.ctx.scale(pixelRatio, pixelRatio);\n\n\t\t// If no style has been set on the canvas, the render size is used as display size,\n\t\t// making the chart visually bigger, so let's enforce it to the \"correct\" values.\n\t\t// See https://github.com/chartjs/Chart.js/issues/3575\n\t\tif (!canvas.style.height && !canvas.style.width) {\n\t\t\tcanvas.style.height = height + 'px';\n\t\t\tcanvas.style.width = width + 'px';\n\t\t}\n\t};\n\t// -- Canvas methods\n\thelpers.fontString = function(pixelSize, fontStyle, fontFamily) {\n\t\treturn fontStyle + ' ' + pixelSize + 'px ' + fontFamily;\n\t};\n\thelpers.longestText = function(ctx, font, arrayOfThings, cache) {\n\t\tcache = cache || {};\n\t\tvar data = cache.data = cache.data || {};\n\t\tvar gc = cache.garbageCollect = cache.garbageCollect || [];\n\n\t\tif (cache.font !== font) {\n\t\t\tdata = cache.data = {};\n\t\t\tgc = cache.garbageCollect = [];\n\t\t\tcache.font = font;\n\t\t}\n\n\t\tctx.font = font;\n\t\tvar longest = 0;\n\t\thelpers.each(arrayOfThings, function(thing) {\n\t\t\t// Undefined strings and arrays should not be measured\n\t\t\tif (thing !== undefined && thing !== null && helpers.isArray(thing) !== true) {\n\t\t\t\tlongest = helpers.measureText(ctx, data, gc, longest, thing);\n\t\t\t} else if (helpers.isArray(thing)) {\n\t\t\t\t// if it is an array lets measure each element\n\t\t\t\t// to do maybe simplify this function a bit so we can do this more recursively?\n\t\t\t\thelpers.each(thing, function(nestedThing) {\n\t\t\t\t\t// Undefined strings and arrays should not be measured\n\t\t\t\t\tif (nestedThing !== undefined && nestedThing !== null && !helpers.isArray(nestedThing)) {\n\t\t\t\t\t\tlongest = helpers.measureText(ctx, data, gc, longest, nestedThing);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t\t});\n\n\t\tvar gcLen = gc.length / 2;\n\t\tif (gcLen > arrayOfThings.length) {\n\t\t\tfor (var i = 0; i < gcLen; i++) {\n\t\t\t\tdelete data[gc[i]];\n\t\t\t}\n\t\t\tgc.splice(0, gcLen);\n\t\t}\n\t\treturn longest;\n\t};\n\thelpers.measureText = function(ctx, data, gc, longest, string) {\n\t\tvar textWidth = data[string];\n\t\tif (!textWidth) {\n\t\t\ttextWidth = data[string] = ctx.measureText(string).width;\n\t\t\tgc.push(string);\n\t\t}\n\t\tif (textWidth > longest) {\n\t\t\tlongest = textWidth;\n\t\t}\n\t\treturn longest;\n\t};\n\thelpers.numberOfLabelLines = function(arrayOfThings) {\n\t\tvar numberOfLines = 1;\n\t\thelpers.each(arrayOfThings, function(thing) {\n\t\t\tif (helpers.isArray(thing)) {\n\t\t\t\tif (thing.length > numberOfLines) {\n\t\t\t\t\tnumberOfLines = thing.length;\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t\treturn numberOfLines;\n\t};\n\n\thelpers.color = !color ?\n\t\tfunction(value) {\n\t\t\tconsole.error('Color.js not found!');\n\t\t\treturn value;\n\t\t} :\n\t\tfunction(value) {\n\t\t\t/* global CanvasGradient */\n\t\t\tif (value instanceof CanvasGradient) {\n\t\t\t\tvalue = defaults.global.defaultColor;\n\t\t\t}\n\n\t\t\treturn color(value);\n\t\t};\n\n\thelpers.getHoverColor = function(colorValue) {\n\t\t/* global CanvasPattern */\n\t\treturn (colorValue instanceof CanvasPattern) ?\n\t\t\tcolorValue :\n\t\t\thelpers.color(colorValue).saturate(0.5).darken(0.1).rgbString();\n\t};\n};\n","'use strict';\n\nvar defaults = require('./core.defaults');\nvar helpers = require('../helpers/index');\nvar layouts = require('./core.layouts');\n\nmodule.exports = {\n\t// Scale registration object. Extensions can register new scale types (such as log or DB scales) and then\n\t// use the new chart options to grab the correct scale\n\tconstructors: {},\n\t// Use a registration function so that we can move to an ES6 map when we no longer need to support\n\t// old browsers\n\n\t// Scale config defaults\n\tdefaults: {},\n\tregisterScaleType: function(type, scaleConstructor, scaleDefaults) {\n\t\tthis.constructors[type] = scaleConstructor;\n\t\tthis.defaults[type] = helpers.clone(scaleDefaults);\n\t},\n\tgetScaleConstructor: function(type) {\n\t\treturn this.constructors.hasOwnProperty(type) ? this.constructors[type] : undefined;\n\t},\n\tgetScaleDefaults: function(type) {\n\t\t// Return the scale defaults merged with the global settings so that we always use the latest ones\n\t\treturn this.defaults.hasOwnProperty(type) ? helpers.merge({}, [defaults.scale, this.defaults[type]]) : {};\n\t},\n\tupdateScaleDefaults: function(type, additions) {\n\t\tvar me = this;\n\t\tif (me.defaults.hasOwnProperty(type)) {\n\t\t\tme.defaults[type] = helpers.extend(me.defaults[type], additions);\n\t\t}\n\t},\n\taddScalesToLayout: function(chart) {\n\t\t// Adds each scale to the chart.boxes array to be sized accordingly\n\t\thelpers.each(chart.scales, function(scale) {\n\t\t\t// Set ILayoutItem parameters for backwards compatibility\n\t\t\tscale.fullWidth = scale.options.fullWidth;\n\t\t\tscale.position = scale.options.position;\n\t\t\tscale.weight = scale.options.weight;\n\t\t\tlayouts.addBox(chart, scale);\n\t\t});\n\t}\n};\n","'use strict';\n\nvar defaults = require('../core/core.defaults');\nvar elements = require('../elements/index');\nvar helpers = require('../helpers/index');\n\ndefaults._set('radar', {\n\tscale: {\n\t\ttype: 'radialLinear'\n\t},\n\telements: {\n\t\tline: {\n\t\t\ttension: 0 // no bezier in radar\n\t\t}\n\t}\n});\n\nmodule.exports = function(Chart) {\n\n\tChart.controllers.radar = Chart.DatasetController.extend({\n\n\t\tdatasetElementType: elements.Line,\n\n\t\tdataElementType: elements.Point,\n\n\t\tlinkScales: helpers.noop,\n\n\t\tupdate: function(reset) {\n\t\t\tvar me = this;\n\t\t\tvar meta = me.getMeta();\n\t\t\tvar line = meta.dataset;\n\t\t\tvar points = meta.data;\n\t\t\tvar custom = line.custom || {};\n\t\t\tvar dataset = me.getDataset();\n\t\t\tvar lineElementOptions = me.chart.options.elements.line;\n\t\t\tvar scale = me.chart.scale;\n\n\t\t\t// Compatibility: If the properties are defined with only the old name, use those values\n\t\t\tif ((dataset.tension !== undefined) && (dataset.lineTension === undefined)) {\n\t\t\t\tdataset.lineTension = dataset.tension;\n\t\t\t}\n\n\t\t\thelpers.extend(meta.dataset, {\n\t\t\t\t// Utility\n\t\t\t\t_datasetIndex: me.index,\n\t\t\t\t_scale: scale,\n\t\t\t\t// Data\n\t\t\t\t_children: points,\n\t\t\t\t_loop: true,\n\t\t\t\t// Model\n\t\t\t\t_model: {\n\t\t\t\t\t// Appearance\n\t\t\t\t\ttension: custom.tension ? custom.tension : helpers.valueOrDefault(dataset.lineTension, lineElementOptions.tension),\n\t\t\t\t\tbackgroundColor: custom.backgroundColor ? custom.backgroundColor : (dataset.backgroundColor || lineElementOptions.backgroundColor),\n\t\t\t\t\tborderWidth: custom.borderWidth ? custom.borderWidth : (dataset.borderWidth || lineElementOptions.borderWidth),\n\t\t\t\t\tborderColor: custom.borderColor ? custom.borderColor : (dataset.borderColor || lineElementOptions.borderColor),\n\t\t\t\t\tfill: custom.fill ? custom.fill : (dataset.fill !== undefined ? dataset.fill : lineElementOptions.fill),\n\t\t\t\t\tborderCapStyle: custom.borderCapStyle ? custom.borderCapStyle : (dataset.borderCapStyle || lineElementOptions.borderCapStyle),\n\t\t\t\t\tborderDash: custom.borderDash ? custom.borderDash : (dataset.borderDash || lineElementOptions.borderDash),\n\t\t\t\t\tborderDashOffset: custom.borderDashOffset ? custom.borderDashOffset : (dataset.borderDashOffset || lineElementOptions.borderDashOffset),\n\t\t\t\t\tborderJoinStyle: custom.borderJoinStyle ? custom.borderJoinStyle : (dataset.borderJoinStyle || lineElementOptions.borderJoinStyle),\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tmeta.dataset.pivot();\n\n\t\t\t// Update Points\n\t\t\thelpers.each(points, function(point, index) {\n\t\t\t\tme.updateElement(point, index, reset);\n\t\t\t}, me);\n\n\t\t\t// Update bezier control points\n\t\t\tme.updateBezierControlPoints();\n\t\t},\n\t\tupdateElement: function(point, index, reset) {\n\t\t\tvar me = this;\n\t\t\tvar custom = point.custom || {};\n\t\t\tvar dataset = me.getDataset();\n\t\t\tvar scale = me.chart.scale;\n\t\t\tvar pointElementOptions = me.chart.options.elements.point;\n\t\t\tvar pointPosition = scale.getPointPositionForValue(index, dataset.data[index]);\n\n\t\t\t// Compatibility: If the properties are defined with only the old name, use those values\n\t\t\tif ((dataset.radius !== undefined) && (dataset.pointRadius === undefined)) {\n\t\t\t\tdataset.pointRadius = dataset.radius;\n\t\t\t}\n\t\t\tif ((dataset.hitRadius !== undefined) && (dataset.pointHitRadius === undefined)) {\n\t\t\t\tdataset.pointHitRadius = dataset.hitRadius;\n\t\t\t}\n\n\t\t\thelpers.extend(point, {\n\t\t\t\t// Utility\n\t\t\t\t_datasetIndex: me.index,\n\t\t\t\t_index: index,\n\t\t\t\t_scale: scale,\n\n\t\t\t\t// Desired view properties\n\t\t\t\t_model: {\n\t\t\t\t\tx: reset ? scale.xCenter : pointPosition.x, // value not used in dataset scale, but we want a consistent API between scales\n\t\t\t\t\ty: reset ? scale.yCenter : pointPosition.y,\n\n\t\t\t\t\t// Appearance\n\t\t\t\t\ttension: custom.tension ? custom.tension : helpers.valueOrDefault(dataset.lineTension, me.chart.options.elements.line.tension),\n\t\t\t\t\tradius: custom.radius ? custom.radius : helpers.valueAtIndexOrDefault(dataset.pointRadius, index, pointElementOptions.radius),\n\t\t\t\t\tbackgroundColor: custom.backgroundColor ? custom.backgroundColor : helpers.valueAtIndexOrDefault(dataset.pointBackgroundColor, index, pointElementOptions.backgroundColor),\n\t\t\t\t\tborderColor: custom.borderColor ? custom.borderColor : helpers.valueAtIndexOrDefault(dataset.pointBorderColor, index, pointElementOptions.borderColor),\n\t\t\t\t\tborderWidth: custom.borderWidth ? custom.borderWidth : helpers.valueAtIndexOrDefault(dataset.pointBorderWidth, index, pointElementOptions.borderWidth),\n\t\t\t\t\tpointStyle: custom.pointStyle ? custom.pointStyle : helpers.valueAtIndexOrDefault(dataset.pointStyle, index, pointElementOptions.pointStyle),\n\t\t\t\t\trotation: custom.rotation ? custom.rotation : helpers.valueAtIndexOrDefault(dataset.pointRotation, index, pointElementOptions.rotation),\n\n\t\t\t\t\t// Tooltip\n\t\t\t\t\thitRadius: custom.hitRadius ? custom.hitRadius : helpers.valueAtIndexOrDefault(dataset.pointHitRadius, index, pointElementOptions.hitRadius)\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tpoint._model.skip = custom.skip ? custom.skip : (isNaN(point._model.x) || isNaN(point._model.y));\n\t\t},\n\t\tupdateBezierControlPoints: function() {\n\t\t\tvar chartArea = this.chart.chartArea;\n\t\t\tvar meta = this.getMeta();\n\n\t\t\thelpers.each(meta.data, function(point, index) {\n\t\t\t\tvar model = point._model;\n\t\t\t\tvar controlPoints = helpers.splineCurve(\n\t\t\t\t\thelpers.previousItem(meta.data, index, true)._model,\n\t\t\t\t\tmodel,\n\t\t\t\t\thelpers.nextItem(meta.data, index, true)._model,\n\t\t\t\t\tmodel.tension\n\t\t\t\t);\n\n\t\t\t\t// Prevent the bezier going outside of the bounds of the graph\n\t\t\t\tmodel.controlPointPreviousX = Math.max(Math.min(controlPoints.previous.x, chartArea.right), chartArea.left);\n\t\t\t\tmodel.controlPointPreviousY = Math.max(Math.min(controlPoints.previous.y, chartArea.bottom), chartArea.top);\n\n\t\t\t\tmodel.controlPointNextX = Math.max(Math.min(controlPoints.next.x, chartArea.right), chartArea.left);\n\t\t\t\tmodel.controlPointNextY = Math.max(Math.min(controlPoints.next.y, chartArea.bottom), chartArea.top);\n\n\t\t\t\t// Now pivot the point for animation\n\t\t\t\tpoint.pivot();\n\t\t\t});\n\t\t},\n\n\t\tsetHoverStyle: function(point) {\n\t\t\t// Point\n\t\t\tvar dataset = this.chart.data.datasets[point._datasetIndex];\n\t\t\tvar custom = point.custom || {};\n\t\t\tvar index = point._index;\n\t\t\tvar model = point._model;\n\n\t\t\tpoint.$previousStyle = {\n\t\t\t\tbackgroundColor: model.backgroundColor,\n\t\t\t\tborderColor: model.borderColor,\n\t\t\t\tborderWidth: model.borderWidth,\n\t\t\t\tradius: model.radius\n\t\t\t};\n\n\t\t\tmodel.radius = custom.hoverRadius ? custom.hoverRadius : helpers.valueAtIndexOrDefault(dataset.pointHoverRadius, index, this.chart.options.elements.point.hoverRadius);\n\t\t\tmodel.backgroundColor = custom.hoverBackgroundColor ? custom.hoverBackgroundColor : helpers.valueAtIndexOrDefault(dataset.pointHoverBackgroundColor, index, helpers.getHoverColor(model.backgroundColor));\n\t\t\tmodel.borderColor = custom.hoverBorderColor ? custom.hoverBorderColor : helpers.valueAtIndexOrDefault(dataset.pointHoverBorderColor, index, helpers.getHoverColor(model.borderColor));\n\t\t\tmodel.borderWidth = custom.hoverBorderWidth ? custom.hoverBorderWidth : helpers.valueAtIndexOrDefault(dataset.pointHoverBorderWidth, index, model.borderWidth);\n\t\t},\n\t});\n};\n","'use strict';\n\n/**\n * @namespace Chart.helpers\n */\nvar helpers = {\n\t/**\n\t * An empty function that can be used, for example, for optional callback.\n\t */\n\tnoop: function() {},\n\n\t/**\n\t * Returns a unique id, sequentially generated from a global variable.\n\t * @returns {Number}\n\t * @function\n\t */\n\tuid: (function() {\n\t\tvar id = 0;\n\t\treturn function() {\n\t\t\treturn id++;\n\t\t};\n\t}()),\n\n\t/**\n\t * Returns true if `value` is neither null nor undefined, else returns false.\n\t * @param {*} value - The value to test.\n\t * @returns {Boolean}\n\t * @since 2.7.0\n\t */\n\tisNullOrUndef: function(value) {\n\t\treturn value === null || typeof value === 'undefined';\n\t},\n\n\t/**\n\t * Returns true if `value` is an array, else returns false.\n\t * @param {*} value - The value to test.\n\t * @returns {Boolean}\n\t * @function\n\t */\n\tisArray: Array.isArray ? Array.isArray : function(value) {\n\t\treturn Object.prototype.toString.call(value) === '[object Array]';\n\t},\n\n\t/**\n\t * Returns true if `value` is an object (excluding null), else returns false.\n\t * @param {*} value - The value to test.\n\t * @returns {Boolean}\n\t * @since 2.7.0\n\t */\n\tisObject: function(value) {\n\t\treturn value !== null && Object.prototype.toString.call(value) === '[object Object]';\n\t},\n\n\t/**\n\t * Returns `value` if defined, else returns `defaultValue`.\n\t * @param {*} value - The value to return if defined.\n\t * @param {*} defaultValue - The value to return if `value` is undefined.\n\t * @returns {*}\n\t */\n\tvalueOrDefault: function(value, defaultValue) {\n\t\treturn typeof value === 'undefined' ? defaultValue : value;\n\t},\n\n\t/**\n\t * Returns value at the given `index` in array if defined, else returns `defaultValue`.\n\t * @param {Array} value - The array to lookup for value at `index`.\n\t * @param {Number} index - The index in `value` to lookup for value.\n\t * @param {*} defaultValue - The value to return if `value[index]` is undefined.\n\t * @returns {*}\n\t */\n\tvalueAtIndexOrDefault: function(value, index, defaultValue) {\n\t\treturn helpers.valueOrDefault(helpers.isArray(value) ? value[index] : value, defaultValue);\n\t},\n\n\t/**\n\t * Calls `fn` with the given `args` in the scope defined by `thisArg` and returns the\n\t * value returned by `fn`. If `fn` is not a function, this method returns undefined.\n\t * @param {Function} fn - The function to call.\n\t * @param {Array|undefined|null} args - The arguments with which `fn` should be called.\n\t * @param {Object} [thisArg] - The value of `this` provided for the call to `fn`.\n\t * @returns {*}\n\t */\n\tcallback: function(fn, args, thisArg) {\n\t\tif (fn && typeof fn.call === 'function') {\n\t\t\treturn fn.apply(thisArg, args);\n\t\t}\n\t},\n\n\t/**\n\t * Note(SB) for performance sake, this method should only be used when loopable type\n\t * is unknown or in none intensive code (not called often and small loopable). Else\n\t * it's preferable to use a regular for() loop and save extra function calls.\n\t * @param {Object|Array} loopable - The object or array to be iterated.\n\t * @param {Function} fn - The function to call for each item.\n\t * @param {Object} [thisArg] - The value of `this` provided for the call to `fn`.\n\t * @param {Boolean} [reverse] - If true, iterates backward on the loopable.\n\t */\n\teach: function(loopable, fn, thisArg, reverse) {\n\t\tvar i, len, keys;\n\t\tif (helpers.isArray(loopable)) {\n\t\t\tlen = loopable.length;\n\t\t\tif (reverse) {\n\t\t\t\tfor (i = len - 1; i >= 0; i--) {\n\t\t\t\t\tfn.call(thisArg, loopable[i], i);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tfor (i = 0; i < len; i++) {\n\t\t\t\t\tfn.call(thisArg, loopable[i], i);\n\t\t\t\t}\n\t\t\t}\n\t\t} else if (helpers.isObject(loopable)) {\n\t\t\tkeys = Object.keys(loopable);\n\t\t\tlen = keys.length;\n\t\t\tfor (i = 0; i < len; i++) {\n\t\t\t\tfn.call(thisArg, loopable[keys[i]], keys[i]);\n\t\t\t}\n\t\t}\n\t},\n\n\t/**\n\t * Returns true if the `a0` and `a1` arrays have the same content, else returns false.\n\t * @see http://stackoverflow.com/a/14853974\n\t * @param {Array} a0 - The array to compare\n\t * @param {Array} a1 - The array to compare\n\t * @returns {Boolean}\n\t */\n\tarrayEquals: function(a0, a1) {\n\t\tvar i, ilen, v0, v1;\n\n\t\tif (!a0 || !a1 || a0.length !== a1.length) {\n\t\t\treturn false;\n\t\t}\n\n\t\tfor (i = 0, ilen = a0.length; i < ilen; ++i) {\n\t\t\tv0 = a0[i];\n\t\t\tv1 = a1[i];\n\n\t\t\tif (v0 instanceof Array && v1 instanceof Array) {\n\t\t\t\tif (!helpers.arrayEquals(v0, v1)) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t} else if (v0 !== v1) {\n\t\t\t\t// NOTE: two different object instances will never be equal: {x:20} != {x:20}\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\n\t\treturn true;\n\t},\n\n\t/**\n\t * Returns a deep copy of `source` without keeping references on objects and arrays.\n\t * @param {*} source - The value to clone.\n\t * @returns {*}\n\t */\n\tclone: function(source) {\n\t\tif (helpers.isArray(source)) {\n\t\t\treturn source.map(helpers.clone);\n\t\t}\n\n\t\tif (helpers.isObject(source)) {\n\t\t\tvar target = {};\n\t\t\tvar keys = Object.keys(source);\n\t\t\tvar klen = keys.length;\n\t\t\tvar k = 0;\n\n\t\t\tfor (; k < klen; ++k) {\n\t\t\t\ttarget[keys[k]] = helpers.clone(source[keys[k]]);\n\t\t\t}\n\n\t\t\treturn target;\n\t\t}\n\n\t\treturn source;\n\t},\n\n\t/**\n\t * The default merger when Chart.helpers.merge is called without merger option.\n\t * Note(SB): this method is also used by configMerge and scaleMerge as fallback.\n\t * @private\n\t */\n\t_merger: function(key, target, source, options) {\n\t\tvar tval = target[key];\n\t\tvar sval = source[key];\n\n\t\tif (helpers.isObject(tval) && helpers.isObject(sval)) {\n\t\t\thelpers.merge(tval, sval, options);\n\t\t} else {\n\t\t\ttarget[key] = helpers.clone(sval);\n\t\t}\n\t},\n\n\t/**\n\t * Merges source[key] in target[key] only if target[key] is undefined.\n\t * @private\n\t */\n\t_mergerIf: function(key, target, source) {\n\t\tvar tval = target[key];\n\t\tvar sval = source[key];\n\n\t\tif (helpers.isObject(tval) && helpers.isObject(sval)) {\n\t\t\thelpers.mergeIf(tval, sval);\n\t\t} else if (!target.hasOwnProperty(key)) {\n\t\t\ttarget[key] = helpers.clone(sval);\n\t\t}\n\t},\n\n\t/**\n\t * Recursively deep copies `source` properties into `target` with the given `options`.\n\t * IMPORTANT: `target` is not cloned and will be updated with `source` properties.\n\t * @param {Object} target - The target object in which all sources are merged into.\n\t * @param {Object|Array(Object)} source - Object(s) to merge into `target`.\n\t * @param {Object} [options] - Merging options:\n\t * @param {Function} [options.merger] - The merge method (key, target, source, options)\n\t * @returns {Object} The `target` object.\n\t */\n\tmerge: function(target, source, options) {\n\t\tvar sources = helpers.isArray(source) ? source : [source];\n\t\tvar ilen = sources.length;\n\t\tvar merge, i, keys, klen, k;\n\n\t\tif (!helpers.isObject(target)) {\n\t\t\treturn target;\n\t\t}\n\n\t\toptions = options || {};\n\t\tmerge = options.merger || helpers._merger;\n\n\t\tfor (i = 0; i < ilen; ++i) {\n\t\t\tsource = sources[i];\n\t\t\tif (!helpers.isObject(source)) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tkeys = Object.keys(source);\n\t\t\tfor (k = 0, klen = keys.length; k < klen; ++k) {\n\t\t\t\tmerge(keys[k], target, source, options);\n\t\t\t}\n\t\t}\n\n\t\treturn target;\n\t},\n\n\t/**\n\t * Recursively deep copies `source` properties into `target` *only* if not defined in target.\n\t * IMPORTANT: `target` is not cloned and will be updated with `source` properties.\n\t * @param {Object} target - The target object in which all sources are merged into.\n\t * @param {Object|Array(Object)} source - Object(s) to merge into `target`.\n\t * @returns {Object} The `target` object.\n\t */\n\tmergeIf: function(target, source) {\n\t\treturn helpers.merge(target, source, {merger: helpers._mergerIf});\n\t},\n\n\t/**\n\t * Applies the contents of two or more objects together into the first object.\n\t * @param {Object} target - The target object in which all objects are merged into.\n\t * @param {Object} arg1 - Object containing additional properties to merge in target.\n\t * @param {Object} argN - Additional objects containing properties to merge in target.\n\t * @returns {Object} The `target` object.\n\t */\n\textend: function(target) {\n\t\tvar setFn = function(value, key) {\n\t\t\ttarget[key] = value;\n\t\t};\n\t\tfor (var i = 1, ilen = arguments.length; i < ilen; ++i) {\n\t\t\thelpers.each(arguments[i], setFn);\n\t\t}\n\t\treturn target;\n\t},\n\n\t/**\n\t * Basic javascript inheritance based on the model created in Backbone.js\n\t */\n\tinherits: function(extensions) {\n\t\tvar me = this;\n\t\tvar ChartElement = (extensions && extensions.hasOwnProperty('constructor')) ? extensions.constructor : function() {\n\t\t\treturn me.apply(this, arguments);\n\t\t};\n\n\t\tvar Surrogate = function() {\n\t\t\tthis.constructor = ChartElement;\n\t\t};\n\n\t\tSurrogate.prototype = me.prototype;\n\t\tChartElement.prototype = new Surrogate();\n\t\tChartElement.extend = helpers.inherits;\n\n\t\tif (extensions) {\n\t\t\thelpers.extend(ChartElement.prototype, extensions);\n\t\t}\n\n\t\tChartElement.__super__ = me.prototype;\n\t\treturn ChartElement;\n\t}\n};\n\nmodule.exports = helpers;\n\n// DEPRECATIONS\n\n/**\n * Provided for backward compatibility, use Chart.helpers.callback instead.\n * @function Chart.helpers.callCallback\n * @deprecated since version 2.6.0\n * @todo remove at version 3\n * @private\n */\nhelpers.callCallback = helpers.callback;\n\n/**\n * Provided for backward compatibility, use Array.prototype.indexOf instead.\n * Array.prototype.indexOf compatibility: Chrome, Opera, Safari, FF1.5+, IE9+\n * @function Chart.helpers.indexOf\n * @deprecated since version 2.7.0\n * @todo remove at version 3\n * @private\n */\nhelpers.indexOf = function(array, item, fromIndex) {\n\treturn Array.prototype.indexOf.call(array, item, fromIndex);\n};\n\n/**\n * Provided for backward compatibility, use Chart.helpers.valueOrDefault instead.\n * @function Chart.helpers.getValueOrDefault\n * @deprecated since version 2.7.0\n * @todo remove at version 3\n * @private\n */\nhelpers.getValueOrDefault = helpers.valueOrDefault;\n\n/**\n * Provided for backward compatibility, use Chart.helpers.valueAtIndexOrDefault instead.\n * @function Chart.helpers.getValueAtIndexOrDefault\n * @deprecated since version 2.7.0\n * @todo remove at version 3\n * @private\n */\nhelpers.getValueAtIndexOrDefault = helpers.valueAtIndexOrDefault;\n","'use strict';\n\nmodule.exports = function(Chart) {\n\n\tChart.Bar = function(context, config) {\n\t\tconfig.type = 'bar';\n\n\t\treturn new Chart(context, config);\n\t};\n\n};\n","'use strict';\n\nvar helpers = require('./helpers.core');\n\n/**\n * @namespace Chart.helpers.canvas\n */\nvar exports = module.exports = {\n\t/**\n\t * Clears the entire canvas associated to the given `chart`.\n\t * @param {Chart} chart - The chart for which to clear the canvas.\n\t */\n\tclear: function(chart) {\n\t\tchart.ctx.clearRect(0, 0, chart.width, chart.height);\n\t},\n\n\t/**\n\t * Creates a \"path\" for a rectangle with rounded corners at position (x, y) with a\n\t * given size (width, height) and the same `radius` for all corners.\n\t * @param {CanvasRenderingContext2D} ctx - The canvas 2D Context.\n\t * @param {Number} x - The x axis of the coordinate for the rectangle starting point.\n\t * @param {Number} y - The y axis of the coordinate for the rectangle starting point.\n\t * @param {Number} width - The rectangle's width.\n\t * @param {Number} height - The rectangle's height.\n\t * @param {Number} radius - The rounded amount (in pixels) for the four corners.\n\t * @todo handle `radius` as top-left, top-right, bottom-right, bottom-left array/object?\n\t */\n\troundedRect: function(ctx, x, y, width, height, radius) {\n\t\tif (radius) {\n\t\t\t// NOTE(SB) `epsilon` helps to prevent minor artifacts appearing\n\t\t\t// on Chrome when `r` is exactly half the height or the width.\n\t\t\tvar epsilon = 0.0000001;\n\t\t\tvar r = Math.min(radius, (height / 2) - epsilon, (width / 2) - epsilon);\n\n\t\t\tctx.moveTo(x + r, y);\n\t\t\tctx.lineTo(x + width - r, y);\n\t\t\tctx.arcTo(x + width, y, x + width, y + r, r);\n\t\t\tctx.lineTo(x + width, y + height - r);\n\t\t\tctx.arcTo(x + width, y + height, x + width - r, y + height, r);\n\t\t\tctx.lineTo(x + r, y + height);\n\t\t\tctx.arcTo(x, y + height, x, y + height - r, r);\n\t\t\tctx.lineTo(x, y + r);\n\t\t\tctx.arcTo(x, y, x + r, y, r);\n\t\t\tctx.closePath();\n\t\t\tctx.moveTo(x, y);\n\t\t} else {\n\t\t\tctx.rect(x, y, width, height);\n\t\t}\n\t},\n\n\tdrawPoint: function(ctx, style, radius, x, y, rotation) {\n\t\tvar type, edgeLength, xOffset, yOffset, height, size;\n\t\trotation = rotation || 0;\n\n\t\tif (style && typeof style === 'object') {\n\t\t\ttype = style.toString();\n\t\t\tif (type === '[object HTMLImageElement]' || type === '[object HTMLCanvasElement]') {\n\t\t\t\tctx.drawImage(style, x - style.width / 2, y - style.height / 2, style.width, style.height);\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\n\t\tif (isNaN(radius) || radius <= 0) {\n\t\t\treturn;\n\t\t}\n\n\t\tctx.save();\n\t\tctx.translate(x, y);\n\t\tctx.rotate(rotation * Math.PI / 180);\n\t\tctx.beginPath();\n\n\t\tswitch (style) {\n\t\t// Default includes circle\n\t\tdefault:\n\t\t\tctx.arc(0, 0, radius, 0, Math.PI * 2);\n\t\t\tctx.closePath();\n\t\t\tbreak;\n\t\tcase 'triangle':\n\t\t\tedgeLength = 3 * radius / Math.sqrt(3);\n\t\t\theight = edgeLength * Math.sqrt(3) / 2;\n\t\t\tctx.moveTo(-edgeLength / 2, height / 3);\n\t\t\tctx.lineTo(edgeLength / 2, height / 3);\n\t\t\tctx.lineTo(0, -2 * height / 3);\n\t\t\tctx.closePath();\n\t\t\tbreak;\n\t\tcase 'rect':\n\t\t\tsize = 1 / Math.SQRT2 * radius;\n\t\t\tctx.rect(-size, -size, 2 * size, 2 * size);\n\t\t\tbreak;\n\t\tcase 'rectRounded':\n\t\t\tvar offset = radius / Math.SQRT2;\n\t\t\tvar leftX = -offset;\n\t\t\tvar topY = -offset;\n\t\t\tvar sideSize = Math.SQRT2 * radius;\n\n\t\t\t// NOTE(SB) the rounded rect implementation changed to use `arcTo`\n\t\t\t// instead of `quadraticCurveTo` since it generates better results\n\t\t\t// when rect is almost a circle. 0.425 (instead of 0.5) produces\n\t\t\t// results visually closer to the previous impl.\n\t\t\tthis.roundedRect(ctx, leftX, topY, sideSize, sideSize, radius * 0.425);\n\t\t\tbreak;\n\t\tcase 'rectRot':\n\t\t\tsize = 1 / Math.SQRT2 * radius;\n\t\t\tctx.moveTo(-size, 0);\n\t\t\tctx.lineTo(0, size);\n\t\t\tctx.lineTo(size, 0);\n\t\t\tctx.lineTo(0, -size);\n\t\t\tctx.closePath();\n\t\t\tbreak;\n\t\tcase 'cross':\n\t\t\tctx.moveTo(0, radius);\n\t\t\tctx.lineTo(0, -radius);\n\t\t\tctx.moveTo(-radius, 0);\n\t\t\tctx.lineTo(radius, 0);\n\t\t\tbreak;\n\t\tcase 'crossRot':\n\t\t\txOffset = Math.cos(Math.PI / 4) * radius;\n\t\t\tyOffset = Math.sin(Math.PI / 4) * radius;\n\t\t\tctx.moveTo(-xOffset, -yOffset);\n\t\t\tctx.lineTo(xOffset, yOffset);\n\t\t\tctx.moveTo(-xOffset, yOffset);\n\t\t\tctx.lineTo(xOffset, -yOffset);\n\t\t\tbreak;\n\t\tcase 'star':\n\t\t\tctx.moveTo(0, radius);\n\t\t\tctx.lineTo(0, -radius);\n\t\t\tctx.moveTo(-radius, 0);\n\t\t\tctx.lineTo(radius, 0);\n\t\t\txOffset = Math.cos(Math.PI / 4) * radius;\n\t\t\tyOffset = Math.sin(Math.PI / 4) * radius;\n\t\t\tctx.moveTo(-xOffset, -yOffset);\n\t\t\tctx.lineTo(xOffset, yOffset);\n\t\t\tctx.moveTo(-xOffset, yOffset);\n\t\t\tctx.lineTo(xOffset, -yOffset);\n\t\t\tbreak;\n\t\tcase 'line':\n\t\t\tctx.moveTo(-radius, 0);\n\t\t\tctx.lineTo(radius, 0);\n\t\t\tbreak;\n\t\tcase 'dash':\n\t\t\tctx.moveTo(0, 0);\n\t\t\tctx.lineTo(radius, 0);\n\t\t\tbreak;\n\t\t}\n\n\t\tctx.fill();\n\t\tctx.stroke();\n\t\tctx.restore();\n\t},\n\n\tclipArea: function(ctx, area) {\n\t\tctx.save();\n\t\tctx.beginPath();\n\t\tctx.rect(area.left, area.top, area.right - area.left, area.bottom - area.top);\n\t\tctx.clip();\n\t},\n\n\tunclipArea: function(ctx) {\n\t\tctx.restore();\n\t},\n\n\tlineTo: function(ctx, previous, target, flip) {\n\t\tif (target.steppedLine) {\n\t\t\tif ((target.steppedLine === 'after' && !flip) || (target.steppedLine !== 'after' && flip)) {\n\t\t\t\tctx.lineTo(previous.x, target.y);\n\t\t\t} else {\n\t\t\t\tctx.lineTo(target.x, previous.y);\n\t\t\t}\n\t\t\tctx.lineTo(target.x, target.y);\n\t\t\treturn;\n\t\t}\n\n\t\tif (!target.tension) {\n\t\t\tctx.lineTo(target.x, target.y);\n\t\t\treturn;\n\t\t}\n\n\t\tctx.bezierCurveTo(\n\t\t\tflip ? previous.controlPointPreviousX : previous.controlPointNextX,\n\t\t\tflip ? previous.controlPointPreviousY : previous.controlPointNextY,\n\t\t\tflip ? target.controlPointNextX : target.controlPointPreviousX,\n\t\t\tflip ? target.controlPointNextY : target.controlPointPreviousY,\n\t\t\ttarget.x,\n\t\t\ttarget.y);\n\t}\n};\n\n// DEPRECATIONS\n\n/**\n * Provided for backward compatibility, use Chart.helpers.canvas.clear instead.\n * @namespace Chart.helpers.clear\n * @deprecated since version 2.7.0\n * @todo remove at version 3\n * @private\n */\nhelpers.clear = exports.clear;\n\n/**\n * Provided for backward compatibility, use Chart.helpers.canvas.roundedRect instead.\n * @namespace Chart.helpers.drawRoundedRectangle\n * @deprecated since version 2.7.0\n * @todo remove at version 3\n * @private\n */\nhelpers.drawRoundedRectangle = function(ctx) {\n\tctx.beginPath();\n\texports.roundedRect.apply(exports, arguments);\n};\n","'use strict';\n\nvar defaults = require('../core/core.defaults');\n\ndefaults._set('scatter', {\n\thover: {\n\t\tmode: 'single'\n\t},\n\n\tscales: {\n\t\txAxes: [{\n\t\t\tid: 'x-axis-1',    // need an ID so datasets can reference the scale\n\t\t\ttype: 'linear',    // scatter should not use a category axis\n\t\t\tposition: 'bottom'\n\t\t}],\n\t\tyAxes: [{\n\t\t\tid: 'y-axis-1',\n\t\t\ttype: 'linear',\n\t\t\tposition: 'left'\n\t\t}]\n\t},\n\n\tshowLines: false,\n\n\ttooltips: {\n\t\tcallbacks: {\n\t\t\ttitle: function() {\n\t\t\t\treturn '';     // doesn't make sense for scatter since data are formatted as a point\n\t\t\t},\n\t\t\tlabel: function(item) {\n\t\t\t\treturn '(' + item.xLabel + ', ' + item.yLabel + ')';\n\t\t\t}\n\t\t}\n\t}\n});\n\nmodule.exports = function(Chart) {\n\n\t// Scatter charts use line controllers\n\tChart.controllers.scatter = Chart.controllers.line;\n\n};\n","'use strict';\n\nvar defaults = require('../core/core.defaults');\nvar Element = require('../core/core.element');\nvar helpers = require('../helpers/index');\n\nvar globalDefaults = defaults.global;\n\ndefaults._set('global', {\n\telements: {\n\t\tline: {\n\t\t\ttension: 0.4,\n\t\t\tbackgroundColor: globalDefaults.defaultColor,\n\t\t\tborderWidth: 3,\n\t\t\tborderColor: globalDefaults.defaultColor,\n\t\t\tborderCapStyle: 'butt',\n\t\t\tborderDash: [],\n\t\t\tborderDashOffset: 0.0,\n\t\t\tborderJoinStyle: 'miter',\n\t\t\tcapBezierPoints: true,\n\t\t\tfill: true, // do we fill in the area between the line and its base axis\n\t\t}\n\t}\n});\n\nmodule.exports = Element.extend({\n\tdraw: function() {\n\t\tvar me = this;\n\t\tvar vm = me._view;\n\t\tvar ctx = me._chart.ctx;\n\t\tvar spanGaps = vm.spanGaps;\n\t\tvar points = me._children.slice(); // clone array\n\t\tvar globalOptionLineElements = globalDefaults.elements.line;\n\t\tvar lastDrawnIndex = -1;\n\t\tvar index, current, previous, currentVM;\n\n\t\t// If we are looping, adding the first point again\n\t\tif (me._loop && points.length) {\n\t\t\tpoints.push(points[0]);\n\t\t}\n\n\t\tctx.save();\n\n\t\t// Stroke Line Options\n\t\tctx.lineCap = vm.borderCapStyle || globalOptionLineElements.borderCapStyle;\n\n\t\t// IE 9 and 10 do not support line dash\n\t\tif (ctx.setLineDash) {\n\t\t\tctx.setLineDash(vm.borderDash || globalOptionLineElements.borderDash);\n\t\t}\n\n\t\tctx.lineDashOffset = vm.borderDashOffset || globalOptionLineElements.borderDashOffset;\n\t\tctx.lineJoin = vm.borderJoinStyle || globalOptionLineElements.borderJoinStyle;\n\t\tctx.lineWidth = vm.borderWidth || globalOptionLineElements.borderWidth;\n\t\tctx.strokeStyle = vm.borderColor || globalDefaults.defaultColor;\n\n\t\t// Stroke Line\n\t\tctx.beginPath();\n\t\tlastDrawnIndex = -1;\n\n\t\tfor (index = 0; index < points.length; ++index) {\n\t\t\tcurrent = points[index];\n\t\t\tprevious = helpers.previousItem(points, index);\n\t\t\tcurrentVM = current._view;\n\n\t\t\t// First point moves to it's starting position no matter what\n\t\t\tif (index === 0) {\n\t\t\t\tif (!currentVM.skip) {\n\t\t\t\t\tctx.moveTo(currentVM.x, currentVM.y);\n\t\t\t\t\tlastDrawnIndex = index;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tprevious = lastDrawnIndex === -1 ? previous : points[lastDrawnIndex];\n\n\t\t\t\tif (!currentVM.skip) {\n\t\t\t\t\tif ((lastDrawnIndex !== (index - 1) && !spanGaps) || lastDrawnIndex === -1) {\n\t\t\t\t\t\t// There was a gap and this is the first point after the gap\n\t\t\t\t\t\tctx.moveTo(currentVM.x, currentVM.y);\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// Line to next point\n\t\t\t\t\t\thelpers.canvas.lineTo(ctx, previous._view, current._view);\n\t\t\t\t\t}\n\t\t\t\t\tlastDrawnIndex = index;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tctx.stroke();\n\t\tctx.restore();\n\t}\n});\n","'use strict';\n\nvar Animation = require('./core.animation');\nvar animations = require('./core.animations');\nvar defaults = require('./core.defaults');\nvar helpers = require('../helpers/index');\nvar Interaction = require('./core.interaction');\nvar layouts = require('./core.layouts');\nvar platform = require('../platforms/platform');\nvar plugins = require('./core.plugins');\nvar scaleService = require('../core/core.scaleService');\nvar Tooltip = require('./core.tooltip');\n\nmodule.exports = function(Chart) {\n\n\t// Create a dictionary of chart types, to allow for extension of existing types\n\tChart.types = {};\n\n\t// Store a reference to each instance - allowing us to globally resize chart instances on window resize.\n\t// Destroy method on the chart will remove the instance of the chart from this reference.\n\tChart.instances = {};\n\n\t// Controllers available for dataset visualization eg. bar, line, slice, etc.\n\tChart.controllers = {};\n\n\t/**\n\t * Initializes the given config with global and chart default values.\n\t */\n\tfunction initConfig(config) {\n\t\tconfig = config || {};\n\n\t\t// Do NOT use configMerge() for the data object because this method merges arrays\n\t\t// and so would change references to labels and datasets, preventing data updates.\n\t\tvar data = config.data = config.data || {};\n\t\tdata.datasets = data.datasets || [];\n\t\tdata.labels = data.labels || [];\n\n\t\tconfig.options = helpers.configMerge(\n\t\t\tdefaults.global,\n\t\t\tdefaults[config.type],\n\t\t\tconfig.options || {});\n\n\t\treturn config;\n\t}\n\n\t/**\n\t * Updates the config of the chart\n\t * @param chart {Chart} chart to update the options for\n\t */\n\tfunction updateConfig(chart) {\n\t\tvar newOptions = chart.options;\n\n\t\thelpers.each(chart.scales, function(scale) {\n\t\t\tlayouts.removeBox(chart, scale);\n\t\t});\n\n\t\tnewOptions = helpers.configMerge(\n\t\t\tChart.defaults.global,\n\t\t\tChart.defaults[chart.config.type],\n\t\t\tnewOptions);\n\n\t\tchart.options = chart.config.options = newOptions;\n\t\tchart.ensureScalesHaveIDs();\n\t\tchart.buildOrUpdateScales();\n\t\t// Tooltip\n\t\tchart.tooltip._options = newOptions.tooltips;\n\t\tchart.tooltip.initialize();\n\t}\n\n\tfunction positionIsHorizontal(position) {\n\t\treturn position === 'top' || position === 'bottom';\n\t}\n\n\thelpers.extend(Chart.prototype, /** @lends Chart */ {\n\t\t/**\n\t\t * @private\n\t\t */\n\t\tconstruct: function(item, config) {\n\t\t\tvar me = this;\n\n\t\t\tconfig = initConfig(config);\n\n\t\t\tvar context = platform.acquireContext(item, config);\n\t\t\tvar canvas = context && context.canvas;\n\t\t\tvar height = canvas && canvas.height;\n\t\t\tvar width = canvas && canvas.width;\n\n\t\t\tme.id = helpers.uid();\n\t\t\tme.ctx = context;\n\t\t\tme.canvas = canvas;\n\t\t\tme.config = config;\n\t\t\tme.width = width;\n\t\t\tme.height = height;\n\t\t\tme.aspectRatio = height ? width / height : null;\n\t\t\tme.options = config.options;\n\t\t\tme._bufferedRender = false;\n\n\t\t\t/**\n\t\t\t * Provided for backward compatibility, Chart and Chart.Controller have been merged,\n\t\t\t * the \"instance\" still need to be defined since it might be called from plugins.\n\t\t\t * @prop Chart#chart\n\t\t\t * @deprecated since version 2.6.0\n\t\t\t * @todo remove at version 3\n\t\t\t * @private\n\t\t\t */\n\t\t\tme.chart = me;\n\t\t\tme.controller = me; // chart.chart.controller #inception\n\n\t\t\t// Add the chart instance to the global namespace\n\t\t\tChart.instances[me.id] = me;\n\n\t\t\t// Define alias to the config data: `chart.data === chart.config.data`\n\t\t\tObject.defineProperty(me, 'data', {\n\t\t\t\tget: function() {\n\t\t\t\t\treturn me.config.data;\n\t\t\t\t},\n\t\t\t\tset: function(value) {\n\t\t\t\t\tme.config.data = value;\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tif (!context || !canvas) {\n\t\t\t\t// The given item is not a compatible context2d element, let's return before finalizing\n\t\t\t\t// the chart initialization but after setting basic chart / controller properties that\n\t\t\t\t// can help to figure out that the chart is not valid (e.g chart.canvas !== null);\n\t\t\t\t// https://github.com/chartjs/Chart.js/issues/2807\n\t\t\t\tconsole.error(\"Failed to create chart: can't acquire context from the given item\");\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tme.initialize();\n\t\t\tme.update();\n\t\t},\n\n\t\t/**\n\t\t * @private\n\t\t */\n\t\tinitialize: function() {\n\t\t\tvar me = this;\n\n\t\t\t// Before init plugin notification\n\t\t\tplugins.notify(me, 'beforeInit');\n\n\t\t\thelpers.retinaScale(me, me.options.devicePixelRatio);\n\n\t\t\tme.bindEvents();\n\n\t\t\tif (me.options.responsive) {\n\t\t\t\t// Initial resize before chart draws (must be silent to preserve initial animations).\n\t\t\t\tme.resize(true);\n\t\t\t}\n\n\t\t\t// Make sure scales have IDs and are built before we build any controllers.\n\t\t\tme.ensureScalesHaveIDs();\n\t\t\tme.buildOrUpdateScales();\n\t\t\tme.initToolTip();\n\n\t\t\t// After init plugin notification\n\t\t\tplugins.notify(me, 'afterInit');\n\n\t\t\treturn me;\n\t\t},\n\n\t\tclear: function() {\n\t\t\thelpers.canvas.clear(this);\n\t\t\treturn this;\n\t\t},\n\n\t\tstop: function() {\n\t\t\t// Stops any current animation loop occurring\n\t\t\tanimations.cancelAnimation(this);\n\t\t\treturn this;\n\t\t},\n\n\t\tresize: function(silent) {\n\t\t\tvar me = this;\n\t\t\tvar options = me.options;\n\t\t\tvar canvas = me.canvas;\n\t\t\tvar aspectRatio = (options.maintainAspectRatio && me.aspectRatio) || null;\n\n\t\t\t// the canvas render width and height will be casted to integers so make sure that\n\t\t\t// the canvas display style uses the same integer values to avoid blurring effect.\n\n\t\t\t// Set to 0 instead of canvas.size because the size defaults to 300x150 if the element is collapsed\n\t\t\tvar newWidth = Math.max(0, Math.floor(helpers.getMaximumWidth(canvas)));\n\t\t\tvar newHeight = Math.max(0, Math.floor(aspectRatio ? newWidth / aspectRatio : helpers.getMaximumHeight(canvas)));\n\n\t\t\tif (me.width === newWidth && me.height === newHeight) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tcanvas.width = me.width = newWidth;\n\t\t\tcanvas.height = me.height = newHeight;\n\t\t\tcanvas.style.width = newWidth + 'px';\n\t\t\tcanvas.style.height = newHeight + 'px';\n\n\t\t\thelpers.retinaScale(me, options.devicePixelRatio);\n\n\t\t\tif (!silent) {\n\t\t\t\t// Notify any plugins about the resize\n\t\t\t\tvar newSize = {width: newWidth, height: newHeight};\n\t\t\t\tplugins.notify(me, 'resize', [newSize]);\n\n\t\t\t\t// Notify of resize\n\t\t\t\tif (me.options.onResize) {\n\t\t\t\t\tme.options.onResize(me, newSize);\n\t\t\t\t}\n\n\t\t\t\tme.stop();\n\t\t\t\tme.update({\n\t\t\t\t\tduration: me.options.responsiveAnimationDuration\n\t\t\t\t});\n\t\t\t}\n\t\t},\n\n\t\tensureScalesHaveIDs: function() {\n\t\t\tvar options = this.options;\n\t\t\tvar scalesOptions = options.scales || {};\n\t\t\tvar scaleOptions = options.scale;\n\n\t\t\thelpers.each(scalesOptions.xAxes, function(xAxisOptions, index) {\n\t\t\t\txAxisOptions.id = xAxisOptions.id || ('x-axis-' + index);\n\t\t\t});\n\n\t\t\thelpers.each(scalesOptions.yAxes, function(yAxisOptions, index) {\n\t\t\t\tyAxisOptions.id = yAxisOptions.id || ('y-axis-' + index);\n\t\t\t});\n\n\t\t\tif (scaleOptions) {\n\t\t\t\tscaleOptions.id = scaleOptions.id || 'scale';\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * Builds a map of scale ID to scale object for future lookup.\n\t\t */\n\t\tbuildOrUpdateScales: function() {\n\t\t\tvar me = this;\n\t\t\tvar options = me.options;\n\t\t\tvar scales = me.scales || {};\n\t\t\tvar items = [];\n\t\t\tvar updated = Object.keys(scales).reduce(function(obj, id) {\n\t\t\t\tobj[id] = false;\n\t\t\t\treturn obj;\n\t\t\t}, {});\n\n\t\t\tif (options.scales) {\n\t\t\t\titems = items.concat(\n\t\t\t\t\t(options.scales.xAxes || []).map(function(xAxisOptions) {\n\t\t\t\t\t\treturn {options: xAxisOptions, dtype: 'category', dposition: 'bottom'};\n\t\t\t\t\t}),\n\t\t\t\t\t(options.scales.yAxes || []).map(function(yAxisOptions) {\n\t\t\t\t\t\treturn {options: yAxisOptions, dtype: 'linear', dposition: 'left'};\n\t\t\t\t\t})\n\t\t\t\t);\n\t\t\t}\n\n\t\t\tif (options.scale) {\n\t\t\t\titems.push({\n\t\t\t\t\toptions: options.scale,\n\t\t\t\t\tdtype: 'radialLinear',\n\t\t\t\t\tisDefault: true,\n\t\t\t\t\tdposition: 'chartArea'\n\t\t\t\t});\n\t\t\t}\n\n\t\t\thelpers.each(items, function(item) {\n\t\t\t\tvar scaleOptions = item.options;\n\t\t\t\tvar id = scaleOptions.id;\n\t\t\t\tvar scaleType = helpers.valueOrDefault(scaleOptions.type, item.dtype);\n\n\t\t\t\tif (positionIsHorizontal(scaleOptions.position) !== positionIsHorizontal(item.dposition)) {\n\t\t\t\t\tscaleOptions.position = item.dposition;\n\t\t\t\t}\n\n\t\t\t\tupdated[id] = true;\n\t\t\t\tvar scale = null;\n\t\t\t\tif (id in scales && scales[id].type === scaleType) {\n\t\t\t\t\tscale = scales[id];\n\t\t\t\t\tscale.options = scaleOptions;\n\t\t\t\t\tscale.ctx = me.ctx;\n\t\t\t\t\tscale.chart = me;\n\t\t\t\t} else {\n\t\t\t\t\tvar scaleClass = scaleService.getScaleConstructor(scaleType);\n\t\t\t\t\tif (!scaleClass) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t\tscale = new scaleClass({\n\t\t\t\t\t\tid: id,\n\t\t\t\t\t\ttype: scaleType,\n\t\t\t\t\t\toptions: scaleOptions,\n\t\t\t\t\t\tctx: me.ctx,\n\t\t\t\t\t\tchart: me\n\t\t\t\t\t});\n\t\t\t\t\tscales[scale.id] = scale;\n\t\t\t\t}\n\n\t\t\t\tscale.mergeTicksOptions();\n\n\t\t\t\t// TODO(SB): I think we should be able to remove this custom case (options.scale)\n\t\t\t\t// and consider it as a regular scale part of the \"scales\"\" map only! This would\n\t\t\t\t// make the logic easier and remove some useless? custom code.\n\t\t\t\tif (item.isDefault) {\n\t\t\t\t\tme.scale = scale;\n\t\t\t\t}\n\t\t\t});\n\t\t\t// clear up discarded scales\n\t\t\thelpers.each(updated, function(hasUpdated, id) {\n\t\t\t\tif (!hasUpdated) {\n\t\t\t\t\tdelete scales[id];\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tme.scales = scales;\n\n\t\t\tscaleService.addScalesToLayout(this);\n\t\t},\n\n\t\tbuildOrUpdateControllers: function() {\n\t\t\tvar me = this;\n\t\t\tvar types = [];\n\t\t\tvar newControllers = [];\n\n\t\t\thelpers.each(me.data.datasets, function(dataset, datasetIndex) {\n\t\t\t\tvar meta = me.getDatasetMeta(datasetIndex);\n\t\t\t\tvar type = dataset.type || me.config.type;\n\n\t\t\t\tif (meta.type && meta.type !== type) {\n\t\t\t\t\tme.destroyDatasetMeta(datasetIndex);\n\t\t\t\t\tmeta = me.getDatasetMeta(datasetIndex);\n\t\t\t\t}\n\t\t\t\tmeta.type = type;\n\n\t\t\t\ttypes.push(meta.type);\n\n\t\t\t\tif (meta.controller) {\n\t\t\t\t\tmeta.controller.updateIndex(datasetIndex);\n\t\t\t\t\tmeta.controller.linkScales();\n\t\t\t\t} else {\n\t\t\t\t\tvar ControllerClass = Chart.controllers[meta.type];\n\t\t\t\t\tif (ControllerClass === undefined) {\n\t\t\t\t\t\tthrow new Error('\"' + meta.type + '\" is not a chart type.');\n\t\t\t\t\t}\n\n\t\t\t\t\tmeta.controller = new ControllerClass(me, datasetIndex);\n\t\t\t\t\tnewControllers.push(meta.controller);\n\t\t\t\t}\n\t\t\t}, me);\n\n\t\t\treturn newControllers;\n\t\t},\n\n\t\t/**\n\t\t * Reset the elements of all datasets\n\t\t * @private\n\t\t */\n\t\tresetElements: function() {\n\t\t\tvar me = this;\n\t\t\thelpers.each(me.data.datasets, function(dataset, datasetIndex) {\n\t\t\t\tme.getDatasetMeta(datasetIndex).controller.reset();\n\t\t\t}, me);\n\t\t},\n\n\t\t/**\n\t\t* Resets the chart back to it's state before the initial animation\n\t\t*/\n\t\treset: function() {\n\t\t\tthis.resetElements();\n\t\t\tthis.tooltip.initialize();\n\t\t},\n\n\t\tupdate: function(config) {\n\t\t\tvar me = this;\n\n\t\t\tif (!config || typeof config !== 'object') {\n\t\t\t\t// backwards compatibility\n\t\t\t\tconfig = {\n\t\t\t\t\tduration: config,\n\t\t\t\t\tlazy: arguments[1]\n\t\t\t\t};\n\t\t\t}\n\n\t\t\tupdateConfig(me);\n\n\t\t\t// plugins options references might have change, let's invalidate the cache\n\t\t\t// https://github.com/chartjs/Chart.js/issues/5111#issuecomment-355934167\n\t\t\tplugins._invalidate(me);\n\n\t\t\tif (plugins.notify(me, 'beforeUpdate') === false) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// In case the entire data object changed\n\t\t\tme.tooltip._data = me.data;\n\n\t\t\t// Make sure dataset controllers are updated and new controllers are reset\n\t\t\tvar newControllers = me.buildOrUpdateControllers();\n\n\t\t\t// Make sure all dataset controllers have correct meta data counts\n\t\t\thelpers.each(me.data.datasets, function(dataset, datasetIndex) {\n\t\t\t\tme.getDatasetMeta(datasetIndex).controller.buildOrUpdateElements();\n\t\t\t}, me);\n\n\t\t\tme.updateLayout();\n\n\t\t\t// Can only reset the new controllers after the scales have been updated\n\t\t\tif (me.options.animation && me.options.animation.duration) {\n\t\t\t\thelpers.each(newControllers, function(controller) {\n\t\t\t\t\tcontroller.reset();\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tme.updateDatasets();\n\n\t\t\t// Need to reset tooltip in case it is displayed with elements that are removed\n\t\t\t// after update.\n\t\t\tme.tooltip.initialize();\n\n\t\t\t// Last active contains items that were previously in the tooltip.\n\t\t\t// When we reset the tooltip, we need to clear it\n\t\t\tme.lastActive = [];\n\n\t\t\t// Do this before render so that any plugins that need final scale updates can use it\n\t\t\tplugins.notify(me, 'afterUpdate');\n\n\t\t\tif (me._bufferedRender) {\n\t\t\t\tme._bufferedRequest = {\n\t\t\t\t\tduration: config.duration,\n\t\t\t\t\teasing: config.easing,\n\t\t\t\t\tlazy: config.lazy\n\t\t\t\t};\n\t\t\t} else {\n\t\t\t\tme.render(config);\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * Updates the chart layout unless a plugin returns `false` to the `beforeLayout`\n\t\t * hook, in which case, plugins will not be called on `afterLayout`.\n\t\t * @private\n\t\t */\n\t\tupdateLayout: function() {\n\t\t\tvar me = this;\n\n\t\t\tif (plugins.notify(me, 'beforeLayout') === false) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tlayouts.update(this, this.width, this.height);\n\n\t\t\t/**\n\t\t\t * Provided for backward compatibility, use `afterLayout` instead.\n\t\t\t * @method IPlugin#afterScaleUpdate\n\t\t\t * @deprecated since version 2.5.0\n\t\t\t * @todo remove at version 3\n\t\t\t * @private\n\t\t\t */\n\t\t\tplugins.notify(me, 'afterScaleUpdate');\n\t\t\tplugins.notify(me, 'afterLayout');\n\t\t},\n\n\t\t/**\n\t\t * Updates all datasets unless a plugin returns `false` to the `beforeDatasetsUpdate`\n\t\t * hook, in which case, plugins will not be called on `afterDatasetsUpdate`.\n\t\t * @private\n\t\t */\n\t\tupdateDatasets: function() {\n\t\t\tvar me = this;\n\n\t\t\tif (plugins.notify(me, 'beforeDatasetsUpdate') === false) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tfor (var i = 0, ilen = me.data.datasets.length; i < ilen; ++i) {\n\t\t\t\tme.updateDataset(i);\n\t\t\t}\n\n\t\t\tplugins.notify(me, 'afterDatasetsUpdate');\n\t\t},\n\n\t\t/**\n\t\t * Updates dataset at index unless a plugin returns `false` to the `beforeDatasetUpdate`\n\t\t * hook, in which case, plugins will not be called on `afterDatasetUpdate`.\n\t\t * @private\n\t\t */\n\t\tupdateDataset: function(index) {\n\t\t\tvar me = this;\n\t\t\tvar meta = me.getDatasetMeta(index);\n\t\t\tvar args = {\n\t\t\t\tmeta: meta,\n\t\t\t\tindex: index\n\t\t\t};\n\n\t\t\tif (plugins.notify(me, 'beforeDatasetUpdate', [args]) === false) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tmeta.controller.update();\n\n\t\t\tplugins.notify(me, 'afterDatasetUpdate', [args]);\n\t\t},\n\n\t\trender: function(config) {\n\t\t\tvar me = this;\n\n\t\t\tif (!config || typeof config !== 'object') {\n\t\t\t\t// backwards compatibility\n\t\t\t\tconfig = {\n\t\t\t\t\tduration: config,\n\t\t\t\t\tlazy: arguments[1]\n\t\t\t\t};\n\t\t\t}\n\n\t\t\tvar duration = config.duration;\n\t\t\tvar lazy = config.lazy;\n\n\t\t\tif (plugins.notify(me, 'beforeRender') === false) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tvar animationOptions = me.options.animation;\n\t\t\tvar onComplete = function(animation) {\n\t\t\t\tplugins.notify(me, 'afterRender');\n\t\t\t\thelpers.callback(animationOptions && animationOptions.onComplete, [animation], me);\n\t\t\t};\n\n\t\t\tif (animationOptions && ((typeof duration !== 'undefined' && duration !== 0) || (typeof duration === 'undefined' && animationOptions.duration !== 0))) {\n\t\t\t\tvar animation = new Animation({\n\t\t\t\t\tnumSteps: (duration || animationOptions.duration) / 16.66, // 60 fps\n\t\t\t\t\teasing: config.easing || animationOptions.easing,\n\n\t\t\t\t\trender: function(chart, animationObject) {\n\t\t\t\t\t\tvar easingFunction = helpers.easing.effects[animationObject.easing];\n\t\t\t\t\t\tvar currentStep = animationObject.currentStep;\n\t\t\t\t\t\tvar stepDecimal = currentStep / animationObject.numSteps;\n\n\t\t\t\t\t\tchart.draw(easingFunction(stepDecimal), stepDecimal, currentStep);\n\t\t\t\t\t},\n\n\t\t\t\t\tonAnimationProgress: animationOptions.onProgress,\n\t\t\t\t\tonAnimationComplete: onComplete\n\t\t\t\t});\n\n\t\t\t\tanimations.addAnimation(me, animation, duration, lazy);\n\t\t\t} else {\n\t\t\t\tme.draw();\n\n\t\t\t\t// See https://github.com/chartjs/Chart.js/issues/3781\n\t\t\t\tonComplete(new Animation({numSteps: 0, chart: me}));\n\t\t\t}\n\n\t\t\treturn me;\n\t\t},\n\n\t\tdraw: function(easingValue) {\n\t\t\tvar me = this;\n\n\t\t\tme.clear();\n\n\t\t\tif (helpers.isNullOrUndef(easingValue)) {\n\t\t\t\teasingValue = 1;\n\t\t\t}\n\n\t\t\tme.transition(easingValue);\n\n\t\t\tif (me.width <= 0 || me.height <= 0) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (plugins.notify(me, 'beforeDraw', [easingValue]) === false) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// Draw all the scales\n\t\t\thelpers.each(me.boxes, function(box) {\n\t\t\t\tbox.draw(me.chartArea);\n\t\t\t}, me);\n\n\t\t\tif (me.scale) {\n\t\t\t\tme.scale.draw();\n\t\t\t}\n\n\t\t\tme.drawDatasets(easingValue);\n\t\t\tme._drawTooltip(easingValue);\n\n\t\t\tplugins.notify(me, 'afterDraw', [easingValue]);\n\t\t},\n\n\t\t/**\n\t\t * @private\n\t\t */\n\t\ttransition: function(easingValue) {\n\t\t\tvar me = this;\n\n\t\t\tfor (var i = 0, ilen = (me.data.datasets || []).length; i < ilen; ++i) {\n\t\t\t\tif (me.isDatasetVisible(i)) {\n\t\t\t\t\tme.getDatasetMeta(i).controller.transition(easingValue);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tme.tooltip.transition(easingValue);\n\t\t},\n\n\t\t/**\n\t\t * Draws all datasets unless a plugin returns `false` to the `beforeDatasetsDraw`\n\t\t * hook, in which case, plugins will not be called on `afterDatasetsDraw`.\n\t\t * @private\n\t\t */\n\t\tdrawDatasets: function(easingValue) {\n\t\t\tvar me = this;\n\n\t\t\tif (plugins.notify(me, 'beforeDatasetsDraw', [easingValue]) === false) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// Draw datasets reversed to support proper line stacking\n\t\t\tfor (var i = (me.data.datasets || []).length - 1; i >= 0; --i) {\n\t\t\t\tif (me.isDatasetVisible(i)) {\n\t\t\t\t\tme.drawDataset(i, easingValue);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tplugins.notify(me, 'afterDatasetsDraw', [easingValue]);\n\t\t},\n\n\t\t/**\n\t\t * Draws dataset at index unless a plugin returns `false` to the `beforeDatasetDraw`\n\t\t * hook, in which case, plugins will not be called on `afterDatasetDraw`.\n\t\t * @private\n\t\t */\n\t\tdrawDataset: function(index, easingValue) {\n\t\t\tvar me = this;\n\t\t\tvar meta = me.getDatasetMeta(index);\n\t\t\tvar args = {\n\t\t\t\tmeta: meta,\n\t\t\t\tindex: index,\n\t\t\t\teasingValue: easingValue\n\t\t\t};\n\n\t\t\tif (plugins.notify(me, 'beforeDatasetDraw', [args]) === false) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tmeta.controller.draw(easingValue);\n\n\t\t\tplugins.notify(me, 'afterDatasetDraw', [args]);\n\t\t},\n\n\t\t/**\n\t\t * Draws tooltip unless a plugin returns `false` to the `beforeTooltipDraw`\n\t\t * hook, in which case, plugins will not be called on `afterTooltipDraw`.\n\t\t * @private\n\t\t */\n\t\t_drawTooltip: function(easingValue) {\n\t\t\tvar me = this;\n\t\t\tvar tooltip = me.tooltip;\n\t\t\tvar args = {\n\t\t\t\ttooltip: tooltip,\n\t\t\t\teasingValue: easingValue\n\t\t\t};\n\n\t\t\tif (plugins.notify(me, 'beforeTooltipDraw', [args]) === false) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\ttooltip.draw();\n\n\t\t\tplugins.notify(me, 'afterTooltipDraw', [args]);\n\t\t},\n\n\t\t// Get the single element that was clicked on\n\t\t// @return : An object containing the dataset index and element index of the matching element. Also contains the rectangle that was draw\n\t\tgetElementAtEvent: function(e) {\n\t\t\treturn Interaction.modes.single(this, e);\n\t\t},\n\n\t\tgetElementsAtEvent: function(e) {\n\t\t\treturn Interaction.modes.label(this, e, {intersect: true});\n\t\t},\n\n\t\tgetElementsAtXAxis: function(e) {\n\t\t\treturn Interaction.modes['x-axis'](this, e, {intersect: true});\n\t\t},\n\n\t\tgetElementsAtEventForMode: function(e, mode, options) {\n\t\t\tvar method = Interaction.modes[mode];\n\t\t\tif (typeof method === 'function') {\n\t\t\t\treturn method(this, e, options);\n\t\t\t}\n\n\t\t\treturn [];\n\t\t},\n\n\t\tgetDatasetAtEvent: function(e) {\n\t\t\treturn Interaction.modes.dataset(this, e, {intersect: true});\n\t\t},\n\n\t\tgetDatasetMeta: function(datasetIndex) {\n\t\t\tvar me = this;\n\t\t\tvar dataset = me.data.datasets[datasetIndex];\n\t\t\tif (!dataset._meta) {\n\t\t\t\tdataset._meta = {};\n\t\t\t}\n\n\t\t\tvar meta = dataset._meta[me.id];\n\t\t\tif (!meta) {\n\t\t\t\tmeta = dataset._meta[me.id] = {\n\t\t\t\t\ttype: null,\n\t\t\t\t\tdata: [],\n\t\t\t\t\tdataset: null,\n\t\t\t\t\tcontroller: null,\n\t\t\t\t\thidden: null,\t\t\t// See isDatasetVisible() comment\n\t\t\t\t\txAxisID: null,\n\t\t\t\t\tyAxisID: null\n\t\t\t\t};\n\t\t\t}\n\n\t\t\treturn meta;\n\t\t},\n\n\t\tgetVisibleDatasetCount: function() {\n\t\t\tvar count = 0;\n\t\t\tfor (var i = 0, ilen = this.data.datasets.length; i < ilen; ++i) {\n\t\t\t\tif (this.isDatasetVisible(i)) {\n\t\t\t\t\tcount++;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn count;\n\t\t},\n\n\t\tisDatasetVisible: function(datasetIndex) {\n\t\t\tvar meta = this.getDatasetMeta(datasetIndex);\n\n\t\t\t// meta.hidden is a per chart dataset hidden flag override with 3 states: if true or false,\n\t\t\t// the dataset.hidden value is ignored, else if null, the dataset hidden state is returned.\n\t\t\treturn typeof meta.hidden === 'boolean' ? !meta.hidden : !this.data.datasets[datasetIndex].hidden;\n\t\t},\n\n\t\tgenerateLegend: function() {\n\t\t\treturn this.options.legendCallback(this);\n\t\t},\n\n\t\t/**\n\t\t * @private\n\t\t */\n\t\tdestroyDatasetMeta: function(datasetIndex) {\n\t\t\tvar id = this.id;\n\t\t\tvar dataset = this.data.datasets[datasetIndex];\n\t\t\tvar meta = dataset._meta && dataset._meta[id];\n\n\t\t\tif (meta) {\n\t\t\t\tmeta.controller.destroy();\n\t\t\t\tdelete dataset._meta[id];\n\t\t\t}\n\t\t},\n\n\t\tdestroy: function() {\n\t\t\tvar me = this;\n\t\t\tvar canvas = me.canvas;\n\t\t\tvar i, ilen;\n\n\t\t\tme.stop();\n\n\t\t\t// dataset controllers need to cleanup associated data\n\t\t\tfor (i = 0, ilen = me.data.datasets.length; i < ilen; ++i) {\n\t\t\t\tme.destroyDatasetMeta(i);\n\t\t\t}\n\n\t\t\tif (canvas) {\n\t\t\t\tme.unbindEvents();\n\t\t\t\thelpers.canvas.clear(me);\n\t\t\t\tplatform.releaseContext(me.ctx);\n\t\t\t\tme.canvas = null;\n\t\t\t\tme.ctx = null;\n\t\t\t}\n\n\t\t\tplugins.notify(me, 'destroy');\n\n\t\t\tdelete Chart.instances[me.id];\n\t\t},\n\n\t\ttoBase64Image: function() {\n\t\t\treturn this.canvas.toDataURL.apply(this.canvas, arguments);\n\t\t},\n\n\t\tinitToolTip: function() {\n\t\t\tvar me = this;\n\t\t\tme.tooltip = new Tooltip({\n\t\t\t\t_chart: me,\n\t\t\t\t_chartInstance: me, // deprecated, backward compatibility\n\t\t\t\t_data: me.data,\n\t\t\t\t_options: me.options.tooltips\n\t\t\t}, me);\n\t\t},\n\n\t\t/**\n\t\t * @private\n\t\t */\n\t\tbindEvents: function() {\n\t\t\tvar me = this;\n\t\t\tvar listeners = me._listeners = {};\n\t\t\tvar listener = function() {\n\t\t\t\tme.eventHandler.apply(me, arguments);\n\t\t\t};\n\n\t\t\thelpers.each(me.options.events, function(type) {\n\t\t\t\tplatform.addEventListener(me, type, listener);\n\t\t\t\tlisteners[type] = listener;\n\t\t\t});\n\n\t\t\t// Elements used to detect size change should not be injected for non responsive charts.\n\t\t\t// See https://github.com/chartjs/Chart.js/issues/2210\n\t\t\tif (me.options.responsive) {\n\t\t\t\tlistener = function() {\n\t\t\t\t\tme.resize();\n\t\t\t\t};\n\n\t\t\t\tplatform.addEventListener(me, 'resize', listener);\n\t\t\t\tlisteners.resize = listener;\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * @private\n\t\t */\n\t\tunbindEvents: function() {\n\t\t\tvar me = this;\n\t\t\tvar listeners = me._listeners;\n\t\t\tif (!listeners) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tdelete me._listeners;\n\t\t\thelpers.each(listeners, function(listener, type) {\n\t\t\t\tplatform.removeEventListener(me, type, listener);\n\t\t\t});\n\t\t},\n\n\t\tupdateHoverStyle: function(elements, mode, enabled) {\n\t\t\tvar method = enabled ? 'setHoverStyle' : 'removeHoverStyle';\n\t\t\tvar element, i, ilen;\n\n\t\t\tfor (i = 0, ilen = elements.length; i < ilen; ++i) {\n\t\t\t\telement = elements[i];\n\t\t\t\tif (element) {\n\t\t\t\t\tthis.getDatasetMeta(element._datasetIndex).controller[method](element);\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * @private\n\t\t */\n\t\teventHandler: function(e) {\n\t\t\tvar me = this;\n\t\t\tvar tooltip = me.tooltip;\n\n\t\t\tif (plugins.notify(me, 'beforeEvent', [e]) === false) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// Buffer any update calls so that renders do not occur\n\t\t\tme._bufferedRender = true;\n\t\t\tme._bufferedRequest = null;\n\n\t\t\tvar changed = me.handleEvent(e);\n\t\t\t// for smooth tooltip animations issue #4989\n\t\t\t// the tooltip should be the source of change\n\t\t\t// Animation check workaround:\n\t\t\t// tooltip._start will be null when tooltip isn't animating\n\t\t\tif (tooltip) {\n\t\t\t\tchanged = tooltip._start\n\t\t\t\t\t? tooltip.handleEvent(e)\n\t\t\t\t\t: changed | tooltip.handleEvent(e);\n\t\t\t}\n\n\t\t\tplugins.notify(me, 'afterEvent', [e]);\n\n\t\t\tvar bufferedRequest = me._bufferedRequest;\n\t\t\tif (bufferedRequest) {\n\t\t\t\t// If we have an update that was triggered, we need to do a normal render\n\t\t\t\tme.render(bufferedRequest);\n\t\t\t} else if (changed && !me.animating) {\n\t\t\t\t// If entering, leaving, or changing elements, animate the change via pivot\n\t\t\t\tme.stop();\n\n\t\t\t\t// We only need to render at this point. Updating will cause scales to be\n\t\t\t\t// recomputed generating flicker & using more memory than necessary.\n\t\t\t\tme.render({\n\t\t\t\t\tduration: me.options.hover.animationDuration,\n\t\t\t\t\tlazy: true\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tme._bufferedRender = false;\n\t\t\tme._bufferedRequest = null;\n\n\t\t\treturn me;\n\t\t},\n\n\t\t/**\n\t\t * Handle an event\n\t\t * @private\n\t\t * @param {IEvent} event the event to handle\n\t\t * @return {Boolean} true if the chart needs to re-render\n\t\t */\n\t\thandleEvent: function(e) {\n\t\t\tvar me = this;\n\t\t\tvar options = me.options || {};\n\t\t\tvar hoverOptions = options.hover;\n\t\t\tvar changed = false;\n\n\t\t\tme.lastActive = me.lastActive || [];\n\n\t\t\t// Find Active Elements for hover and tooltips\n\t\t\tif (e.type === 'mouseout') {\n\t\t\t\tme.active = [];\n\t\t\t} else {\n\t\t\t\tme.active = me.getElementsAtEventForMode(e, hoverOptions.mode, hoverOptions);\n\t\t\t}\n\n\t\t\t// Invoke onHover hook\n\t\t\t// Need to call with native event here to not break backwards compatibility\n\t\t\thelpers.callback(options.onHover || options.hover.onHover, [e.native, me.active], me);\n\n\t\t\tif (e.type === 'mouseup' || e.type === 'click') {\n\t\t\t\tif (options.onClick) {\n\t\t\t\t\t// Use e.native here for backwards compatibility\n\t\t\t\t\toptions.onClick.call(me, e.native, me.active);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Remove styling for last active (even if it may still be active)\n\t\t\tif (me.lastActive.length) {\n\t\t\t\tme.updateHoverStyle(me.lastActive, hoverOptions.mode, false);\n\t\t\t}\n\n\t\t\t// Built in hover styling\n\t\t\tif (me.active.length && hoverOptions.mode) {\n\t\t\t\tme.updateHoverStyle(me.active, hoverOptions.mode, true);\n\t\t\t}\n\n\t\t\tchanged = !helpers.arrayEquals(me.active, me.lastActive);\n\n\t\t\t// Remember Last Actives\n\t\t\tme.lastActive = me.active;\n\n\t\t\treturn changed;\n\t\t}\n\t});\n\n\t/**\n\t * Provided for backward compatibility, use Chart instead.\n\t * @class Chart.Controller\n\t * @deprecated since version 2.6.0\n\t * @todo remove at version 3\n\t * @private\n\t */\n\tChart.Controller = Chart;\n};\n","/* MIT license */\nvar convert = require('color-convert');\nvar string = require('chartjs-color-string');\n\nvar Color = function (obj) {\n\tif (obj instanceof Color) {\n\t\treturn obj;\n\t}\n\tif (!(this instanceof Color)) {\n\t\treturn new Color(obj);\n\t}\n\n\tthis.valid = false;\n\tthis.values = {\n\t\trgb: [0, 0, 0],\n\t\thsl: [0, 0, 0],\n\t\thsv: [0, 0, 0],\n\t\thwb: [0, 0, 0],\n\t\tcmyk: [0, 0, 0, 0],\n\t\talpha: 1\n\t};\n\n\t// parse Color() argument\n\tvar vals;\n\tif (typeof obj === 'string') {\n\t\tvals = string.getRgba(obj);\n\t\tif (vals) {\n\t\t\tthis.setValues('rgb', vals);\n\t\t} else if (vals = string.getHsla(obj)) {\n\t\t\tthis.setValues('hsl', vals);\n\t\t} else if (vals = string.getHwb(obj)) {\n\t\t\tthis.setValues('hwb', vals);\n\t\t}\n\t} else if (typeof obj === 'object') {\n\t\tvals = obj;\n\t\tif (vals.r !== undefined || vals.red !== undefined) {\n\t\t\tthis.setValues('rgb', vals);\n\t\t} else if (vals.l !== undefined || vals.lightness !== undefined) {\n\t\t\tthis.setValues('hsl', vals);\n\t\t} else if (vals.v !== undefined || vals.value !== undefined) {\n\t\t\tthis.setValues('hsv', vals);\n\t\t} else if (vals.w !== undefined || vals.whiteness !== undefined) {\n\t\t\tthis.setValues('hwb', vals);\n\t\t} else if (vals.c !== undefined || vals.cyan !== undefined) {\n\t\t\tthis.setValues('cmyk', vals);\n\t\t}\n\t}\n};\n\nColor.prototype = {\n\tisValid: function () {\n\t\treturn this.valid;\n\t},\n\trgb: function () {\n\t\treturn this.setSpace('rgb', arguments);\n\t},\n\thsl: function () {\n\t\treturn this.setSpace('hsl', arguments);\n\t},\n\thsv: function () {\n\t\treturn this.setSpace('hsv', arguments);\n\t},\n\thwb: function () {\n\t\treturn this.setSpace('hwb', arguments);\n\t},\n\tcmyk: function () {\n\t\treturn this.setSpace('cmyk', arguments);\n\t},\n\n\trgbArray: function () {\n\t\treturn this.values.rgb;\n\t},\n\thslArray: function () {\n\t\treturn this.values.hsl;\n\t},\n\thsvArray: function () {\n\t\treturn this.values.hsv;\n\t},\n\thwbArray: function () {\n\t\tvar values = this.values;\n\t\tif (values.alpha !== 1) {\n\t\t\treturn values.hwb.concat([values.alpha]);\n\t\t}\n\t\treturn values.hwb;\n\t},\n\tcmykArray: function () {\n\t\treturn this.values.cmyk;\n\t},\n\trgbaArray: function () {\n\t\tvar values = this.values;\n\t\treturn values.rgb.concat([values.alpha]);\n\t},\n\thslaArray: function () {\n\t\tvar values = this.values;\n\t\treturn values.hsl.concat([values.alpha]);\n\t},\n\talpha: function (val) {\n\t\tif (val === undefined) {\n\t\t\treturn this.values.alpha;\n\t\t}\n\t\tthis.setValues('alpha', val);\n\t\treturn this;\n\t},\n\n\tred: function (val) {\n\t\treturn this.setChannel('rgb', 0, val);\n\t},\n\tgreen: function (val) {\n\t\treturn this.setChannel('rgb', 1, val);\n\t},\n\tblue: function (val) {\n\t\treturn this.setChannel('rgb', 2, val);\n\t},\n\thue: function (val) {\n\t\tif (val) {\n\t\t\tval %= 360;\n\t\t\tval = val < 0 ? 360 + val : val;\n\t\t}\n\t\treturn this.setChannel('hsl', 0, val);\n\t},\n\tsaturation: function (val) {\n\t\treturn this.setChannel('hsl', 1, val);\n\t},\n\tlightness: function (val) {\n\t\treturn this.setChannel('hsl', 2, val);\n\t},\n\tsaturationv: function (val) {\n\t\treturn this.setChannel('hsv', 1, val);\n\t},\n\twhiteness: function (val) {\n\t\treturn this.setChannel('hwb', 1, val);\n\t},\n\tblackness: function (val) {\n\t\treturn this.setChannel('hwb', 2, val);\n\t},\n\tvalue: function (val) {\n\t\treturn this.setChannel('hsv', 2, val);\n\t},\n\tcyan: function (val) {\n\t\treturn this.setChannel('cmyk', 0, val);\n\t},\n\tmagenta: function (val) {\n\t\treturn this.setChannel('cmyk', 1, val);\n\t},\n\tyellow: function (val) {\n\t\treturn this.setChannel('cmyk', 2, val);\n\t},\n\tblack: function (val) {\n\t\treturn this.setChannel('cmyk', 3, val);\n\t},\n\n\thexString: function () {\n\t\treturn string.hexString(this.values.rgb);\n\t},\n\trgbString: function () {\n\t\treturn string.rgbString(this.values.rgb, this.values.alpha);\n\t},\n\trgbaString: function () {\n\t\treturn string.rgbaString(this.values.rgb, this.values.alpha);\n\t},\n\tpercentString: function () {\n\t\treturn string.percentString(this.values.rgb, this.values.alpha);\n\t},\n\thslString: function () {\n\t\treturn string.hslString(this.values.hsl, this.values.alpha);\n\t},\n\thslaString: function () {\n\t\treturn string.hslaString(this.values.hsl, this.values.alpha);\n\t},\n\thwbString: function () {\n\t\treturn string.hwbString(this.values.hwb, this.values.alpha);\n\t},\n\tkeyword: function () {\n\t\treturn string.keyword(this.values.rgb, this.values.alpha);\n\t},\n\n\trgbNumber: function () {\n\t\tvar rgb = this.values.rgb;\n\t\treturn (rgb[0] << 16) | (rgb[1] << 8) | rgb[2];\n\t},\n\n\tluminosity: function () {\n\t\t// http://www.w3.org/TR/WCAG20/#relativeluminancedef\n\t\tvar rgb = this.values.rgb;\n\t\tvar lum = [];\n\t\tfor (var i = 0; i < rgb.length; i++) {\n\t\t\tvar chan = rgb[i] / 255;\n\t\t\tlum[i] = (chan <= 0.03928) ? chan / 12.92 : Math.pow(((chan + 0.055) / 1.055), 2.4);\n\t\t}\n\t\treturn 0.2126 * lum[0] + 0.7152 * lum[1] + 0.0722 * lum[2];\n\t},\n\n\tcontrast: function (color2) {\n\t\t// http://www.w3.org/TR/WCAG20/#contrast-ratiodef\n\t\tvar lum1 = this.luminosity();\n\t\tvar lum2 = color2.luminosity();\n\t\tif (lum1 > lum2) {\n\t\t\treturn (lum1 + 0.05) / (lum2 + 0.05);\n\t\t}\n\t\treturn (lum2 + 0.05) / (lum1 + 0.05);\n\t},\n\n\tlevel: function (color2) {\n\t\tvar contrastRatio = this.contrast(color2);\n\t\tif (contrastRatio >= 7.1) {\n\t\t\treturn 'AAA';\n\t\t}\n\n\t\treturn (contrastRatio >= 4.5) ? 'AA' : '';\n\t},\n\n\tdark: function () {\n\t\t// YIQ equation from http://24ways.org/2010/calculating-color-contrast\n\t\tvar rgb = this.values.rgb;\n\t\tvar yiq = (rgb[0] * 299 + rgb[1] * 587 + rgb[2] * 114) / 1000;\n\t\treturn yiq < 128;\n\t},\n\n\tlight: function () {\n\t\treturn !this.dark();\n\t},\n\n\tnegate: function () {\n\t\tvar rgb = [];\n\t\tfor (var i = 0; i < 3; i++) {\n\t\t\trgb[i] = 255 - this.values.rgb[i];\n\t\t}\n\t\tthis.setValues('rgb', rgb);\n\t\treturn this;\n\t},\n\n\tlighten: function (ratio) {\n\t\tvar hsl = this.values.hsl;\n\t\thsl[2] += hsl[2] * ratio;\n\t\tthis.setValues('hsl', hsl);\n\t\treturn this;\n\t},\n\n\tdarken: function (ratio) {\n\t\tvar hsl = this.values.hsl;\n\t\thsl[2] -= hsl[2] * ratio;\n\t\tthis.setValues('hsl', hsl);\n\t\treturn this;\n\t},\n\n\tsaturate: function (ratio) {\n\t\tvar hsl = this.values.hsl;\n\t\thsl[1] += hsl[1] * ratio;\n\t\tthis.setValues('hsl', hsl);\n\t\treturn this;\n\t},\n\n\tdesaturate: function (ratio) {\n\t\tvar hsl = this.values.hsl;\n\t\thsl[1] -= hsl[1] * ratio;\n\t\tthis.setValues('hsl', hsl);\n\t\treturn this;\n\t},\n\n\twhiten: function (ratio) {\n\t\tvar hwb = this.values.hwb;\n\t\thwb[1] += hwb[1] * ratio;\n\t\tthis.setValues('hwb', hwb);\n\t\treturn this;\n\t},\n\n\tblacken: function (ratio) {\n\t\tvar hwb = this.values.hwb;\n\t\thwb[2] += hwb[2] * ratio;\n\t\tthis.setValues('hwb', hwb);\n\t\treturn this;\n\t},\n\n\tgreyscale: function () {\n\t\tvar rgb = this.values.rgb;\n\t\t// http://en.wikipedia.org/wiki/Grayscale#Converting_color_to_grayscale\n\t\tvar val = rgb[0] * 0.3 + rgb[1] * 0.59 + rgb[2] * 0.11;\n\t\tthis.setValues('rgb', [val, val, val]);\n\t\treturn this;\n\t},\n\n\tclearer: function (ratio) {\n\t\tvar alpha = this.values.alpha;\n\t\tthis.setValues('alpha', alpha - (alpha * ratio));\n\t\treturn this;\n\t},\n\n\topaquer: function (ratio) {\n\t\tvar alpha = this.values.alpha;\n\t\tthis.setValues('alpha', alpha + (alpha * ratio));\n\t\treturn this;\n\t},\n\n\trotate: function (degrees) {\n\t\tvar hsl = this.values.hsl;\n\t\tvar hue = (hsl[0] + degrees) % 360;\n\t\thsl[0] = hue < 0 ? 360 + hue : hue;\n\t\tthis.setValues('hsl', hsl);\n\t\treturn this;\n\t},\n\n\t/**\n\t * Ported from sass implementation in C\n\t * https://github.com/sass/libsass/blob/0e6b4a2850092356aa3ece07c6b249f0221caced/functions.cpp#L209\n\t */\n\tmix: function (mixinColor, weight) {\n\t\tvar color1 = this;\n\t\tvar color2 = mixinColor;\n\t\tvar p = weight === undefined ? 0.5 : weight;\n\n\t\tvar w = 2 * p - 1;\n\t\tvar a = color1.alpha() - color2.alpha();\n\n\t\tvar w1 = (((w * a === -1) ? w : (w + a) / (1 + w * a)) + 1) / 2.0;\n\t\tvar w2 = 1 - w1;\n\n\t\treturn this\n\t\t\t.rgb(\n\t\t\t\tw1 * color1.red() + w2 * color2.red(),\n\t\t\t\tw1 * color1.green() + w2 * color2.green(),\n\t\t\t\tw1 * color1.blue() + w2 * color2.blue()\n\t\t\t)\n\t\t\t.alpha(color1.alpha() * p + color2.alpha() * (1 - p));\n\t},\n\n\ttoJSON: function () {\n\t\treturn this.rgb();\n\t},\n\n\tclone: function () {\n\t\t// NOTE(SB): using node-clone creates a dependency to Buffer when using browserify,\n\t\t// making the final build way to big to embed in Chart.js. So let's do it manually,\n\t\t// assuming that values to clone are 1 dimension arrays containing only numbers,\n\t\t// except 'alpha' which is a number.\n\t\tvar result = new Color();\n\t\tvar source = this.values;\n\t\tvar target = result.values;\n\t\tvar value, type;\n\n\t\tfor (var prop in source) {\n\t\t\tif (source.hasOwnProperty(prop)) {\n\t\t\t\tvalue = source[prop];\n\t\t\t\ttype = ({}).toString.call(value);\n\t\t\t\tif (type === '[object Array]') {\n\t\t\t\t\ttarget[prop] = value.slice(0);\n\t\t\t\t} else if (type === '[object Number]') {\n\t\t\t\t\ttarget[prop] = value;\n\t\t\t\t} else {\n\t\t\t\t\tconsole.error('unexpected color value:', value);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn result;\n\t}\n};\n\nColor.prototype.spaces = {\n\trgb: ['red', 'green', 'blue'],\n\thsl: ['hue', 'saturation', 'lightness'],\n\thsv: ['hue', 'saturation', 'value'],\n\thwb: ['hue', 'whiteness', 'blackness'],\n\tcmyk: ['cyan', 'magenta', 'yellow', 'black']\n};\n\nColor.prototype.maxes = {\n\trgb: [255, 255, 255],\n\thsl: [360, 100, 100],\n\thsv: [360, 100, 100],\n\thwb: [360, 100, 100],\n\tcmyk: [100, 100, 100, 100]\n};\n\nColor.prototype.getValues = function (space) {\n\tvar values = this.values;\n\tvar vals = {};\n\n\tfor (var i = 0; i < space.length; i++) {\n\t\tvals[space.charAt(i)] = values[space][i];\n\t}\n\n\tif (values.alpha !== 1) {\n\t\tvals.a = values.alpha;\n\t}\n\n\t// {r: 255, g: 255, b: 255, a: 0.4}\n\treturn vals;\n};\n\nColor.prototype.setValues = function (space, vals) {\n\tvar values = this.values;\n\tvar spaces = this.spaces;\n\tvar maxes = this.maxes;\n\tvar alpha = 1;\n\tvar i;\n\n\tthis.valid = true;\n\n\tif (space === 'alpha') {\n\t\talpha = vals;\n\t} else if (vals.length) {\n\t\t// [10, 10, 10]\n\t\tvalues[space] = vals.slice(0, space.length);\n\t\talpha = vals[space.length];\n\t} else if (vals[space.charAt(0)] !== undefined) {\n\t\t// {r: 10, g: 10, b: 10}\n\t\tfor (i = 0; i < space.length; i++) {\n\t\t\tvalues[space][i] = vals[space.charAt(i)];\n\t\t}\n\n\t\talpha = vals.a;\n\t} else if (vals[spaces[space][0]] !== undefined) {\n\t\t// {red: 10, green: 10, blue: 10}\n\t\tvar chans = spaces[space];\n\n\t\tfor (i = 0; i < space.length; i++) {\n\t\t\tvalues[space][i] = vals[chans[i]];\n\t\t}\n\n\t\talpha = vals.alpha;\n\t}\n\n\tvalues.alpha = Math.max(0, Math.min(1, (alpha === undefined ? values.alpha : alpha)));\n\n\tif (space === 'alpha') {\n\t\treturn false;\n\t}\n\n\tvar capped;\n\n\t// cap values of the space prior converting all values\n\tfor (i = 0; i < space.length; i++) {\n\t\tcapped = Math.max(0, Math.min(maxes[space][i], values[space][i]));\n\t\tvalues[space][i] = Math.round(capped);\n\t}\n\n\t// convert to all the other color spaces\n\tfor (var sname in spaces) {\n\t\tif (sname !== space) {\n\t\t\tvalues[sname] = convert[space][sname](values[space]);\n\t\t}\n\t}\n\n\treturn true;\n};\n\nColor.prototype.setSpace = function (space, args) {\n\tvar vals = args[0];\n\n\tif (vals === undefined) {\n\t\t// color.rgb()\n\t\treturn this.getValues(space);\n\t}\n\n\t// color.rgb(10, 10, 10)\n\tif (typeof vals === 'number') {\n\t\tvals = Array.prototype.slice.call(args);\n\t}\n\n\tthis.setValues(space, vals);\n\treturn this;\n};\n\nColor.prototype.setChannel = function (space, index, val) {\n\tvar svalues = this.values[space];\n\tif (val === undefined) {\n\t\t// color.red()\n\t\treturn svalues[index];\n\t} else if (val === svalues[index]) {\n\t\t// color.red(color.red())\n\t\treturn this;\n\t}\n\n\t// color.red(100)\n\tsvalues[index] = val;\n\tthis.setValues(space, svalues);\n\n\treturn this;\n};\n\nif (typeof window !== 'undefined') {\n\twindow.Color = Color;\n}\n\nmodule.exports = Color;\n","'use strict';\n\nvar defaults = require('../core/core.defaults');\nvar Element = require('../core/core.element');\nvar helpers = require('../helpers/index');\nvar layouts = require('../core/core.layouts');\n\nvar noop = helpers.noop;\n\ndefaults._set('global', {\n\ttitle: {\n\t\tdisplay: false,\n\t\tfontStyle: 'bold',\n\t\tfullWidth: true,\n\t\tlineHeight: 1.2,\n\t\tpadding: 10,\n\t\tposition: 'top',\n\t\ttext: '',\n\t\tweight: 2000         // by default greater than legend (1000) to be above\n\t}\n});\n\n/**\n * IMPORTANT: this class is exposed publicly as Chart.Legend, backward compatibility required!\n */\nvar Title = Element.extend({\n\tinitialize: function(config) {\n\t\tvar me = this;\n\t\thelpers.extend(me, config);\n\n\t\t// Contains hit boxes for each dataset (in dataset order)\n\t\tme.legendHitBoxes = [];\n\t},\n\n\t// These methods are ordered by lifecycle. Utilities then follow.\n\n\tbeforeUpdate: noop,\n\tupdate: function(maxWidth, maxHeight, margins) {\n\t\tvar me = this;\n\n\t\t// Update Lifecycle - Probably don't want to ever extend or overwrite this function ;)\n\t\tme.beforeUpdate();\n\n\t\t// Absorb the master measurements\n\t\tme.maxWidth = maxWidth;\n\t\tme.maxHeight = maxHeight;\n\t\tme.margins = margins;\n\n\t\t// Dimensions\n\t\tme.beforeSetDimensions();\n\t\tme.setDimensions();\n\t\tme.afterSetDimensions();\n\t\t// Labels\n\t\tme.beforeBuildLabels();\n\t\tme.buildLabels();\n\t\tme.afterBuildLabels();\n\n\t\t// Fit\n\t\tme.beforeFit();\n\t\tme.fit();\n\t\tme.afterFit();\n\t\t//\n\t\tme.afterUpdate();\n\n\t\treturn me.minSize;\n\n\t},\n\tafterUpdate: noop,\n\n\t//\n\n\tbeforeSetDimensions: noop,\n\tsetDimensions: function() {\n\t\tvar me = this;\n\t\t// Set the unconstrained dimension before label rotation\n\t\tif (me.isHorizontal()) {\n\t\t\t// Reset position before calculating rotation\n\t\t\tme.width = me.maxWidth;\n\t\t\tme.left = 0;\n\t\t\tme.right = me.width;\n\t\t} else {\n\t\t\tme.height = me.maxHeight;\n\n\t\t\t// Reset position before calculating rotation\n\t\t\tme.top = 0;\n\t\t\tme.bottom = me.height;\n\t\t}\n\n\t\t// Reset padding\n\t\tme.paddingLeft = 0;\n\t\tme.paddingTop = 0;\n\t\tme.paddingRight = 0;\n\t\tme.paddingBottom = 0;\n\n\t\t// Reset minSize\n\t\tme.minSize = {\n\t\t\twidth: 0,\n\t\t\theight: 0\n\t\t};\n\t},\n\tafterSetDimensions: noop,\n\n\t//\n\n\tbeforeBuildLabels: noop,\n\tbuildLabels: noop,\n\tafterBuildLabels: noop,\n\n\t//\n\n\tbeforeFit: noop,\n\tfit: function() {\n\t\tvar me = this;\n\t\tvar valueOrDefault = helpers.valueOrDefault;\n\t\tvar opts = me.options;\n\t\tvar display = opts.display;\n\t\tvar fontSize = valueOrDefault(opts.fontSize, defaults.global.defaultFontSize);\n\t\tvar minSize = me.minSize;\n\t\tvar lineCount = helpers.isArray(opts.text) ? opts.text.length : 1;\n\t\tvar lineHeight = helpers.options.toLineHeight(opts.lineHeight, fontSize);\n\t\tvar textSize = display ? (lineCount * lineHeight) + (opts.padding * 2) : 0;\n\n\t\tif (me.isHorizontal()) {\n\t\t\tminSize.width = me.maxWidth; // fill all the width\n\t\t\tminSize.height = textSize;\n\t\t} else {\n\t\t\tminSize.width = textSize;\n\t\t\tminSize.height = me.maxHeight; // fill all the height\n\t\t}\n\n\t\tme.width = minSize.width;\n\t\tme.height = minSize.height;\n\n\t},\n\tafterFit: noop,\n\n\t// Shared Methods\n\tisHorizontal: function() {\n\t\tvar pos = this.options.position;\n\t\treturn pos === 'top' || pos === 'bottom';\n\t},\n\n\t// Actually draw the title block on the canvas\n\tdraw: function() {\n\t\tvar me = this;\n\t\tvar ctx = me.ctx;\n\t\tvar valueOrDefault = helpers.valueOrDefault;\n\t\tvar opts = me.options;\n\t\tvar globalDefaults = defaults.global;\n\n\t\tif (opts.display) {\n\t\t\tvar fontSize = valueOrDefault(opts.fontSize, globalDefaults.defaultFontSize);\n\t\t\tvar fontStyle = valueOrDefault(opts.fontStyle, globalDefaults.defaultFontStyle);\n\t\t\tvar fontFamily = valueOrDefault(opts.fontFamily, globalDefaults.defaultFontFamily);\n\t\t\tvar titleFont = helpers.fontString(fontSize, fontStyle, fontFamily);\n\t\t\tvar lineHeight = helpers.options.toLineHeight(opts.lineHeight, fontSize);\n\t\t\tvar offset = lineHeight / 2 + opts.padding;\n\t\t\tvar rotation = 0;\n\t\t\tvar top = me.top;\n\t\t\tvar left = me.left;\n\t\t\tvar bottom = me.bottom;\n\t\t\tvar right = me.right;\n\t\t\tvar maxWidth, titleX, titleY;\n\n\t\t\tctx.fillStyle = valueOrDefault(opts.fontColor, globalDefaults.defaultFontColor); // render in correct colour\n\t\t\tctx.font = titleFont;\n\n\t\t\t// Horizontal\n\t\t\tif (me.isHorizontal()) {\n\t\t\t\ttitleX = left + ((right - left) / 2); // midpoint of the width\n\t\t\t\ttitleY = top + offset;\n\t\t\t\tmaxWidth = right - left;\n\t\t\t} else {\n\t\t\t\ttitleX = opts.position === 'left' ? left + offset : right - offset;\n\t\t\t\ttitleY = top + ((bottom - top) / 2);\n\t\t\t\tmaxWidth = bottom - top;\n\t\t\t\trotation = Math.PI * (opts.position === 'left' ? -0.5 : 0.5);\n\t\t\t}\n\n\t\t\tctx.save();\n\t\t\tctx.translate(titleX, titleY);\n\t\t\tctx.rotate(rotation);\n\t\t\tctx.textAlign = 'center';\n\t\t\tctx.textBaseline = 'middle';\n\n\t\t\tvar text = opts.text;\n\t\t\tif (helpers.isArray(text)) {\n\t\t\t\tvar y = 0;\n\t\t\t\tfor (var i = 0; i < text.length; ++i) {\n\t\t\t\t\tctx.fillText(text[i], 0, y, maxWidth);\n\t\t\t\t\ty += lineHeight;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tctx.fillText(text, 0, 0, maxWidth);\n\t\t\t}\n\n\t\t\tctx.restore();\n\t\t}\n\t}\n});\n\nfunction createNewTitleBlockAndAttach(chart, titleOpts) {\n\tvar title = new Title({\n\t\tctx: chart.ctx,\n\t\toptions: titleOpts,\n\t\tchart: chart\n\t});\n\n\tlayouts.configure(chart, title, titleOpts);\n\tlayouts.addBox(chart, title);\n\tchart.titleBlock = title;\n}\n\nmodule.exports = {\n\tid: 'title',\n\n\t/**\n\t * Backward compatibility: since 2.1.5, the title is registered as a plugin, making\n\t * Chart.Title obsolete. To avoid a breaking change, we export the Title as part of\n\t * the plugin, which one will be re-exposed in the chart.js file.\n\t * https://github.com/chartjs/Chart.js/pull/2640\n\t * @private\n\t */\n\t_element: Title,\n\n\tbeforeInit: function(chart) {\n\t\tvar titleOpts = chart.options.title;\n\n\t\tif (titleOpts) {\n\t\t\tcreateNewTitleBlockAndAttach(chart, titleOpts);\n\t\t}\n\t},\n\n\tbeforeUpdate: function(chart) {\n\t\tvar titleOpts = chart.options.title;\n\t\tvar titleBlock = chart.titleBlock;\n\n\t\tif (titleOpts) {\n\t\t\thelpers.mergeIf(titleOpts, defaults.global.title);\n\n\t\t\tif (titleBlock) {\n\t\t\t\tlayouts.configure(chart, titleBlock, titleOpts);\n\t\t\t\ttitleBlock.options = titleOpts;\n\t\t\t} else {\n\t\t\t\tcreateNewTitleBlockAndAttach(chart, titleOpts);\n\t\t\t}\n\t\t} else if (titleBlock) {\n\t\t\tlayouts.removeBox(chart, titleBlock);\n\t\t\tdelete chart.titleBlock;\n\t\t}\n\t}\n};\n","'use strict';\n\nvar helpers = require('../helpers/index');\nvar Scale = require('../core/core.scale');\n\n/**\n * Generate a set of linear ticks\n * @param generationOptions the options used to generate the ticks\n * @param dataRange the range of the data\n * @returns {Array<Number>} array of tick values\n */\nfunction generateTicks(generationOptions, dataRange) {\n\tvar ticks = [];\n\t// To get a \"nice\" value for the tick spacing, we will use the appropriately named\n\t// \"nice number\" algorithm. See http://stackoverflow.com/questions/8506881/nice-label-algorithm-for-charts-with-minimum-ticks\n\t// for details.\n\n\tvar factor;\n\tvar precision;\n\tvar spacing;\n\n\tif (generationOptions.stepSize && generationOptions.stepSize > 0) {\n\t\tspacing = generationOptions.stepSize;\n\t} else {\n\t\tvar niceRange = helpers.niceNum(dataRange.max - dataRange.min, false);\n\t\tspacing = helpers.niceNum(niceRange / (generationOptions.maxTicks - 1), true);\n\n\t\tprecision = generationOptions.precision;\n\t\tif (precision !== undefined) {\n\t\t\t// If the user specified a precision, round to that number of decimal places\n\t\t\tfactor = Math.pow(10, precision);\n\t\t\tspacing = Math.ceil(spacing * factor) / factor;\n\t\t}\n\t}\n\tvar niceMin = Math.floor(dataRange.min / spacing) * spacing;\n\tvar niceMax = Math.ceil(dataRange.max / spacing) * spacing;\n\n\t// If min, max and stepSize is set and they make an evenly spaced scale use it.\n\tif (!helpers.isNullOrUndef(generationOptions.min) && !helpers.isNullOrUndef(generationOptions.max) && generationOptions.stepSize) {\n\t\t// If very close to our whole number, use it.\n\t\tif (helpers.almostWhole((generationOptions.max - generationOptions.min) / generationOptions.stepSize, spacing / 1000)) {\n\t\t\tniceMin = generationOptions.min;\n\t\t\tniceMax = generationOptions.max;\n\t\t}\n\t}\n\n\tvar numSpaces = (niceMax - niceMin) / spacing;\n\t// If very close to our rounded value, use it.\n\tif (helpers.almostEquals(numSpaces, Math.round(numSpaces), spacing / 1000)) {\n\t\tnumSpaces = Math.round(numSpaces);\n\t} else {\n\t\tnumSpaces = Math.ceil(numSpaces);\n\t}\n\n\tprecision = 1;\n\tif (spacing < 1) {\n\t\tprecision = Math.pow(10, 1 - Math.floor(helpers.log10(spacing)));\n\t\tniceMin = Math.round(niceMin * precision) / precision;\n\t\tniceMax = Math.round(niceMax * precision) / precision;\n\t}\n\tticks.push(generationOptions.min !== undefined ? generationOptions.min : niceMin);\n\tfor (var j = 1; j < numSpaces; ++j) {\n\t\tticks.push(Math.round((niceMin + j * spacing) * precision) / precision);\n\t}\n\tticks.push(generationOptions.max !== undefined ? generationOptions.max : niceMax);\n\n\treturn ticks;\n}\n\nmodule.exports = function(Chart) {\n\n\tvar noop = helpers.noop;\n\n\tChart.LinearScaleBase = Scale.extend({\n\t\tgetRightValue: function(value) {\n\t\t\tif (typeof value === 'string') {\n\t\t\t\treturn +value;\n\t\t\t}\n\t\t\treturn Scale.prototype.getRightValue.call(this, value);\n\t\t},\n\n\t\thandleTickRangeOptions: function() {\n\t\t\tvar me = this;\n\t\t\tvar opts = me.options;\n\t\t\tvar tickOpts = opts.ticks;\n\n\t\t\t// If we are forcing it to begin at 0, but 0 will already be rendered on the chart,\n\t\t\t// do nothing since that would make the chart weird. If the user really wants a weird chart\n\t\t\t// axis, they can manually override it\n\t\t\tif (tickOpts.beginAtZero) {\n\t\t\t\tvar minSign = helpers.sign(me.min);\n\t\t\t\tvar maxSign = helpers.sign(me.max);\n\n\t\t\t\tif (minSign < 0 && maxSign < 0) {\n\t\t\t\t\t// move the top up to 0\n\t\t\t\t\tme.max = 0;\n\t\t\t\t} else if (minSign > 0 && maxSign > 0) {\n\t\t\t\t\t// move the bottom down to 0\n\t\t\t\t\tme.min = 0;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tvar setMin = tickOpts.min !== undefined || tickOpts.suggestedMin !== undefined;\n\t\t\tvar setMax = tickOpts.max !== undefined || tickOpts.suggestedMax !== undefined;\n\n\t\t\tif (tickOpts.min !== undefined) {\n\t\t\t\tme.min = tickOpts.min;\n\t\t\t} else if (tickOpts.suggestedMin !== undefined) {\n\t\t\t\tif (me.min === null) {\n\t\t\t\t\tme.min = tickOpts.suggestedMin;\n\t\t\t\t} else {\n\t\t\t\t\tme.min = Math.min(me.min, tickOpts.suggestedMin);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (tickOpts.max !== undefined) {\n\t\t\t\tme.max = tickOpts.max;\n\t\t\t} else if (tickOpts.suggestedMax !== undefined) {\n\t\t\t\tif (me.max === null) {\n\t\t\t\t\tme.max = tickOpts.suggestedMax;\n\t\t\t\t} else {\n\t\t\t\t\tme.max = Math.max(me.max, tickOpts.suggestedMax);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (setMin !== setMax) {\n\t\t\t\t// We set the min or the max but not both.\n\t\t\t\t// So ensure that our range is good\n\t\t\t\t// Inverted or 0 length range can happen when\n\t\t\t\t// ticks.min is set, and no datasets are visible\n\t\t\t\tif (me.min >= me.max) {\n\t\t\t\t\tif (setMin) {\n\t\t\t\t\t\tme.max = me.min + 1;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tme.min = me.max - 1;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (me.min === me.max) {\n\t\t\t\tme.max++;\n\n\t\t\t\tif (!tickOpts.beginAtZero) {\n\t\t\t\t\tme.min--;\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\tgetTickLimit: noop,\n\t\thandleDirectionalChanges: noop,\n\n\t\tbuildTicks: function() {\n\t\t\tvar me = this;\n\t\t\tvar opts = me.options;\n\t\t\tvar tickOpts = opts.ticks;\n\n\t\t\t// Figure out what the max number of ticks we can support it is based on the size of\n\t\t\t// the axis area. For now, we say that the minimum tick spacing in pixels must be 50\n\t\t\t// We also limit the maximum number of ticks to 11 which gives a nice 10 squares on\n\t\t\t// the graph. Make sure we always have at least 2 ticks\n\t\t\tvar maxTicks = me.getTickLimit();\n\t\t\tmaxTicks = Math.max(2, maxTicks);\n\n\t\t\tvar numericGeneratorOptions = {\n\t\t\t\tmaxTicks: maxTicks,\n\t\t\t\tmin: tickOpts.min,\n\t\t\t\tmax: tickOpts.max,\n\t\t\t\tprecision: tickOpts.precision,\n\t\t\t\tstepSize: helpers.valueOrDefault(tickOpts.fixedStepSize, tickOpts.stepSize)\n\t\t\t};\n\t\t\tvar ticks = me.ticks = generateTicks(numericGeneratorOptions, me);\n\n\t\t\tme.handleDirectionalChanges();\n\n\t\t\t// At this point, we need to update our max and min given the tick values since we have expanded the\n\t\t\t// range of the scale\n\t\t\tme.max = helpers.max(ticks);\n\t\t\tme.min = helpers.min(ticks);\n\n\t\t\tif (tickOpts.reverse) {\n\t\t\t\tticks.reverse();\n\n\t\t\t\tme.start = me.max;\n\t\t\t\tme.end = me.min;\n\t\t\t} else {\n\t\t\t\tme.start = me.min;\n\t\t\t\tme.end = me.max;\n\t\t\t}\n\t\t},\n\t\tconvertTicksToLabels: function() {\n\t\t\tvar me = this;\n\t\t\tme.ticksAsNumbers = me.ticks.slice();\n\t\t\tme.zeroLineIndex = me.ticks.indexOf(0);\n\n\t\t\tScale.prototype.convertTicksToLabels.call(me);\n\t\t}\n\t});\n};\n","'use strict';\n\nvar defaults = require('../core/core.defaults');\nvar helpers = require('../helpers/index');\nvar scaleService = require('../core/core.scaleService');\nvar Ticks = require('../core/core.ticks');\n\nmodule.exports = function(Chart) {\n\n\tvar defaultConfig = {\n\t\tposition: 'left',\n\t\tticks: {\n\t\t\tcallback: Ticks.formatters.linear\n\t\t}\n\t};\n\n\tvar LinearScale = Chart.LinearScaleBase.extend({\n\n\t\tdetermineDataLimits: function() {\n\t\t\tvar me = this;\n\t\t\tvar opts = me.options;\n\t\t\tvar chart = me.chart;\n\t\t\tvar data = chart.data;\n\t\t\tvar datasets = data.datasets;\n\t\t\tvar isHorizontal = me.isHorizontal();\n\t\t\tvar DEFAULT_MIN = 0;\n\t\t\tvar DEFAULT_MAX = 1;\n\n\t\t\tfunction IDMatches(meta) {\n\t\t\t\treturn isHorizontal ? meta.xAxisID === me.id : meta.yAxisID === me.id;\n\t\t\t}\n\n\t\t\t// First Calculate the range\n\t\t\tme.min = null;\n\t\t\tme.max = null;\n\n\t\t\tvar hasStacks = opts.stacked;\n\t\t\tif (hasStacks === undefined) {\n\t\t\t\thelpers.each(datasets, function(dataset, datasetIndex) {\n\t\t\t\t\tif (hasStacks) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tvar meta = chart.getDatasetMeta(datasetIndex);\n\t\t\t\t\tif (chart.isDatasetVisible(datasetIndex) && IDMatches(meta) &&\n\t\t\t\t\t\tmeta.stack !== undefined) {\n\t\t\t\t\t\thasStacks = true;\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tif (opts.stacked || hasStacks) {\n\t\t\t\tvar valuesPerStack = {};\n\n\t\t\t\thelpers.each(datasets, function(dataset, datasetIndex) {\n\t\t\t\t\tvar meta = chart.getDatasetMeta(datasetIndex);\n\t\t\t\t\tvar key = [\n\t\t\t\t\t\tmeta.type,\n\t\t\t\t\t\t// we have a separate stack for stack=undefined datasets when the opts.stacked is undefined\n\t\t\t\t\t\t((opts.stacked === undefined && meta.stack === undefined) ? datasetIndex : ''),\n\t\t\t\t\t\tmeta.stack\n\t\t\t\t\t].join('.');\n\n\t\t\t\t\tif (valuesPerStack[key] === undefined) {\n\t\t\t\t\t\tvaluesPerStack[key] = {\n\t\t\t\t\t\t\tpositiveValues: [],\n\t\t\t\t\t\t\tnegativeValues: []\n\t\t\t\t\t\t};\n\t\t\t\t\t}\n\n\t\t\t\t\t// Store these per type\n\t\t\t\t\tvar positiveValues = valuesPerStack[key].positiveValues;\n\t\t\t\t\tvar negativeValues = valuesPerStack[key].negativeValues;\n\n\t\t\t\t\tif (chart.isDatasetVisible(datasetIndex) && IDMatches(meta)) {\n\t\t\t\t\t\thelpers.each(dataset.data, function(rawValue, index) {\n\t\t\t\t\t\t\tvar value = +me.getRightValue(rawValue);\n\t\t\t\t\t\t\tif (isNaN(value) || meta.data[index].hidden) {\n\t\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tpositiveValues[index] = positiveValues[index] || 0;\n\t\t\t\t\t\t\tnegativeValues[index] = negativeValues[index] || 0;\n\n\t\t\t\t\t\t\tif (opts.relativePoints) {\n\t\t\t\t\t\t\t\tpositiveValues[index] = 100;\n\t\t\t\t\t\t\t} else if (value < 0) {\n\t\t\t\t\t\t\t\tnegativeValues[index] += value;\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tpositiveValues[index] += value;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\t\thelpers.each(valuesPerStack, function(valuesForType) {\n\t\t\t\t\tvar values = valuesForType.positiveValues.concat(valuesForType.negativeValues);\n\t\t\t\t\tvar minVal = helpers.min(values);\n\t\t\t\t\tvar maxVal = helpers.max(values);\n\t\t\t\t\tme.min = me.min === null ? minVal : Math.min(me.min, minVal);\n\t\t\t\t\tme.max = me.max === null ? maxVal : Math.max(me.max, maxVal);\n\t\t\t\t});\n\n\t\t\t} else {\n\t\t\t\thelpers.each(datasets, function(dataset, datasetIndex) {\n\t\t\t\t\tvar meta = chart.getDatasetMeta(datasetIndex);\n\t\t\t\t\tif (chart.isDatasetVisible(datasetIndex) && IDMatches(meta)) {\n\t\t\t\t\t\thelpers.each(dataset.data, function(rawValue, index) {\n\t\t\t\t\t\t\tvar value = +me.getRightValue(rawValue);\n\t\t\t\t\t\t\tif (isNaN(value) || meta.data[index].hidden) {\n\t\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif (me.min === null) {\n\t\t\t\t\t\t\t\tme.min = value;\n\t\t\t\t\t\t\t} else if (value < me.min) {\n\t\t\t\t\t\t\t\tme.min = value;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif (me.max === null) {\n\t\t\t\t\t\t\t\tme.max = value;\n\t\t\t\t\t\t\t} else if (value > me.max) {\n\t\t\t\t\t\t\t\tme.max = value;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tme.min = isFinite(me.min) && !isNaN(me.min) ? me.min : DEFAULT_MIN;\n\t\t\tme.max = isFinite(me.max) && !isNaN(me.max) ? me.max : DEFAULT_MAX;\n\n\t\t\t// Common base implementation to handle ticks.min, ticks.max, ticks.beginAtZero\n\t\t\tthis.handleTickRangeOptions();\n\t\t},\n\t\tgetTickLimit: function() {\n\t\t\tvar maxTicks;\n\t\t\tvar me = this;\n\t\t\tvar tickOpts = me.options.ticks;\n\n\t\t\tif (me.isHorizontal()) {\n\t\t\t\tmaxTicks = Math.min(tickOpts.maxTicksLimit ? tickOpts.maxTicksLimit : 11, Math.ceil(me.width / 50));\n\t\t\t} else {\n\t\t\t\t// The factor of 2 used to scale the font size has been experimentally determined.\n\t\t\t\tvar tickFontSize = helpers.valueOrDefault(tickOpts.fontSize, defaults.global.defaultFontSize);\n\t\t\t\tmaxTicks = Math.min(tickOpts.maxTicksLimit ? tickOpts.maxTicksLimit : 11, Math.ceil(me.height / (2 * tickFontSize)));\n\t\t\t}\n\n\t\t\treturn maxTicks;\n\t\t},\n\t\t// Called after the ticks are built. We need\n\t\thandleDirectionalChanges: function() {\n\t\t\tif (!this.isHorizontal()) {\n\t\t\t\t// We are in a vertical orientation. The top value is the highest. So reverse the array\n\t\t\t\tthis.ticks.reverse();\n\t\t\t}\n\t\t},\n\t\tgetLabelForIndex: function(index, datasetIndex) {\n\t\t\treturn +this.getRightValue(this.chart.data.datasets[datasetIndex].data[index]);\n\t\t},\n\t\t// Utils\n\t\tgetPixelForValue: function(value) {\n\t\t\t// This must be called after fit has been run so that\n\t\t\t// this.left, this.top, this.right, and this.bottom have been defined\n\t\t\tvar me = this;\n\t\t\tvar start = me.start;\n\n\t\t\tvar rightValue = +me.getRightValue(value);\n\t\t\tvar pixel;\n\t\t\tvar range = me.end - start;\n\n\t\t\tif (me.isHorizontal()) {\n\t\t\t\tpixel = me.left + (me.width / range * (rightValue - start));\n\t\t\t} else {\n\t\t\t\tpixel = me.bottom - (me.height / range * (rightValue - start));\n\t\t\t}\n\t\t\treturn pixel;\n\t\t},\n\t\tgetValueForPixel: function(pixel) {\n\t\t\tvar me = this;\n\t\t\tvar isHorizontal = me.isHorizontal();\n\t\t\tvar innerDimension = isHorizontal ? me.width : me.height;\n\t\t\tvar offset = (isHorizontal ? pixel - me.left : me.bottom - pixel) / innerDimension;\n\t\t\treturn me.start + ((me.end - me.start) * offset);\n\t\t},\n\t\tgetPixelForTick: function(index) {\n\t\t\treturn this.getPixelForValue(this.ticksAsNumbers[index]);\n\t\t}\n\t});\n\n\tscaleService.registerScaleType('linear', LinearScale, defaultConfig);\n};\n","'use strict';\n\nmodule.exports = function(Chart) {\n\n\tChart.Line = function(context, config) {\n\t\tconfig.type = 'line';\n\n\t\treturn new Chart(context, config);\n\t};\n\n};\n","'use strict';\n\nvar defaults = require('../core/core.defaults');\nvar elements = require('../elements/index');\nvar helpers = require('../helpers/index');\n\ndefaults._set('line', {\n\tshowLines: true,\n\tspanGaps: false,\n\n\thover: {\n\t\tmode: 'label'\n\t},\n\n\tscales: {\n\t\txAxes: [{\n\t\t\ttype: 'category',\n\t\t\tid: 'x-axis-0'\n\t\t}],\n\t\tyAxes: [{\n\t\t\ttype: 'linear',\n\t\t\tid: 'y-axis-0'\n\t\t}]\n\t}\n});\n\nmodule.exports = function(Chart) {\n\n\tfunction lineEnabled(dataset, options) {\n\t\treturn helpers.valueOrDefault(dataset.showLine, options.showLines);\n\t}\n\n\tChart.controllers.line = Chart.DatasetController.extend({\n\n\t\tdatasetElementType: elements.Line,\n\n\t\tdataElementType: elements.Point,\n\n\t\tupdate: function(reset) {\n\t\t\tvar me = this;\n\t\t\tvar meta = me.getMeta();\n\t\t\tvar line = meta.dataset;\n\t\t\tvar points = meta.data || [];\n\t\t\tvar options = me.chart.options;\n\t\t\tvar lineElementOptions = options.elements.line;\n\t\t\tvar scale = me.getScaleForId(meta.yAxisID);\n\t\t\tvar i, ilen, custom;\n\t\t\tvar dataset = me.getDataset();\n\t\t\tvar showLine = lineEnabled(dataset, options);\n\n\t\t\t// Update Line\n\t\t\tif (showLine) {\n\t\t\t\tcustom = line.custom || {};\n\n\t\t\t\t// Compatibility: If the properties are defined with only the old name, use those values\n\t\t\t\tif ((dataset.tension !== undefined) && (dataset.lineTension === undefined)) {\n\t\t\t\t\tdataset.lineTension = dataset.tension;\n\t\t\t\t}\n\n\t\t\t\t// Utility\n\t\t\t\tline._scale = scale;\n\t\t\t\tline._datasetIndex = me.index;\n\t\t\t\t// Data\n\t\t\t\tline._children = points;\n\t\t\t\t// Model\n\t\t\t\tline._model = {\n\t\t\t\t\t// Appearance\n\t\t\t\t\t// The default behavior of lines is to break at null values, according\n\t\t\t\t\t// to https://github.com/chartjs/Chart.js/issues/2435#issuecomment-216718158\n\t\t\t\t\t// This option gives lines the ability to span gaps\n\t\t\t\t\tspanGaps: dataset.spanGaps ? dataset.spanGaps : options.spanGaps,\n\t\t\t\t\ttension: custom.tension ? custom.tension : helpers.valueOrDefault(dataset.lineTension, lineElementOptions.tension),\n\t\t\t\t\tbackgroundColor: custom.backgroundColor ? custom.backgroundColor : (dataset.backgroundColor || lineElementOptions.backgroundColor),\n\t\t\t\t\tborderWidth: custom.borderWidth ? custom.borderWidth : (dataset.borderWidth || lineElementOptions.borderWidth),\n\t\t\t\t\tborderColor: custom.borderColor ? custom.borderColor : (dataset.borderColor || lineElementOptions.borderColor),\n\t\t\t\t\tborderCapStyle: custom.borderCapStyle ? custom.borderCapStyle : (dataset.borderCapStyle || lineElementOptions.borderCapStyle),\n\t\t\t\t\tborderDash: custom.borderDash ? custom.borderDash : (dataset.borderDash || lineElementOptions.borderDash),\n\t\t\t\t\tborderDashOffset: custom.borderDashOffset ? custom.borderDashOffset : (dataset.borderDashOffset || lineElementOptions.borderDashOffset),\n\t\t\t\t\tborderJoinStyle: custom.borderJoinStyle ? custom.borderJoinStyle : (dataset.borderJoinStyle || lineElementOptions.borderJoinStyle),\n\t\t\t\t\tfill: custom.fill ? custom.fill : (dataset.fill !== undefined ? dataset.fill : lineElementOptions.fill),\n\t\t\t\t\tsteppedLine: custom.steppedLine ? custom.steppedLine : helpers.valueOrDefault(dataset.steppedLine, lineElementOptions.stepped),\n\t\t\t\t\tcubicInterpolationMode: custom.cubicInterpolationMode ? custom.cubicInterpolationMode : helpers.valueOrDefault(dataset.cubicInterpolationMode, lineElementOptions.cubicInterpolationMode),\n\t\t\t\t};\n\n\t\t\t\tline.pivot();\n\t\t\t}\n\n\t\t\t// Update Points\n\t\t\tfor (i = 0, ilen = points.length; i < ilen; ++i) {\n\t\t\t\tme.updateElement(points[i], i, reset);\n\t\t\t}\n\n\t\t\tif (showLine && line._model.tension !== 0) {\n\t\t\t\tme.updateBezierControlPoints();\n\t\t\t}\n\n\t\t\t// Now pivot the point for animation\n\t\t\tfor (i = 0, ilen = points.length; i < ilen; ++i) {\n\t\t\t\tpoints[i].pivot();\n\t\t\t}\n\t\t},\n\n\t\tgetPointBackgroundColor: function(point, index) {\n\t\t\tvar backgroundColor = this.chart.options.elements.point.backgroundColor;\n\t\t\tvar dataset = this.getDataset();\n\t\t\tvar custom = point.custom || {};\n\n\t\t\tif (custom.backgroundColor) {\n\t\t\t\tbackgroundColor = custom.backgroundColor;\n\t\t\t} else if (dataset.pointBackgroundColor) {\n\t\t\t\tbackgroundColor = helpers.valueAtIndexOrDefault(dataset.pointBackgroundColor, index, backgroundColor);\n\t\t\t} else if (dataset.backgroundColor) {\n\t\t\t\tbackgroundColor = dataset.backgroundColor;\n\t\t\t}\n\n\t\t\treturn backgroundColor;\n\t\t},\n\n\t\tgetPointBorderColor: function(point, index) {\n\t\t\tvar borderColor = this.chart.options.elements.point.borderColor;\n\t\t\tvar dataset = this.getDataset();\n\t\t\tvar custom = point.custom || {};\n\n\t\t\tif (custom.borderColor) {\n\t\t\t\tborderColor = custom.borderColor;\n\t\t\t} else if (dataset.pointBorderColor) {\n\t\t\t\tborderColor = helpers.valueAtIndexOrDefault(dataset.pointBorderColor, index, borderColor);\n\t\t\t} else if (dataset.borderColor) {\n\t\t\t\tborderColor = dataset.borderColor;\n\t\t\t}\n\n\t\t\treturn borderColor;\n\t\t},\n\n\t\tgetPointBorderWidth: function(point, index) {\n\t\t\tvar borderWidth = this.chart.options.elements.point.borderWidth;\n\t\t\tvar dataset = this.getDataset();\n\t\t\tvar custom = point.custom || {};\n\n\t\t\tif (!isNaN(custom.borderWidth)) {\n\t\t\t\tborderWidth = custom.borderWidth;\n\t\t\t} else if (!isNaN(dataset.pointBorderWidth) || helpers.isArray(dataset.pointBorderWidth)) {\n\t\t\t\tborderWidth = helpers.valueAtIndexOrDefault(dataset.pointBorderWidth, index, borderWidth);\n\t\t\t} else if (!isNaN(dataset.borderWidth)) {\n\t\t\t\tborderWidth = dataset.borderWidth;\n\t\t\t}\n\n\t\t\treturn borderWidth;\n\t\t},\n\n\t\tgetPointRotation: function(point, index) {\n\t\t\tvar pointRotation = this.chart.options.elements.point.rotation;\n\t\t\tvar dataset = this.getDataset();\n\t\t\tvar custom = point.custom || {};\n\n\t\t\tif (!isNaN(custom.rotation)) {\n\t\t\t\tpointRotation = custom.rotation;\n\t\t\t} else if (!isNaN(dataset.pointRotation) || helpers.isArray(dataset.pointRotation)) {\n\t\t\t\tpointRotation = helpers.valueAtIndexOrDefault(dataset.pointRotation, index, pointRotation);\n\t\t\t}\n\t\t\treturn pointRotation;\n\t\t},\n\n\t\tupdateElement: function(point, index, reset) {\n\t\t\tvar me = this;\n\t\t\tvar meta = me.getMeta();\n\t\t\tvar custom = point.custom || {};\n\t\t\tvar dataset = me.getDataset();\n\t\t\tvar datasetIndex = me.index;\n\t\t\tvar value = dataset.data[index];\n\t\t\tvar yScale = me.getScaleForId(meta.yAxisID);\n\t\t\tvar xScale = me.getScaleForId(meta.xAxisID);\n\t\t\tvar pointOptions = me.chart.options.elements.point;\n\t\t\tvar x, y;\n\n\t\t\t// Compatibility: If the properties are defined with only the old name, use those values\n\t\t\tif ((dataset.radius !== undefined) && (dataset.pointRadius === undefined)) {\n\t\t\t\tdataset.pointRadius = dataset.radius;\n\t\t\t}\n\t\t\tif ((dataset.hitRadius !== undefined) && (dataset.pointHitRadius === undefined)) {\n\t\t\t\tdataset.pointHitRadius = dataset.hitRadius;\n\t\t\t}\n\n\t\t\tx = xScale.getPixelForValue(typeof value === 'object' ? value : NaN, index, datasetIndex);\n\t\t\ty = reset ? yScale.getBasePixel() : me.calculatePointY(value, index, datasetIndex);\n\n\t\t\t// Utility\n\t\t\tpoint._xScale = xScale;\n\t\t\tpoint._yScale = yScale;\n\t\t\tpoint._datasetIndex = datasetIndex;\n\t\t\tpoint._index = index;\n\n\t\t\t// Desired view properties\n\t\t\tpoint._model = {\n\t\t\t\tx: x,\n\t\t\t\ty: y,\n\t\t\t\tskip: custom.skip || isNaN(x) || isNaN(y),\n\t\t\t\t// Appearance\n\t\t\t\tradius: custom.radius || helpers.valueAtIndexOrDefault(dataset.pointRadius, index, pointOptions.radius),\n\t\t\t\tpointStyle: custom.pointStyle || helpers.valueAtIndexOrDefault(dataset.pointStyle, index, pointOptions.pointStyle),\n\t\t\t\trotation: me.getPointRotation(point, index),\n\t\t\t\tbackgroundColor: me.getPointBackgroundColor(point, index),\n\t\t\t\tborderColor: me.getPointBorderColor(point, index),\n\t\t\t\tborderWidth: me.getPointBorderWidth(point, index),\n\t\t\t\ttension: meta.dataset._model ? meta.dataset._model.tension : 0,\n\t\t\t\tsteppedLine: meta.dataset._model ? meta.dataset._model.steppedLine : false,\n\t\t\t\t// Tooltip\n\t\t\t\thitRadius: custom.hitRadius || helpers.valueAtIndexOrDefault(dataset.pointHitRadius, index, pointOptions.hitRadius)\n\t\t\t};\n\t\t},\n\n\t\tcalculatePointY: function(value, index, datasetIndex) {\n\t\t\tvar me = this;\n\t\t\tvar chart = me.chart;\n\t\t\tvar meta = me.getMeta();\n\t\t\tvar yScale = me.getScaleForId(meta.yAxisID);\n\t\t\tvar sumPos = 0;\n\t\t\tvar sumNeg = 0;\n\t\t\tvar i, ds, dsMeta;\n\n\t\t\tif (yScale.options.stacked) {\n\t\t\t\tfor (i = 0; i < datasetIndex; i++) {\n\t\t\t\t\tds = chart.data.datasets[i];\n\t\t\t\t\tdsMeta = chart.getDatasetMeta(i);\n\t\t\t\t\tif (dsMeta.type === 'line' && dsMeta.yAxisID === yScale.id && chart.isDatasetVisible(i)) {\n\t\t\t\t\t\tvar stackedRightValue = Number(yScale.getRightValue(ds.data[index]));\n\t\t\t\t\t\tif (stackedRightValue < 0) {\n\t\t\t\t\t\t\tsumNeg += stackedRightValue || 0;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tsumPos += stackedRightValue || 0;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tvar rightValue = Number(yScale.getRightValue(value));\n\t\t\t\tif (rightValue < 0) {\n\t\t\t\t\treturn yScale.getPixelForValue(sumNeg + rightValue);\n\t\t\t\t}\n\t\t\t\treturn yScale.getPixelForValue(sumPos + rightValue);\n\t\t\t}\n\n\t\t\treturn yScale.getPixelForValue(value);\n\t\t},\n\n\t\tupdateBezierControlPoints: function() {\n\t\t\tvar me = this;\n\t\t\tvar meta = me.getMeta();\n\t\t\tvar area = me.chart.chartArea;\n\t\t\tvar points = (meta.data || []);\n\t\t\tvar i, ilen, point, model, controlPoints;\n\n\t\t\t// Only consider points that are drawn in case the spanGaps option is used\n\t\t\tif (meta.dataset._model.spanGaps) {\n\t\t\t\tpoints = points.filter(function(pt) {\n\t\t\t\t\treturn !pt._model.skip;\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tfunction capControlPoint(pt, min, max) {\n\t\t\t\treturn Math.max(Math.min(pt, max), min);\n\t\t\t}\n\n\t\t\tif (meta.dataset._model.cubicInterpolationMode === 'monotone') {\n\t\t\t\thelpers.splineCurveMonotone(points);\n\t\t\t} else {\n\t\t\t\tfor (i = 0, ilen = points.length; i < ilen; ++i) {\n\t\t\t\t\tpoint = points[i];\n\t\t\t\t\tmodel = point._model;\n\t\t\t\t\tcontrolPoints = helpers.splineCurve(\n\t\t\t\t\t\thelpers.previousItem(points, i)._model,\n\t\t\t\t\t\tmodel,\n\t\t\t\t\t\thelpers.nextItem(points, i)._model,\n\t\t\t\t\t\tmeta.dataset._model.tension\n\t\t\t\t\t);\n\t\t\t\t\tmodel.controlPointPreviousX = controlPoints.previous.x;\n\t\t\t\t\tmodel.controlPointPreviousY = controlPoints.previous.y;\n\t\t\t\t\tmodel.controlPointNextX = controlPoints.next.x;\n\t\t\t\t\tmodel.controlPointNextY = controlPoints.next.y;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (me.chart.options.elements.line.capBezierPoints) {\n\t\t\t\tfor (i = 0, ilen = points.length; i < ilen; ++i) {\n\t\t\t\t\tmodel = points[i]._model;\n\t\t\t\t\tmodel.controlPointPreviousX = capControlPoint(model.controlPointPreviousX, area.left, area.right);\n\t\t\t\t\tmodel.controlPointPreviousY = capControlPoint(model.controlPointPreviousY, area.top, area.bottom);\n\t\t\t\t\tmodel.controlPointNextX = capControlPoint(model.controlPointNextX, area.left, area.right);\n\t\t\t\t\tmodel.controlPointNextY = capControlPoint(model.controlPointNextY, area.top, area.bottom);\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\n\t\tdraw: function() {\n\t\t\tvar me = this;\n\t\t\tvar chart = me.chart;\n\t\t\tvar meta = me.getMeta();\n\t\t\tvar points = meta.data || [];\n\t\t\tvar area = chart.chartArea;\n\t\t\tvar ilen = points.length;\n\t\t\tvar halfBorderWidth;\n\t\t\tvar i = 0;\n\n\t\t\tif (lineEnabled(me.getDataset(), chart.options)) {\n\t\t\t\thalfBorderWidth = (meta.dataset._model.borderWidth || 0) / 2;\n\n\t\t\t\thelpers.canvas.clipArea(chart.ctx, {\n\t\t\t\t\tleft: area.left,\n\t\t\t\t\tright: area.right,\n\t\t\t\t\ttop: area.top - halfBorderWidth,\n\t\t\t\t\tbottom: area.bottom + halfBorderWidth\n\t\t\t\t});\n\n\t\t\t\tmeta.dataset.draw();\n\n\t\t\t\thelpers.canvas.unclipArea(chart.ctx);\n\t\t\t}\n\n\t\t\t// Draw the points\n\t\t\tfor (; i < ilen; ++i) {\n\t\t\t\tpoints[i].draw(area);\n\t\t\t}\n\t\t},\n\n\t\tsetHoverStyle: function(element) {\n\t\t\t// Point\n\t\t\tvar dataset = this.chart.data.datasets[element._datasetIndex];\n\t\t\tvar index = element._index;\n\t\t\tvar custom = element.custom || {};\n\t\t\tvar model = element._model;\n\n\t\t\telement.$previousStyle = {\n\t\t\t\tbackgroundColor: model.backgroundColor,\n\t\t\t\tborderColor: model.borderColor,\n\t\t\t\tborderWidth: model.borderWidth,\n\t\t\t\tradius: model.radius\n\t\t\t};\n\n\t\t\tmodel.backgroundColor = custom.hoverBackgroundColor || helpers.valueAtIndexOrDefault(dataset.pointHoverBackgroundColor, index, helpers.getHoverColor(model.backgroundColor));\n\t\t\tmodel.borderColor = custom.hoverBorderColor || helpers.valueAtIndexOrDefault(dataset.pointHoverBorderColor, index, helpers.getHoverColor(model.borderColor));\n\t\t\tmodel.borderWidth = custom.hoverBorderWidth || helpers.valueAtIndexOrDefault(dataset.pointHoverBorderWidth, index, model.borderWidth);\n\t\t\tmodel.radius = custom.hoverRadius || helpers.valueAtIndexOrDefault(dataset.pointHoverRadius, index, this.chart.options.elements.point.hoverRadius);\n\t\t},\n\t});\n};\n","'use strict';\n\nvar helpers = require('../helpers/index');\n\nfunction filterByPosition(array, position) {\n\treturn helpers.where(array, function(v) {\n\t\treturn v.position === position;\n\t});\n}\n\nfunction sortByWeight(array, reverse) {\n\tarray.forEach(function(v, i) {\n\t\tv._tmpIndex_ = i;\n\t\treturn v;\n\t});\n\tarray.sort(function(a, b) {\n\t\tvar v0 = reverse ? b : a;\n\t\tvar v1 = reverse ? a : b;\n\t\treturn v0.weight === v1.weight ?\n\t\t\tv0._tmpIndex_ - v1._tmpIndex_ :\n\t\t\tv0.weight - v1.weight;\n\t});\n\tarray.forEach(function(v) {\n\t\tdelete v._tmpIndex_;\n\t});\n}\n\n/**\n * @interface ILayoutItem\n * @prop {String} position - The position of the item in the chart layout. Possible values are\n * 'left', 'top', 'right', 'bottom', and 'chartArea'\n * @prop {Number} weight - The weight used to sort the item. Higher weights are further away from the chart area\n * @prop {Boolean} fullWidth - if true, and the item is horizontal, then push vertical boxes down\n * @prop {Function} isHorizontal - returns true if the layout item is horizontal (ie. top or bottom)\n * @prop {Function} update - Takes two parameters: width and height. Returns size of item\n * @prop {Function} getPadding -  Returns an object with padding on the edges\n * @prop {Number} width - Width of item. Must be valid after update()\n * @prop {Number} height - Height of item. Must be valid after update()\n * @prop {Number} left - Left edge of the item. Set by layout system and cannot be used in update\n * @prop {Number} top - Top edge of the item. Set by layout system and cannot be used in update\n * @prop {Number} right - Right edge of the item. Set by layout system and cannot be used in update\n * @prop {Number} bottom - Bottom edge of the item. Set by layout system and cannot be used in update\n */\n\n// The layout service is very self explanatory.  It's responsible for the layout within a chart.\n// Scales, Legends and Plugins all rely on the layout service and can easily register to be placed anywhere they need\n// It is this service's responsibility of carrying out that layout.\nmodule.exports = {\n\tdefaults: {},\n\n\t/**\n\t * Register a box to a chart.\n\t * A box is simply a reference to an object that requires layout. eg. Scales, Legend, Title.\n\t * @param {Chart} chart - the chart to use\n\t * @param {ILayoutItem} item - the item to add to be layed out\n\t */\n\taddBox: function(chart, item) {\n\t\tif (!chart.boxes) {\n\t\t\tchart.boxes = [];\n\t\t}\n\n\t\t// initialize item with default values\n\t\titem.fullWidth = item.fullWidth || false;\n\t\titem.position = item.position || 'top';\n\t\titem.weight = item.weight || 0;\n\n\t\tchart.boxes.push(item);\n\t},\n\n\t/**\n\t * Remove a layoutItem from a chart\n\t * @param {Chart} chart - the chart to remove the box from\n\t * @param {Object} layoutItem - the item to remove from the layout\n\t */\n\tremoveBox: function(chart, layoutItem) {\n\t\tvar index = chart.boxes ? chart.boxes.indexOf(layoutItem) : -1;\n\t\tif (index !== -1) {\n\t\t\tchart.boxes.splice(index, 1);\n\t\t}\n\t},\n\n\t/**\n\t * Sets (or updates) options on the given `item`.\n\t * @param {Chart} chart - the chart in which the item lives (or will be added to)\n\t * @param {Object} item - the item to configure with the given options\n\t * @param {Object} options - the new item options.\n\t */\n\tconfigure: function(chart, item, options) {\n\t\tvar props = ['fullWidth', 'position', 'weight'];\n\t\tvar ilen = props.length;\n\t\tvar i = 0;\n\t\tvar prop;\n\n\t\tfor (; i < ilen; ++i) {\n\t\t\tprop = props[i];\n\t\t\tif (options.hasOwnProperty(prop)) {\n\t\t\t\titem[prop] = options[prop];\n\t\t\t}\n\t\t}\n\t},\n\n\t/**\n\t * Fits boxes of the given chart into the given size by having each box measure itself\n\t * then running a fitting algorithm\n\t * @param {Chart} chart - the chart\n\t * @param {Number} width - the width to fit into\n\t * @param {Number} height - the height to fit into\n\t */\n\tupdate: function(chart, width, height) {\n\t\tif (!chart) {\n\t\t\treturn;\n\t\t}\n\n\t\tvar layoutOptions = chart.options.layout || {};\n\t\tvar padding = helpers.options.toPadding(layoutOptions.padding);\n\t\tvar leftPadding = padding.left;\n\t\tvar rightPadding = padding.right;\n\t\tvar topPadding = padding.top;\n\t\tvar bottomPadding = padding.bottom;\n\n\t\tvar leftBoxes = filterByPosition(chart.boxes, 'left');\n\t\tvar rightBoxes = filterByPosition(chart.boxes, 'right');\n\t\tvar topBoxes = filterByPosition(chart.boxes, 'top');\n\t\tvar bottomBoxes = filterByPosition(chart.boxes, 'bottom');\n\t\tvar chartAreaBoxes = filterByPosition(chart.boxes, 'chartArea');\n\n\t\t// Sort boxes by weight. A higher weight is further away from the chart area\n\t\tsortByWeight(leftBoxes, true);\n\t\tsortByWeight(rightBoxes, false);\n\t\tsortByWeight(topBoxes, true);\n\t\tsortByWeight(bottomBoxes, false);\n\n\t\t// Essentially we now have any number of boxes on each of the 4 sides.\n\t\t// Our canvas looks like the following.\n\t\t// The areas L1 and L2 are the left axes. R1 is the right axis, T1 is the top axis and\n\t\t// B1 is the bottom axis\n\t\t// There are also 4 quadrant-like locations (left to right instead of clockwise) reserved for chart overlays\n\t\t// These locations are single-box locations only, when trying to register a chartArea location that is already taken,\n\t\t// an error will be thrown.\n\t\t//\n\t\t// |----------------------------------------------------|\n\t\t// |                  T1 (Full Width)                   |\n\t\t// |----------------------------------------------------|\n\t\t// |    |    |                 T2                  |    |\n\t\t// |    |----|-------------------------------------|----|\n\t\t// |    |    | C1 |                           | C2 |    |\n\t\t// |    |    |----|                           |----|    |\n\t\t// |    |    |                                     |    |\n\t\t// | L1 | L2 |           ChartArea (C0)            | R1 |\n\t\t// |    |    |                                     |    |\n\t\t// |    |    |----|                           |----|    |\n\t\t// |    |    | C3 |                           | C4 |    |\n\t\t// |    |----|-------------------------------------|----|\n\t\t// |    |    |                 B1                  |    |\n\t\t// |----------------------------------------------------|\n\t\t// |                  B2 (Full Width)                   |\n\t\t// |----------------------------------------------------|\n\t\t//\n\t\t// What we do to find the best sizing, we do the following\n\t\t// 1. Determine the minimum size of the chart area.\n\t\t// 2. Split the remaining width equally between each vertical axis\n\t\t// 3. Split the remaining height equally between each horizontal axis\n\t\t// 4. Give each layout the maximum size it can be. The layout will return it's minimum size\n\t\t// 5. Adjust the sizes of each axis based on it's minimum reported size.\n\t\t// 6. Refit each axis\n\t\t// 7. Position each axis in the final location\n\t\t// 8. Tell the chart the final location of the chart area\n\t\t// 9. Tell any axes that overlay the chart area the positions of the chart area\n\n\t\t// Step 1\n\t\tvar chartWidth = width - leftPadding - rightPadding;\n\t\tvar chartHeight = height - topPadding - bottomPadding;\n\t\tvar chartAreaWidth = chartWidth / 2; // min 50%\n\t\tvar chartAreaHeight = chartHeight / 2; // min 50%\n\n\t\t// Step 2\n\t\tvar verticalBoxWidth = (width - chartAreaWidth) / (leftBoxes.length + rightBoxes.length);\n\n\t\t// Step 3\n\t\tvar horizontalBoxHeight = (height - chartAreaHeight) / (topBoxes.length + bottomBoxes.length);\n\n\t\t// Step 4\n\t\tvar maxChartAreaWidth = chartWidth;\n\t\tvar maxChartAreaHeight = chartHeight;\n\t\tvar minBoxSizes = [];\n\n\t\tfunction getMinimumBoxSize(box) {\n\t\t\tvar minSize;\n\t\t\tvar isHorizontal = box.isHorizontal();\n\n\t\t\tif (isHorizontal) {\n\t\t\t\tminSize = box.update(box.fullWidth ? chartWidth : maxChartAreaWidth, horizontalBoxHeight);\n\t\t\t\tmaxChartAreaHeight -= minSize.height;\n\t\t\t} else {\n\t\t\t\tminSize = box.update(verticalBoxWidth, maxChartAreaHeight);\n\t\t\t\tmaxChartAreaWidth -= minSize.width;\n\t\t\t}\n\n\t\t\tminBoxSizes.push({\n\t\t\t\thorizontal: isHorizontal,\n\t\t\t\tminSize: minSize,\n\t\t\t\tbox: box,\n\t\t\t});\n\t\t}\n\n\t\thelpers.each(leftBoxes.concat(rightBoxes, topBoxes, bottomBoxes), getMinimumBoxSize);\n\n\t\t// If a horizontal box has padding, we move the left boxes over to avoid ugly charts (see issue #2478)\n\t\tvar maxHorizontalLeftPadding = 0;\n\t\tvar maxHorizontalRightPadding = 0;\n\t\tvar maxVerticalTopPadding = 0;\n\t\tvar maxVerticalBottomPadding = 0;\n\n\t\thelpers.each(topBoxes.concat(bottomBoxes), function(horizontalBox) {\n\t\t\tif (horizontalBox.getPadding) {\n\t\t\t\tvar boxPadding = horizontalBox.getPadding();\n\t\t\t\tmaxHorizontalLeftPadding = Math.max(maxHorizontalLeftPadding, boxPadding.left);\n\t\t\t\tmaxHorizontalRightPadding = Math.max(maxHorizontalRightPadding, boxPadding.right);\n\t\t\t}\n\t\t});\n\n\t\thelpers.each(leftBoxes.concat(rightBoxes), function(verticalBox) {\n\t\t\tif (verticalBox.getPadding) {\n\t\t\t\tvar boxPadding = verticalBox.getPadding();\n\t\t\t\tmaxVerticalTopPadding = Math.max(maxVerticalTopPadding, boxPadding.top);\n\t\t\t\tmaxVerticalBottomPadding = Math.max(maxVerticalBottomPadding, boxPadding.bottom);\n\t\t\t}\n\t\t});\n\n\t\t// At this point, maxChartAreaHeight and maxChartAreaWidth are the size the chart area could\n\t\t// be if the axes are drawn at their minimum sizes.\n\t\t// Steps 5 & 6\n\t\tvar totalLeftBoxesWidth = leftPadding;\n\t\tvar totalRightBoxesWidth = rightPadding;\n\t\tvar totalTopBoxesHeight = topPadding;\n\t\tvar totalBottomBoxesHeight = bottomPadding;\n\n\t\t// Function to fit a box\n\t\tfunction fitBox(box) {\n\t\t\tvar minBoxSize = helpers.findNextWhere(minBoxSizes, function(minBox) {\n\t\t\t\treturn minBox.box === box;\n\t\t\t});\n\n\t\t\tif (minBoxSize) {\n\t\t\t\tif (box.isHorizontal()) {\n\t\t\t\t\tvar scaleMargin = {\n\t\t\t\t\t\tleft: Math.max(totalLeftBoxesWidth, maxHorizontalLeftPadding),\n\t\t\t\t\t\tright: Math.max(totalRightBoxesWidth, maxHorizontalRightPadding),\n\t\t\t\t\t\ttop: 0,\n\t\t\t\t\t\tbottom: 0\n\t\t\t\t\t};\n\n\t\t\t\t\t// Don't use min size here because of label rotation. When the labels are rotated, their rotation highly depends\n\t\t\t\t\t// on the margin. Sometimes they need to increase in size slightly\n\t\t\t\t\tbox.update(box.fullWidth ? chartWidth : maxChartAreaWidth, chartHeight / 2, scaleMargin);\n\t\t\t\t} else {\n\t\t\t\t\tbox.update(minBoxSize.minSize.width, maxChartAreaHeight);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// Update, and calculate the left and right margins for the horizontal boxes\n\t\thelpers.each(leftBoxes.concat(rightBoxes), fitBox);\n\n\t\thelpers.each(leftBoxes, function(box) {\n\t\t\ttotalLeftBoxesWidth += box.width;\n\t\t});\n\n\t\thelpers.each(rightBoxes, function(box) {\n\t\t\ttotalRightBoxesWidth += box.width;\n\t\t});\n\n\t\t// Set the Left and Right margins for the horizontal boxes\n\t\thelpers.each(topBoxes.concat(bottomBoxes), fitBox);\n\n\t\t// Figure out how much margin is on the top and bottom of the vertical boxes\n\t\thelpers.each(topBoxes, function(box) {\n\t\t\ttotalTopBoxesHeight += box.height;\n\t\t});\n\n\t\thelpers.each(bottomBoxes, function(box) {\n\t\t\ttotalBottomBoxesHeight += box.height;\n\t\t});\n\n\t\tfunction finalFitVerticalBox(box) {\n\t\t\tvar minBoxSize = helpers.findNextWhere(minBoxSizes, function(minSize) {\n\t\t\t\treturn minSize.box === box;\n\t\t\t});\n\n\t\t\tvar scaleMargin = {\n\t\t\t\tleft: 0,\n\t\t\t\tright: 0,\n\t\t\t\ttop: totalTopBoxesHeight,\n\t\t\t\tbottom: totalBottomBoxesHeight\n\t\t\t};\n\n\t\t\tif (minBoxSize) {\n\t\t\t\tbox.update(minBoxSize.minSize.width, maxChartAreaHeight, scaleMargin);\n\t\t\t}\n\t\t}\n\n\t\t// Let the left layout know the final margin\n\t\thelpers.each(leftBoxes.concat(rightBoxes), finalFitVerticalBox);\n\n\t\t// Recalculate because the size of each layout might have changed slightly due to the margins (label rotation for instance)\n\t\ttotalLeftBoxesWidth = leftPadding;\n\t\ttotalRightBoxesWidth = rightPadding;\n\t\ttotalTopBoxesHeight = topPadding;\n\t\ttotalBottomBoxesHeight = bottomPadding;\n\n\t\thelpers.each(leftBoxes, function(box) {\n\t\t\ttotalLeftBoxesWidth += box.width;\n\t\t});\n\n\t\thelpers.each(rightBoxes, function(box) {\n\t\t\ttotalRightBoxesWidth += box.width;\n\t\t});\n\n\t\thelpers.each(topBoxes, function(box) {\n\t\t\ttotalTopBoxesHeight += box.height;\n\t\t});\n\t\thelpers.each(bottomBoxes, function(box) {\n\t\t\ttotalBottomBoxesHeight += box.height;\n\t\t});\n\n\t\t// We may be adding some padding to account for rotated x axis labels\n\t\tvar leftPaddingAddition = Math.max(maxHorizontalLeftPadding - totalLeftBoxesWidth, 0);\n\t\ttotalLeftBoxesWidth += leftPaddingAddition;\n\t\ttotalRightBoxesWidth += Math.max(maxHorizontalRightPadding - totalRightBoxesWidth, 0);\n\n\t\tvar topPaddingAddition = Math.max(maxVerticalTopPadding - totalTopBoxesHeight, 0);\n\t\ttotalTopBoxesHeight += topPaddingAddition;\n\t\ttotalBottomBoxesHeight += Math.max(maxVerticalBottomPadding - totalBottomBoxesHeight, 0);\n\n\t\t// Figure out if our chart area changed. This would occur if the dataset layout label rotation\n\t\t// changed due to the application of the margins in step 6. Since we can only get bigger, this is safe to do\n\t\t// without calling `fit` again\n\t\tvar newMaxChartAreaHeight = height - totalTopBoxesHeight - totalBottomBoxesHeight;\n\t\tvar newMaxChartAreaWidth = width - totalLeftBoxesWidth - totalRightBoxesWidth;\n\n\t\tif (newMaxChartAreaWidth !== maxChartAreaWidth || newMaxChartAreaHeight !== maxChartAreaHeight) {\n\t\t\thelpers.each(leftBoxes, function(box) {\n\t\t\t\tbox.height = newMaxChartAreaHeight;\n\t\t\t});\n\n\t\t\thelpers.each(rightBoxes, function(box) {\n\t\t\t\tbox.height = newMaxChartAreaHeight;\n\t\t\t});\n\n\t\t\thelpers.each(topBoxes, function(box) {\n\t\t\t\tif (!box.fullWidth) {\n\t\t\t\t\tbox.width = newMaxChartAreaWidth;\n\t\t\t\t}\n\t\t\t});\n\n\t\t\thelpers.each(bottomBoxes, function(box) {\n\t\t\t\tif (!box.fullWidth) {\n\t\t\t\t\tbox.width = newMaxChartAreaWidth;\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tmaxChartAreaHeight = newMaxChartAreaHeight;\n\t\t\tmaxChartAreaWidth = newMaxChartAreaWidth;\n\t\t}\n\n\t\t// Step 7 - Position the boxes\n\t\tvar left = leftPadding + leftPaddingAddition;\n\t\tvar top = topPadding + topPaddingAddition;\n\n\t\tfunction placeBox(box) {\n\t\t\tif (box.isHorizontal()) {\n\t\t\t\tbox.left = box.fullWidth ? leftPadding : totalLeftBoxesWidth;\n\t\t\t\tbox.right = box.fullWidth ? width - rightPadding : totalLeftBoxesWidth + maxChartAreaWidth;\n\t\t\t\tbox.top = top;\n\t\t\t\tbox.bottom = top + box.height;\n\n\t\t\t\t// Move to next point\n\t\t\t\ttop = box.bottom;\n\n\t\t\t} else {\n\n\t\t\t\tbox.left = left;\n\t\t\t\tbox.right = left + box.width;\n\t\t\t\tbox.top = totalTopBoxesHeight;\n\t\t\t\tbox.bottom = totalTopBoxesHeight + maxChartAreaHeight;\n\n\t\t\t\t// Move to next point\n\t\t\t\tleft = box.right;\n\t\t\t}\n\t\t}\n\n\t\thelpers.each(leftBoxes.concat(topBoxes), placeBox);\n\n\t\t// Account for chart width and height\n\t\tleft += maxChartAreaWidth;\n\t\ttop += maxChartAreaHeight;\n\n\t\thelpers.each(rightBoxes, placeBox);\n\t\thelpers.each(bottomBoxes, placeBox);\n\n\t\t// Step 8\n\t\tchart.chartArea = {\n\t\t\tleft: totalLeftBoxesWidth,\n\t\t\ttop: totalTopBoxesHeight,\n\t\t\tright: totalLeftBoxesWidth + maxChartAreaWidth,\n\t\t\tbottom: totalTopBoxesHeight + maxChartAreaHeight\n\t\t};\n\n\t\t// Step 9\n\t\thelpers.each(chartAreaBoxes, function(box) {\n\t\t\tbox.left = chart.chartArea.left;\n\t\t\tbox.top = chart.chartArea.top;\n\t\t\tbox.right = chart.chartArea.right;\n\t\t\tbox.bottom = chart.chartArea.bottom;\n\n\t\t\tbox.update(maxChartAreaWidth, maxChartAreaHeight);\n\t\t});\n\t}\n};\n","/**\n * Chart.Platform implementation for targeting a web browser\n */\n\n'use strict';\n\nvar helpers = require('../helpers/index');\n\nvar EXPANDO_KEY = '$chartjs';\nvar CSS_PREFIX = 'chartjs-';\nvar CSS_RENDER_MONITOR = CSS_PREFIX + 'render-monitor';\nvar CSS_RENDER_ANIMATION = CSS_PREFIX + 'render-animation';\nvar ANIMATION_START_EVENTS = ['animationstart', 'webkitAnimationStart'];\n\n/**\n * DOM event types -> Chart.js event types.\n * Note: only events with different types are mapped.\n * @see https://developer.mozilla.org/en-US/docs/Web/Events\n */\nvar EVENT_TYPES = {\n\ttouchstart: 'mousedown',\n\ttouchmove: 'mousemove',\n\ttouchend: 'mouseup',\n\tpointerenter: 'mouseenter',\n\tpointerdown: 'mousedown',\n\tpointermove: 'mousemove',\n\tpointerup: 'mouseup',\n\tpointerleave: 'mouseout',\n\tpointerout: 'mouseout'\n};\n\n/**\n * The \"used\" size is the final value of a dimension property after all calculations have\n * been performed. This method uses the computed style of `element` but returns undefined\n * if the computed style is not expressed in pixels. That can happen in some cases where\n * `element` has a size relative to its parent and this last one is not yet displayed,\n * for example because of `display: none` on a parent node.\n * @see https://developer.mozilla.org/en-US/docs/Web/CSS/used_value\n * @returns {Number} Size in pixels or undefined if unknown.\n */\nfunction readUsedSize(element, property) {\n\tvar value = helpers.getStyle(element, property);\n\tvar matches = value && value.match(/^(\\d+)(\\.\\d+)?px$/);\n\treturn matches ? Number(matches[1]) : undefined;\n}\n\n/**\n * Initializes the canvas style and render size without modifying the canvas display size,\n * since responsiveness is handled by the controller.resize() method. The config is used\n * to determine the aspect ratio to apply in case no explicit height has been specified.\n */\nfunction initCanvas(canvas, config) {\n\tvar style = canvas.style;\n\n\t// NOTE(SB) canvas.getAttribute('width') !== canvas.width: in the first case it\n\t// returns null or '' if no explicit value has been set to the canvas attribute.\n\tvar renderHeight = canvas.getAttribute('height');\n\tvar renderWidth = canvas.getAttribute('width');\n\n\t// Chart.js modifies some canvas values that we want to restore on destroy\n\tcanvas[EXPANDO_KEY] = {\n\t\tinitial: {\n\t\t\theight: renderHeight,\n\t\t\twidth: renderWidth,\n\t\t\tstyle: {\n\t\t\t\tdisplay: style.display,\n\t\t\t\theight: style.height,\n\t\t\t\twidth: style.width\n\t\t\t}\n\t\t}\n\t};\n\n\t// Force canvas to display as block to avoid extra space caused by inline\n\t// elements, which would interfere with the responsive resize process.\n\t// https://github.com/chartjs/Chart.js/issues/2538\n\tstyle.display = style.display || 'block';\n\n\tif (renderWidth === null || renderWidth === '') {\n\t\tvar displayWidth = readUsedSize(canvas, 'width');\n\t\tif (displayWidth !== undefined) {\n\t\t\tcanvas.width = displayWidth;\n\t\t}\n\t}\n\n\tif (renderHeight === null || renderHeight === '') {\n\t\tif (canvas.style.height === '') {\n\t\t\t// If no explicit render height and style height, let's apply the aspect ratio,\n\t\t\t// which one can be specified by the user but also by charts as default option\n\t\t\t// (i.e. options.aspectRatio). If not specified, use canvas aspect ratio of 2.\n\t\t\tcanvas.height = canvas.width / (config.options.aspectRatio || 2);\n\t\t} else {\n\t\t\tvar displayHeight = readUsedSize(canvas, 'height');\n\t\t\tif (displayWidth !== undefined) {\n\t\t\t\tcanvas.height = displayHeight;\n\t\t\t}\n\t\t}\n\t}\n\n\treturn canvas;\n}\n\n/**\n * Detects support for options object argument in addEventListener.\n * https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/addEventListener#Safely_detecting_option_support\n * @private\n */\nvar supportsEventListenerOptions = (function() {\n\tvar supports = false;\n\ttry {\n\t\tvar options = Object.defineProperty({}, 'passive', {\n\t\t\tget: function() {\n\t\t\t\tsupports = true;\n\t\t\t}\n\t\t});\n\t\twindow.addEventListener('e', null, options);\n\t} catch (e) {\n\t\t// continue regardless of error\n\t}\n\treturn supports;\n}());\n\n// Default passive to true as expected by Chrome for 'touchstart' and 'touchend' events.\n// https://github.com/chartjs/Chart.js/issues/4287\nvar eventListenerOptions = supportsEventListenerOptions ? {passive: true} : false;\n\nfunction addEventListener(node, type, listener) {\n\tnode.addEventListener(type, listener, eventListenerOptions);\n}\n\nfunction removeEventListener(node, type, listener) {\n\tnode.removeEventListener(type, listener, eventListenerOptions);\n}\n\nfunction createEvent(type, chart, x, y, nativeEvent) {\n\treturn {\n\t\ttype: type,\n\t\tchart: chart,\n\t\tnative: nativeEvent || null,\n\t\tx: x !== undefined ? x : null,\n\t\ty: y !== undefined ? y : null,\n\t};\n}\n\nfunction fromNativeEvent(event, chart) {\n\tvar type = EVENT_TYPES[event.type] || event.type;\n\tvar pos = helpers.getRelativePosition(event, chart);\n\treturn createEvent(type, chart, pos.x, pos.y, event);\n}\n\nfunction throttled(fn, thisArg) {\n\tvar ticking = false;\n\tvar args = [];\n\n\treturn function() {\n\t\targs = Array.prototype.slice.call(arguments);\n\t\tthisArg = thisArg || this;\n\n\t\tif (!ticking) {\n\t\t\tticking = true;\n\t\t\thelpers.requestAnimFrame.call(window, function() {\n\t\t\t\tticking = false;\n\t\t\t\tfn.apply(thisArg, args);\n\t\t\t});\n\t\t}\n\t};\n}\n\n// Implementation based on https://github.com/marcj/css-element-queries\nfunction createResizer(handler) {\n\tvar resizer = document.createElement('div');\n\tvar cls = CSS_PREFIX + 'size-monitor';\n\tvar maxSize = 1000000;\n\tvar style =\n\t\t'position:absolute;' +\n\t\t'left:0;' +\n\t\t'top:0;' +\n\t\t'right:0;' +\n\t\t'bottom:0;' +\n\t\t'overflow:hidden;' +\n\t\t'pointer-events:none;' +\n\t\t'visibility:hidden;' +\n\t\t'z-index:-1;';\n\n\tresizer.style.cssText = style;\n\tresizer.className = cls;\n\tresizer.innerHTML =\n\t\t'<div class=\"' + cls + '-expand\" style=\"' + style + '\">' +\n\t\t\t'<div style=\"' +\n\t\t\t\t'position:absolute;' +\n\t\t\t\t'width:' + maxSize + 'px;' +\n\t\t\t\t'height:' + maxSize + 'px;' +\n\t\t\t\t'left:0;' +\n\t\t\t\t'top:0\">' +\n\t\t\t'</div>' +\n\t\t'</div>' +\n\t\t'<div class=\"' + cls + '-shrink\" style=\"' + style + '\">' +\n\t\t\t'<div style=\"' +\n\t\t\t\t'position:absolute;' +\n\t\t\t\t'width:200%;' +\n\t\t\t\t'height:200%;' +\n\t\t\t\t'left:0; ' +\n\t\t\t\t'top:0\">' +\n\t\t\t'</div>' +\n\t\t'</div>';\n\n\tvar expand = resizer.childNodes[0];\n\tvar shrink = resizer.childNodes[1];\n\n\tresizer._reset = function() {\n\t\texpand.scrollLeft = maxSize;\n\t\texpand.scrollTop = maxSize;\n\t\tshrink.scrollLeft = maxSize;\n\t\tshrink.scrollTop = maxSize;\n\t};\n\tvar onScroll = function() {\n\t\tresizer._reset();\n\t\thandler();\n\t};\n\n\taddEventListener(expand, 'scroll', onScroll.bind(expand, 'expand'));\n\taddEventListener(shrink, 'scroll', onScroll.bind(shrink, 'shrink'));\n\n\treturn resizer;\n}\n\n// https://davidwalsh.name/detect-node-insertion\nfunction watchForRender(node, handler) {\n\tvar expando = node[EXPANDO_KEY] || (node[EXPANDO_KEY] = {});\n\tvar proxy = expando.renderProxy = function(e) {\n\t\tif (e.animationName === CSS_RENDER_ANIMATION) {\n\t\t\thandler();\n\t\t}\n\t};\n\n\thelpers.each(ANIMATION_START_EVENTS, function(type) {\n\t\taddEventListener(node, type, proxy);\n\t});\n\n\t// #4737: Chrome might skip the CSS animation when the CSS_RENDER_MONITOR class\n\t// is removed then added back immediately (same animation frame?). Accessing the\n\t// `offsetParent` property will force a reflow and re-evaluate the CSS animation.\n\t// https://gist.github.com/paulirish/5d52fb081b3570c81e3a#box-metrics\n\t// https://github.com/chartjs/Chart.js/issues/4737\n\texpando.reflow = !!node.offsetParent;\n\n\tnode.classList.add(CSS_RENDER_MONITOR);\n}\n\nfunction unwatchForRender(node) {\n\tvar expando = node[EXPANDO_KEY] || {};\n\tvar proxy = expando.renderProxy;\n\n\tif (proxy) {\n\t\thelpers.each(ANIMATION_START_EVENTS, function(type) {\n\t\t\tremoveEventListener(node, type, proxy);\n\t\t});\n\n\t\tdelete expando.renderProxy;\n\t}\n\n\tnode.classList.remove(CSS_RENDER_MONITOR);\n}\n\nfunction addResizeListener(node, listener, chart) {\n\tvar expando = node[EXPANDO_KEY] || (node[EXPANDO_KEY] = {});\n\n\t// Let's keep track of this added resizer and thus avoid DOM query when removing it.\n\tvar resizer = expando.resizer = createResizer(throttled(function() {\n\t\tif (expando.resizer) {\n\t\t\treturn listener(createEvent('resize', chart));\n\t\t}\n\t}));\n\n\t// The resizer needs to be attached to the node parent, so we first need to be\n\t// sure that `node` is attached to the DOM before injecting the resizer element.\n\twatchForRender(node, function() {\n\t\tif (expando.resizer) {\n\t\t\tvar container = node.parentNode;\n\t\t\tif (container && container !== resizer.parentNode) {\n\t\t\t\tcontainer.insertBefore(resizer, container.firstChild);\n\t\t\t}\n\n\t\t\t// The container size might have changed, let's reset the resizer state.\n\t\t\tresizer._reset();\n\t\t}\n\t});\n}\n\nfunction removeResizeListener(node) {\n\tvar expando = node[EXPANDO_KEY] || {};\n\tvar resizer = expando.resizer;\n\n\tdelete expando.resizer;\n\tunwatchForRender(node);\n\n\tif (resizer && resizer.parentNode) {\n\t\tresizer.parentNode.removeChild(resizer);\n\t}\n}\n\nfunction injectCSS(platform, css) {\n\t// http://stackoverflow.com/q/3922139\n\tvar style = platform._style || document.createElement('style');\n\tif (!platform._style) {\n\t\tplatform._style = style;\n\t\tcss = '/* Chart.js */\\n' + css;\n\t\tstyle.setAttribute('type', 'text/css');\n\t\tdocument.getElementsByTagName('head')[0].appendChild(style);\n\t}\n\n\tstyle.appendChild(document.createTextNode(css));\n}\n\nmodule.exports = {\n\t/**\n\t * This property holds whether this platform is enabled for the current environment.\n\t * Currently used by platform.js to select the proper implementation.\n\t * @private\n\t */\n\t_enabled: typeof window !== 'undefined' && typeof document !== 'undefined',\n\n\tinitialize: function() {\n\t\tvar keyframes = 'from{opacity:0.99}to{opacity:1}';\n\n\t\tinjectCSS(this,\n\t\t\t// DOM rendering detection\n\t\t\t// https://davidwalsh.name/detect-node-insertion\n\t\t\t'@-webkit-keyframes ' + CSS_RENDER_ANIMATION + '{' + keyframes + '}' +\n\t\t\t'@keyframes ' + CSS_RENDER_ANIMATION + '{' + keyframes + '}' +\n\t\t\t'.' + CSS_RENDER_MONITOR + '{' +\n\t\t\t\t'-webkit-animation:' + CSS_RENDER_ANIMATION + ' 0.001s;' +\n\t\t\t\t'animation:' + CSS_RENDER_ANIMATION + ' 0.001s;' +\n\t\t\t'}'\n\t\t);\n\t},\n\n\tacquireContext: function(item, config) {\n\t\tif (typeof item === 'string') {\n\t\t\titem = document.getElementById(item);\n\t\t} else if (item.length) {\n\t\t\t// Support for array based queries (such as jQuery)\n\t\t\titem = item[0];\n\t\t}\n\n\t\tif (item && item.canvas) {\n\t\t\t// Support for any object associated to a canvas (including a context2d)\n\t\t\titem = item.canvas;\n\t\t}\n\n\t\t// To prevent canvas fingerprinting, some add-ons undefine the getContext\n\t\t// method, for example: https://github.com/kkapsner/CanvasBlocker\n\t\t// https://github.com/chartjs/Chart.js/issues/2807\n\t\tvar context = item && item.getContext && item.getContext('2d');\n\n\t\t// `instanceof HTMLCanvasElement/CanvasRenderingContext2D` fails when the item is\n\t\t// inside an iframe or when running in a protected environment. We could guess the\n\t\t// types from their toString() value but let's keep things flexible and assume it's\n\t\t// a sufficient condition if the item has a context2D which has item as `canvas`.\n\t\t// https://github.com/chartjs/Chart.js/issues/3887\n\t\t// https://github.com/chartjs/Chart.js/issues/4102\n\t\t// https://github.com/chartjs/Chart.js/issues/4152\n\t\tif (context && context.canvas === item) {\n\t\t\tinitCanvas(item, config);\n\t\t\treturn context;\n\t\t}\n\n\t\treturn null;\n\t},\n\n\treleaseContext: function(context) {\n\t\tvar canvas = context.canvas;\n\t\tif (!canvas[EXPANDO_KEY]) {\n\t\t\treturn;\n\t\t}\n\n\t\tvar initial = canvas[EXPANDO_KEY].initial;\n\t\t['height', 'width'].forEach(function(prop) {\n\t\t\tvar value = initial[prop];\n\t\t\tif (helpers.isNullOrUndef(value)) {\n\t\t\t\tcanvas.removeAttribute(prop);\n\t\t\t} else {\n\t\t\t\tcanvas.setAttribute(prop, value);\n\t\t\t}\n\t\t});\n\n\t\thelpers.each(initial.style || {}, function(value, key) {\n\t\t\tcanvas.style[key] = value;\n\t\t});\n\n\t\t// The canvas render size might have been changed (and thus the state stack discarded),\n\t\t// we can't use save() and restore() to restore the initial state. So make sure that at\n\t\t// least the canvas context is reset to the default state by setting the canvas width.\n\t\t// https://www.w3.org/TR/2011/WD-html5-20110525/the-canvas-element.html\n\t\tcanvas.width = canvas.width;\n\n\t\tdelete canvas[EXPANDO_KEY];\n\t},\n\n\taddEventListener: function(chart, type, listener) {\n\t\tvar canvas = chart.canvas;\n\t\tif (type === 'resize') {\n\t\t\t// Note: the resize event is not supported on all browsers.\n\t\t\taddResizeListener(canvas, listener, chart);\n\t\t\treturn;\n\t\t}\n\n\t\tvar expando = listener[EXPANDO_KEY] || (listener[EXPANDO_KEY] = {});\n\t\tvar proxies = expando.proxies || (expando.proxies = {});\n\t\tvar proxy = proxies[chart.id + '_' + type] = function(event) {\n\t\t\tlistener(fromNativeEvent(event, chart));\n\t\t};\n\n\t\taddEventListener(canvas, type, proxy);\n\t},\n\n\tremoveEventListener: function(chart, type, listener) {\n\t\tvar canvas = chart.canvas;\n\t\tif (type === 'resize') {\n\t\t\t// Note: the resize event is not supported on all browsers.\n\t\t\tremoveResizeListener(canvas, listener);\n\t\t\treturn;\n\t\t}\n\n\t\tvar expando = listener[EXPANDO_KEY] || {};\n\t\tvar proxies = expando.proxies || {};\n\t\tvar proxy = proxies[chart.id + '_' + type];\n\t\tif (!proxy) {\n\t\t\treturn;\n\t\t}\n\n\t\tremoveEventListener(canvas, type, proxy);\n\t}\n};\n\n// DEPRECATIONS\n\n/**\n * Provided for backward compatibility, use EventTarget.addEventListener instead.\n * EventTarget.addEventListener compatibility: Chrome, Opera 7, Safari, FF1.5+, IE9+\n * @see https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/addEventListener\n * @function Chart.helpers.addEvent\n * @deprecated since version 2.7.0\n * @todo remove at version 3\n * @private\n */\nhelpers.addEvent = addEventListener;\n\n/**\n * Provided for backward compatibility, use EventTarget.removeEventListener instead.\n * EventTarget.removeEventListener compatibility: Chrome, Opera 7, Safari, FF1.5+, IE9+\n * @see https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/removeEventListener\n * @function Chart.helpers.removeEvent\n * @deprecated since version 2.7.0\n * @todo remove at version 3\n * @private\n */\nhelpers.removeEvent = removeEventListener;\n","/* global window: false */\n'use strict';\n\nvar defaults = require('./core.defaults');\nvar helpers = require('../helpers/index');\n\ndefaults._set('global', {\n\tanimation: {\n\t\tduration: 1000,\n\t\teasing: 'easeOutQuart',\n\t\tonProgress: helpers.noop,\n\t\tonComplete: helpers.noop\n\t}\n});\n\nmodule.exports = {\n\tframeDuration: 17,\n\tanimations: [],\n\tdropFrames: 0,\n\trequest: null,\n\n\t/**\n\t * @param {Chart} chart - The chart to animate.\n\t * @param {Chart.Animation} animation - The animation that we will animate.\n\t * @param {Number} duration - The animation duration in ms.\n\t * @param {Boolean} lazy - if true, the chart is not marked as animating to enable more responsive interactions\n\t */\n\taddAnimation: function(chart, animation, duration, lazy) {\n\t\tvar animations = this.animations;\n\t\tvar i, ilen;\n\n\t\tanimation.chart = chart;\n\n\t\tif (!lazy) {\n\t\t\tchart.animating = true;\n\t\t}\n\n\t\tfor (i = 0, ilen = animations.length; i < ilen; ++i) {\n\t\t\tif (animations[i].chart === chart) {\n\t\t\t\tanimations[i] = animation;\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\n\t\tanimations.push(animation);\n\n\t\t// If there are no animations queued, manually kickstart a digest, for lack of a better word\n\t\tif (animations.length === 1) {\n\t\t\tthis.requestAnimationFrame();\n\t\t}\n\t},\n\n\tcancelAnimation: function(chart) {\n\t\tvar index = helpers.findIndex(this.animations, function(animation) {\n\t\t\treturn animation.chart === chart;\n\t\t});\n\n\t\tif (index !== -1) {\n\t\t\tthis.animations.splice(index, 1);\n\t\t\tchart.animating = false;\n\t\t}\n\t},\n\n\trequestAnimationFrame: function() {\n\t\tvar me = this;\n\t\tif (me.request === null) {\n\t\t\t// Skip animation frame requests until the active one is executed.\n\t\t\t// This can happen when processing mouse events, e.g. 'mousemove'\n\t\t\t// and 'mouseout' events will trigger multiple renders.\n\t\t\tme.request = helpers.requestAnimFrame.call(window, function() {\n\t\t\t\tme.request = null;\n\t\t\t\tme.startDigest();\n\t\t\t});\n\t\t}\n\t},\n\n\t/**\n\t * @private\n\t */\n\tstartDigest: function() {\n\t\tvar me = this;\n\t\tvar startTime = Date.now();\n\t\tvar framesToDrop = 0;\n\n\t\tif (me.dropFrames > 1) {\n\t\t\tframesToDrop = Math.floor(me.dropFrames);\n\t\t\tme.dropFrames = me.dropFrames % 1;\n\t\t}\n\n\t\tme.advance(1 + framesToDrop);\n\n\t\tvar endTime = Date.now();\n\n\t\tme.dropFrames += (endTime - startTime) / me.frameDuration;\n\n\t\t// Do we have more stuff to animate?\n\t\tif (me.animations.length > 0) {\n\t\t\tme.requestAnimationFrame();\n\t\t}\n\t},\n\n\t/**\n\t * @private\n\t */\n\tadvance: function(count) {\n\t\tvar animations = this.animations;\n\t\tvar animation, chart;\n\t\tvar i = 0;\n\n\t\twhile (i < animations.length) {\n\t\t\tanimation = animations[i];\n\t\t\tchart = animation.chart;\n\n\t\t\tanimation.currentStep = (animation.currentStep || 0) + count;\n\t\t\tanimation.currentStep = Math.min(animation.currentStep, animation.numSteps);\n\n\t\t\thelpers.callback(animation.render, [chart, animation], chart);\n\t\t\thelpers.callback(animation.onAnimationProgress, [animation], chart);\n\n\t\t\tif (animation.currentStep >= animation.numSteps) {\n\t\t\t\thelpers.callback(animation.onAnimationComplete, [animation], chart);\n\t\t\t\tchart.animating = false;\n\t\t\t\tanimations.splice(i, 1);\n\t\t\t} else {\n\t\t\t\t++i;\n\t\t\t}\n\t\t}\n\t}\n};\n","'use strict';\n\nvar defaults = require('../core/core.defaults');\nvar elements = require('../elements/index');\nvar helpers = require('../helpers/index');\n\ndefaults._set('bubble', {\n\thover: {\n\t\tmode: 'single'\n\t},\n\n\tscales: {\n\t\txAxes: [{\n\t\t\ttype: 'linear', // bubble should probably use a linear scale by default\n\t\t\tposition: 'bottom',\n\t\t\tid: 'x-axis-0' // need an ID so datasets can reference the scale\n\t\t}],\n\t\tyAxes: [{\n\t\t\ttype: 'linear',\n\t\t\tposition: 'left',\n\t\t\tid: 'y-axis-0'\n\t\t}]\n\t},\n\n\ttooltips: {\n\t\tcallbacks: {\n\t\t\ttitle: function() {\n\t\t\t\t// Title doesn't make sense for scatter since we format the data as a point\n\t\t\t\treturn '';\n\t\t\t},\n\t\t\tlabel: function(item, data) {\n\t\t\t\tvar datasetLabel = data.datasets[item.datasetIndex].label || '';\n\t\t\t\tvar dataPoint = data.datasets[item.datasetIndex].data[item.index];\n\t\t\t\treturn datasetLabel + ': (' + item.xLabel + ', ' + item.yLabel + ', ' + dataPoint.r + ')';\n\t\t\t}\n\t\t}\n\t}\n});\n\n\nmodule.exports = function(Chart) {\n\n\tChart.controllers.bubble = Chart.DatasetController.extend({\n\t\t/**\n\t\t * @protected\n\t\t */\n\t\tdataElementType: elements.Point,\n\n\t\t/**\n\t\t * @protected\n\t\t */\n\t\tupdate: function(reset) {\n\t\t\tvar me = this;\n\t\t\tvar meta = me.getMeta();\n\t\t\tvar points = meta.data;\n\n\t\t\t// Update Points\n\t\t\thelpers.each(points, function(point, index) {\n\t\t\t\tme.updateElement(point, index, reset);\n\t\t\t});\n\t\t},\n\n\t\t/**\n\t\t * @protected\n\t\t */\n\t\tupdateElement: function(point, index, reset) {\n\t\t\tvar me = this;\n\t\t\tvar meta = me.getMeta();\n\t\t\tvar custom = point.custom || {};\n\t\t\tvar xScale = me.getScaleForId(meta.xAxisID);\n\t\t\tvar yScale = me.getScaleForId(meta.yAxisID);\n\t\t\tvar options = me._resolveElementOptions(point, index);\n\t\t\tvar data = me.getDataset().data[index];\n\t\t\tvar dsIndex = me.index;\n\n\t\t\tvar x = reset ? xScale.getPixelForDecimal(0.5) : xScale.getPixelForValue(typeof data === 'object' ? data : NaN, index, dsIndex);\n\t\t\tvar y = reset ? yScale.getBasePixel() : yScale.getPixelForValue(data, index, dsIndex);\n\n\t\t\tpoint._xScale = xScale;\n\t\t\tpoint._yScale = yScale;\n\t\t\tpoint._options = options;\n\t\t\tpoint._datasetIndex = dsIndex;\n\t\t\tpoint._index = index;\n\t\t\tpoint._model = {\n\t\t\t\tbackgroundColor: options.backgroundColor,\n\t\t\t\tborderColor: options.borderColor,\n\t\t\t\tborderWidth: options.borderWidth,\n\t\t\t\thitRadius: options.hitRadius,\n\t\t\t\tpointStyle: options.pointStyle,\n\t\t\t\trotation: options.rotation,\n\t\t\t\tradius: reset ? 0 : options.radius,\n\t\t\t\tskip: custom.skip || isNaN(x) || isNaN(y),\n\t\t\t\tx: x,\n\t\t\t\ty: y,\n\t\t\t};\n\n\t\t\tpoint.pivot();\n\t\t},\n\n\t\t/**\n\t\t * @protected\n\t\t */\n\t\tsetHoverStyle: function(point) {\n\t\t\tvar model = point._model;\n\t\t\tvar options = point._options;\n\t\t\tpoint.$previousStyle = {\n\t\t\t\tbackgroundColor: model.backgroundColor,\n\t\t\t\tborderColor: model.borderColor,\n\t\t\t\tborderWidth: model.borderWidth,\n\t\t\t\tradius: model.radius\n\t\t\t};\n\t\t\tmodel.backgroundColor = helpers.valueOrDefault(options.hoverBackgroundColor, helpers.getHoverColor(options.backgroundColor));\n\t\t\tmodel.borderColor = helpers.valueOrDefault(options.hoverBorderColor, helpers.getHoverColor(options.borderColor));\n\t\t\tmodel.borderWidth = helpers.valueOrDefault(options.hoverBorderWidth, options.borderWidth);\n\t\t\tmodel.radius = options.radius + options.hoverRadius;\n\t\t},\n\n\t\t/**\n\t\t * @private\n\t\t */\n\t\t_resolveElementOptions: function(point, index) {\n\t\t\tvar me = this;\n\t\t\tvar chart = me.chart;\n\t\t\tvar datasets = chart.data.datasets;\n\t\t\tvar dataset = datasets[me.index];\n\t\t\tvar custom = point.custom || {};\n\t\t\tvar options = chart.options.elements.point;\n\t\t\tvar resolve = helpers.options.resolve;\n\t\t\tvar data = dataset.data[index];\n\t\t\tvar values = {};\n\t\t\tvar i, ilen, key;\n\n\t\t\t// Scriptable options\n\t\t\tvar context = {\n\t\t\t\tchart: chart,\n\t\t\t\tdataIndex: index,\n\t\t\t\tdataset: dataset,\n\t\t\t\tdatasetIndex: me.index\n\t\t\t};\n\n\t\t\tvar keys = [\n\t\t\t\t'backgroundColor',\n\t\t\t\t'borderColor',\n\t\t\t\t'borderWidth',\n\t\t\t\t'hoverBackgroundColor',\n\t\t\t\t'hoverBorderColor',\n\t\t\t\t'hoverBorderWidth',\n\t\t\t\t'hoverRadius',\n\t\t\t\t'hitRadius',\n\t\t\t\t'pointStyle',\n\t\t\t\t'rotation'\n\t\t\t];\n\n\t\t\tfor (i = 0, ilen = keys.length; i < ilen; ++i) {\n\t\t\t\tkey = keys[i];\n\t\t\t\tvalues[key] = resolve([\n\t\t\t\t\tcustom[key],\n\t\t\t\t\tdataset[key],\n\t\t\t\t\toptions[key]\n\t\t\t\t], context, index);\n\t\t\t}\n\n\t\t\t// Custom radius resolution\n\t\t\tvalues.radius = resolve([\n\t\t\t\tcustom.radius,\n\t\t\t\tdata ? data.r : undefined,\n\t\t\t\tdataset.radius,\n\t\t\t\toptions.radius\n\t\t\t], context, index);\n\t\t\treturn values;\n\t\t}\n\t});\n};\n"],"sourceRoot":""}